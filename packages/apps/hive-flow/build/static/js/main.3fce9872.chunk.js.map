{"version":3,"sources":["../../../shared/hexhive-utils/src/color.ts","gqless/index.ts","gqless/schema.generated.ts","../../../core/hexhive-ui/src/components/sidebar/Sidebar.tsx","../../../core/hexhive-ui/src/components/file-viewer/DocViewer.tsx","../../../core/hexhive-ui/src/components/file-viewer/FileViewer.tsx","../../../core/hexhive-ui/src/components/modals/file-dialog/FileContent.tsx","../../../core/hexhive-ui/src/components/modals/file-dialog/file-dialog.tsx","../../../core/hexhive-ui/src/components/modals/planning-modal/search-field.tsx","../../../core/hexhive-ui/src/components/color-dot/index.tsx","../../../core/hexhive-ui/src/components/modals/planning-modal/index.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/tabs/clone-tab.tsx","../../../core/hexhive-ui/src/components/transfer-list/index.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/tabs/plant-tab.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/tabs/staff-tab.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/tabs/note-tab.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/tabs/add-tab.tsx","../../../core/hexhive-ui/src/components/avatar-list/index.tsx","../../../core/hexhive-ui/src/components/manager-list/index.tsx","../../../core/hexhive-ui/src/components/modals/schedule-modal/utils/index.ts","../../../core/hexhive-ui/src/components/modals/schedule-modal/index.tsx","../../../core/hexhive-ui/src/components/date-selector/DateSelector.tsx","../../../core/hexhive-ui/src/assets/FileHex.tsx","../../../core/hexhive-ui/src/components/schedule-view/context.tsx","../../../core/hexhive-ui/src/components/schedule-view/card/content.tsx","../../../core/hexhive-ui/src/components/schedule-view/card/footer.tsx","../../../core/hexhive-ui/src/components/schedule-view/card/header.tsx","../../../core/hexhive-ui/src/components/schedule-view/card/index.tsx","../../../core/hexhive-ui/src/components/schedule-view/container.tsx","../../../core/hexhive-ui/src/components/schedule-view/index.tsx","../../../core/hexhive-ui/src/components/robust-file-list/file.tsx","../../../core/hexhive-ui/src/components/robust-file-list/grid.tsx","../../../core/hexhive-ui/src/components/robust-file-list/list.tsx","../../../core/hexhive-ui/src/components/robust-file-list/index.tsx","../../../core/hexhive-ui/src/components/planning-calendar/index.tsx","../../../core/hexhive-ui/src/components/kanban/KanbanList.tsx","../../../core/hexhive-ui/src/components/kanban/KanbanColumn.tsx","../../../core/hexhive-ui/src/components/kanban/Kanban.tsx","../../../core/hexhive-ui/src/components/shared-file-card/index.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/helpers/config/Config.ts","../../../core/hexhive-ui/src/components/timeline-gantt/components/taskList/VerticalSpliter.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/Const.ts","../../../core/hexhive-ui/src/components/timeline-gantt/helpers/DateHelper.ts","../../../core/hexhive-ui/src/components/timeline-gantt/components/header/HeaderItem.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/context/index.ts","../../../core/hexhive-ui/src/components/timeline-gantt/components/header/BackgroundStripe.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/header/Headers.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/viewport/DataTask.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/viewport/DataRow.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/utils/index.ts","../../../core/hexhive-ui/src/components/timeline-gantt/components/viewport/DataViewPort.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/links/Link.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/links/CreateLink.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/links/LinkViewPort.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/hooks/useData.ts","../../../core/hexhive-ui/src/components/timeline-gantt/hooks/useLinks.ts","../../../core/hexhive-ui/src/components/timeline-gantt/components/common/ContentEditable.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/taskList/TaskRow.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/components/taskList/TaskList.tsx","../../../core/hexhive-ui/src/components/timeline-gantt/controller/DataController.ts","../../../core/hexhive-ui/src/components/timeline-gantt/TimeLine.tsx","../../../shared/hexhive-cas-client/src/index.ts","../../../shared/hexhive-auth-ui/src/AuthProvider/index.tsx","../../../shared/hexhive-auth-ui/src/hooks/useToken.tsx","assets/Calendar.tsx","assets/Equipment.tsx","assets/Estimates.tsx","assets/Hiveflow.tsx","assets/People.tsx","assets/Projects.tsx","assets/Timeline.tsx","actions/schedule.ts","views/jobs/job-list/header.tsx","views/jobs/job-list/index.tsx","actions/index.ts","actions/files.ts","views/jobs/job-one/index.tsx","views/staff/employee-list/header.tsx","views/staff/employee-list/index.tsx","views/schedule/index.tsx","views/staff/employee-one/index.tsx","views/plant/plant-list/header.tsx","views/plant/plant-list/index.tsx","views/quotes/header.tsx","views/quotes/index.tsx","views/dashboard/index.tsx","../../../shared/hexhive-styles/src/base/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["padZero","str","len","zeros","Array","join","slice","invertColor","hex","indexOf","length","Error","r","parseInt","toString","g","b","stringToColor","string","i","c","toUpperCase","substring","intToRGB","hash","charCodeAt","hashCode","queryFetcher","query","variables","a","token","window","sessionStorage","getItem","fetch","undefined","process","REACT_APP_API","method","headers","body","JSON","stringify","mode","response","json","client","createClient","schema","__typename","__type","ProjectById","__args","id","ProjectMany","status","startDate","endDate","UserMany","FileMany","FileByProject","QuoteById","QuoteMany","EquipmentById","EquipmentMany","ScheduleById","ScheduleMany","PeopleById","PeopleMany","mutation","addProject","project","updateProject","removeFileFromProject","updateFile","name","updateFiles","ids","removeProject","createScheduleItem","item","updateScheduleItem","subscription","Project","files","File","cid","extension","mimeType","timestamp","owner","User","Quote","customer","date","price","Equipment","registration","ScheduleItem","people","managers","notes","equipment","People","ProjectInput","_id","FileInput","ScheduleItemInput","scalarsEnumsHash","ID","String","Date","Float","Boolean","mutate","resolved","refetch","createReactClient","defaults","suspense","staleWhileRevalidate","useQuery","graphql","useRefetch","usePaginatedQuery","useTransactionQuery","useLazyQuery","useMutation","useMetaState","prepareReactRender","useHydrateCache","prepareQuery","Sidebar","styled","props","background","color","elevation","className","onClick","onLogoClick","icon","logo","pad","vertical","menu","map","x","ix","active","label","toLowerCase","onSelect","React","cloneElement","style","filter","fill","minWidth","maxWidth","margin","left","DocViewer","useState","documents","setDocuments","useEffect","documentUrl","uri","fileType","documentType","config","header","disableFileName","disableHeader","overrideComponent","pluginRenderers","DocViewerRenderers","FileViewer","flex","align","justify","size","top","file","mimetype","url","location","origin","main","split","sub","autoPlay","src","width","console","log","FileContent","direction","FileDialog","expanded","setExpanded","setFiles","isEqual","onClose","key","value","f","open","onEsc","onClickOutside","height","level","bottom","Expand","marginRight","display","flexDirection","CloudDownload","marginTop","overflow","transition","marginLeft","justifyContent","gap","placeholder","onChange","e","target","option","options","moment","format","primary","onSubmit","SearchField","quotes","jobs","labelKey","valueKey","type","QuoteID","Name","JobID","JobName","ColorDot","this","borderRadius","Component","planType","setPlanType","quote","setQuote","setMode","start","setStart","end","setEnd","event","data","overflowY","paddingBottom","marginBottom","alignItems","datum","disabled","getTime","prefix","schedule","CloneTab","selected","cloneSelected","setCloneSelected","multiple","concat","dates","isArray","d","valueOf","select","from","Set","TransferList","selectedLeft","setLeft","selectedRight","setRight","_addToDeselection","includes","splice","push","_addToSelection","not","onClickItem","primaryKey","checked","Next","onAdd","Previous","onRemove","find","PlantTab","items","inputData","assignedKey","assigned","assignedList","sort","localeCompare","numeric","bind","StaffTab","NoteTab","_insertEmpty","min","index","autoFocus","focusIndicator","onKeyDown","val","_onChange","hoverIndicator","Close","_removeItem","Add","AddTab","plants","scheduledJobs","todaysSchedule","jobSearch","setJobSearch","tabs","component","memoJobs","useMemo","_","partialRight","pick","onSearch","search","opt","reduce","a11yTitle","Logout","href","max","alignControls","tab","title","AvatarList","users","fontSize","backgroundColor","ManagerList","avatars","user","getManagers","add","remove","temp","_removed","output","require","ScheduleModal","stateMode","setTimestamp","setItem","managerList","setManagerList","existingDates","setExistingDates","cloneSelection","setCloneSelection","onSave","onCloneItem","onCreateItem","onSaveItem","joined","me","jobData","newList","removeList","isManager","isTemp","isOwner","notRemoved","isJoined","zIndex","boxShadow","round","horizontal","toggle","padding","right","plain","renderMemberButton","_item","projects","border","side","renderRemove","renderClone","DateSelector","stepSize","displayFormat","change","SvgFileHex","xmlns","viewBox","ScheduleViewContext","createContext","Content","useContext","names","staffNames","weight","plantItems","content","job","FileHex","renderInfo","Footer","Header","moveUp","moveDown","arrowColor","paddingLeft","ScheduleCard","onMove","hoverEl","setHoverEl","enterExitTransitionDurationMs","isOpen","preferPlace","listStyle","onMouseEnter","currentTarget","onMouseLeave","position","ScheduleContainer","children","ScheduleView","modalShow","showModal","startOf","setDate","endOf","params","setParams","setSelected","setCurrentDay","events","changeWeek","week","clone","onHorizonChanged","renderTime","renderSchedule","scheduleDay","isSame","readonly","toggleEditorModal","dir","truthy","renderAddScheduleButton","dayIndex","day","renderDayHeaders","today","currentDay","getDate","currentMonth","getMonth","renderedDays","dayItems","renderDays","renderedModal","schedJobs","renderCreateScheduleModal","Provider","dayHeaders","corner","renderHeader","isLoading","FileCard","FileGrid","wrap","onDeleteClick","stopPropagation","Clear","FileList","setChecked","setSort","_setChecked","step","paginate","onMore","pin","columns","property","render","loading","preventDefault","indeterminate","sortable","onSort","first","next","onClickRow","tag","tagName","getElementsByTagName","RobustFileList","grid","momentLocalizer","KanbanList","droppableId","dropProvided","droppableProps","ref","innerRef","minHeight","draggableId","dragProvided","dragSnapshot","isDragging","draggableProps","dragHandleProps","renderCard","KanbanColumn","isCombineEnabled","useClone","isScrollable","userSelect","Kanban","containerHeight","withScrollableColumns","onDrag","board","ignoreContainerClipping","provided","rows","onDragEnd","result","source","dest","destination","item_ix","SharedFiles","onUpload","jobId","onDelete","onEdit","onView","prefs","updatePrefs","uploading","selectedFiles","setSelectedFiles","isGrid","setIsGrid","filesDropped","dropped_files","nanoid","uploaded","removeFile","noClick","noKeyboard","onDrop","getRootProps","getInputProps","isDragActive","outline","cols","selection","CloudUpload","fileInput","document","createElement","onchange","fileArray","click","stroke","defvalues","textAlign","middle","selectedStyle","fontWeight","taskList","borderBottom","task","verticalSeparator","grip","dataViewPort","showLabel","links","selectedColor","load","values","populate","final","isObject","verticalRef","useRef","dragging","_setDragging","setDragging","current","draggingPosition","onMouseMove","delta","clientX","onTaskListSizing","enabled","Config","onMouseDown","button","addEventListener","cleanup","removeEventListener","CaretLeftFill","CaretRightFill","p","DATA_CONTAINER_WIDTH","VIEW_MODE_WEEK","VIEW_MODE_MONTH","VIEW_MODE_YEAR","LINK_POS_RIGHT","LINK_POS_LEFT","MIL_IN_HOUR","helper","dayToPosition","now","dayWidth","daysInYear","year","isLeapYear","input","nowposition","daywidth","nowDate","getToday","inputTime","lightSavingDiff","getTimezoneOffset","hoursInPixel","pixelsFromNow","milisecondsFromNow","setTime","setHours","Math","abs","getFullYear","month","HeaderItem","borderLeft","cursor","TimelineContext","BackgroundStripe","headerRef","getFormat","getModeIncrement","DateHelper","daysInMonth","getStartDate","getBox","lastLeft","increment","starDate","daysInBetween","diff","renderHeaderRows","currentTop","currentMiddle","currentBottom","currentDate","box","currentday","numVisibleDays","stripes","apply","hourWidth","iterLeft","scrollLeft","DataTask","onCreateLinkMouseDown","onStartCreateLink","onCreateLinkMouseUp","onFinishCreateLink","onCreateLinkTouchStart","onCreateLinkTouchEnd","doMouseDown","onUpdateTask","dragStart","doMouseMove","state","dragProcess","doMouseUp","dragEnd","doTouchStart","touches","doTouchMove","changedTouches","doTouchEnd","calculateStyle","new_start_date","pixelToDate","new_end_date","onChildDrag","setState","newLeft","newWidth","changeObj","updatePosition","onTaskChanging","configStyle","isSelected","onTouchStart","onSelectItem","onMouseUp","onTouchEnd","DataRow","itemheight","strokeDasharray","strokeDashoffset","getBackgroundWidth","getBackgroundPosition","getDayWidth","DataViewPort","dataViewRef","moveTimeline","childDragging","setChildDragging","useResizeAware","dimensions","clientWidth","clientHeight","onSize","resizeListener","scrollTop","onWheel","evt","deltaX","onTouchMove","onTouchCancel","startRow","endRow","new_position","dateToPixel","new_width","selectedItem","renderRows","Link","calcNormCoordinates","cpt1","y","cpt2","calcSCoordinates","halfY","cpt3","cpt4","getPath","coords","coordinates","pathColor","pointerEvents","strokeLinejoin","strokeWidth","markerEnd","CreateLink","init","lastX","lastY","clientY","newX","newY","LinkViewPort","taskToCreate","useDataItem","useLink","useLinks","renderLink","startItem","endItem","link","startPosition","getItemPosition","endPosition","itemHeight","refX","refY","markerWidth","markerHeight","orient","transform","ret","renderLinks","interactiveMode","error","renderCreateLink","ContentEditable","textInput","createRef","isFocus","onFocus","editing","onBlur","finishEditing","handleKey","keyCode","which","handleChange","renderDiv","tabIndex","renderEditor","outlineColor","outlineStyle","onKeyUp","prevProps","prevState","focus","nextProps","nextState","TaskRow","nonEditable","TaskList","taskViewRef","onScroll","renderTaskRow","DataController","lower_limit","upper_limit","_dataToRender","lower_data_limit","upper_data_limit","initialise","setLimits","loadDataHorizon","setStartEnd","needData","lowerLimit","upLimit","onHorizonChange","Timeline","setDraggingPosition","pxToScroll","setPxToScroll","setScrollTop","setScrollLeft","setStartRow","setEndRow","numVisibleRows","setNumVisibleRows","setNumVisibleDays","setNowPosition","sideStyle","setSideStyle","setInteractiveMode","setSize","setTaskToCreate","changingTask","setChangingTask","dc","scrollData","headerData","setHeaderData","setData","setLinks","calculateStartEndRows","new_start","trunc","horizontalChange","newScrollLeft","new_startRow","new_endRow","new_nowposition","new_left","currentIndx","onDateChange","calculateVerticalScrollVariables","onCreateLink","newLink","sourceHandle","targetHandle","calcNumVisibleDays","newDayWidth","ceil","changeMode","newMode","scrollTime","rowInfo","nonEditableName","resizable","boundaries","lower","upper","newNumVisibleRows","newNumVisibleDays","AuthClient","opts","instance","clientId","clientSecret","authorizationServer","redirectUri","axios","create","baseURL","timeout","maxRedirects","accessToken","get","accessCode","getToken","getTokenRes","refreshToken","refreshTokenRes","fd","URLSearchParams","append","post","withCredentials","username","password","client_id","grant_type","redirect_uri","response_type","AuthContext","AuthProvider","activeUser","setActiveUser","setToken","credentials","parse","localStorage","removeItem","newValue","useToken","clientRef","_setClient","setClient","code","loadToken","then","catch","getUserInfo","info","Function","SvgCalendar","SvgEquipment","SvgEstimates","SvgHiveflow","SvgPeople","SvgProjects","SvgTimeline","JobHeader","onFilterChange","JobList","setFiler","setDirection","setProperty","opacity","history","match","last","getJobs","inst","addFilesToJob","job_id","FormData","forEach","uploadFile","fileActions","getScheduleItems","horizon","STATUS","SingleJob","selectedTab","setSelectedTab","loadingFiles","setLoadingFiles","uploadingFiles","dialogOpen","openDialog","showFiles","setShowFiles","args","onCompleted","onError","refetchQueries","awaitRefetchQueries","_tabs","_files","Promise","all","f_ix","loaded","UseLoading","results","StaffSearchHeader","StaffList","setSearch","Schedule","setHorizon","setSchedule","createItem","updateItem","scheduleActions","ts","newDates","number","email","PlantHeader","PlantList","listData","_search","QuoteHeader","formatter","Intl","NumberFormat","currency","Quotes","listKeys","row","external","lazy","Dashboard","alerts","pathname","replace","Hiveflow","views","Estimates","Projects","path","generatePath","Suspense","fallback","exact","employeeOne","BaseStyle","global","colors","panel","extend","dataTable","pinned","container","layer","App","themeMode","theme","basename","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"gIACA,wEAiBMA,EAAU,SAACC,GAAmC,IAArBC,EAAoB,uDAAN,EACrCC,EAAQ,IAAIC,MAAMF,GAAKG,KAAK,KAChC,OAAQF,EAAQF,GAAKK,OAAOJ,IAInBK,EAAc,SAACC,GAQxB,GAPyB,IAArBA,EAAIC,QAAQ,OACZD,EAAMA,EAAIF,MAAM,IAGD,IAAfE,EAAIE,SACJF,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAExC,IAAfA,EAAIE,OACJ,MAAM,IAAIC,MAAM,sBAGpB,IAAIC,GAAK,IAAMC,SAASL,EAAIF,MAAM,EAAG,GAAI,KAAKQ,SAAS,IACnDC,GAAK,IAAMF,SAASL,EAAIF,MAAM,EAAG,GAAI,KAAKQ,SAAS,IACnDE,GAAK,IAAMH,SAASL,EAAIF,MAAM,EAAG,GAAI,KAAKQ,SAAS,IAEvD,MAAO,IAAMd,EAAQY,GAAKZ,EAAQe,GAAKf,EAAQgB,IAGtCC,EAAgB,SAACC,GAAD,OAjCZ,SAACC,GACd,IAAIC,GAAS,SAAJD,GACJL,SAAS,IACTO,cAED,MAAO,KADK,QAAQC,UAAU,EAAG,EAAIF,EAAEV,QAAUU,GA6BRG,CA1ChC,SAACtB,GAEd,IADA,IAAIuB,EAAO,EACHL,EAAI,EAAGA,EAAIlB,EAAIS,OAAQS,IAC3BK,EAAOvB,EAAIwB,WAAWN,KAAOK,GAAQ,GAAKA,GAE9C,OAAOA,EAqC+CE,CAASR,M,+NC5B7DS,EAA0B,uCAAG,WAAgBC,EAAOC,GAAvB,mBAAAC,EAAA,6DAE3BC,EAAQC,OAAOC,eAAeC,QAAQ,qBAFX,SAIVC,WAA2EC,GAA7BC,kJAAYC,cAAZ,UAA4CD,kJAAYC,cAAxD,YAAkF,WAA+C,CACpMC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYT,GAE/BU,KAAMC,KAAKC,UAAU,CACnBf,QACAC,cAEFe,KAAM,SAdyB,cAI3BC,EAJ2B,gBAiBdA,EAASC,OAjBK,cAiB3BA,EAjB2B,yBAmB1BA,GAnB0B,2CAAH,wDAsBnBC,EAASC,YAIpB,CACAC,OCc6B,CAC7BrB,MAAO,CACLsB,WAAY,CAAEC,OAAQ,WACtBC,YAAa,CAAED,OAAQ,UAAWE,OAAQ,CAAEC,GAAI,OAChDC,YAAa,CACXJ,OAAQ,YACRE,OAAQ,CAAEG,OAAQ,SAAUC,UAAW,OAAQC,QAAS,SAE1DC,SAAU,CAAER,OAAQ,UACpBS,SAAU,CAAET,OAAQ,UACpBU,cAAe,CAAEV,OAAQ,SAAUE,OAAQ,CAAEC,GAAI,WACjDQ,UAAW,CAAEX,OAAQ,QAASE,OAAQ,CAAEC,GAAI,OAC5CS,UAAW,CACTZ,OAAQ,UACRE,OAAQ,CAAEG,OAAQ,SAAUC,UAAW,OAAQC,QAAS,SAE1DM,cAAe,CAAEb,OAAQ,YAAaE,OAAQ,CAAEC,GAAI,OACpDW,cAAe,CAAEd,OAAQ,cAAeE,OAAQ,CAAEG,OAAQ,WAC1DU,aAAc,CAAEf,OAAQ,eAAgBE,OAAQ,CAAEC,GAAI,OACtDa,aAAc,CACZhB,OAAQ,iBACRE,OAAQ,CAAEG,OAAQ,SAAUC,UAAW,OAAQC,QAAS,SAE1DU,WAAY,CAAEjB,OAAQ,SAAUE,OAAQ,CAAEC,GAAI,OAC9Ce,WAAY,CAAElB,OAAQ,WAAYE,OAAQ,CAAEG,OAAQ,YAEtDc,SAAU,CACRpB,WAAY,CAAEC,OAAQ,WACtBoB,WAAY,CAAEpB,OAAQ,UAAWE,OAAQ,CAAEmB,QAAS,iBACpDC,cAAe,CACbtB,OAAQ,UACRE,OAAQ,CAAEC,GAAI,SAAUkB,QAAS,iBAEnCE,sBAAuB,CACrBvB,OAAQ,UACRE,OAAQ,CAAEmB,QAAS,SAAUlB,GAAI,WAEnCqB,WAAY,CACVxB,OAAQ,OACRE,OAAQ,CAAEC,GAAI,SAAUsB,KAAM,SAAUpB,OAAQ,WAElDqB,YAAa,CACX1B,OAAQ,SACRE,OAAQ,CAAEyB,IAAK,WAAYtB,OAAQ,WAErCuB,cAAe,CAAE5B,OAAQ,WACzB6B,mBAAoB,CAClB7B,OAAQ,eACRE,OAAQ,CAAE4B,KAAM,sBAElBC,mBAAoB,CAClB/B,OAAQ,eACRE,OAAQ,CAAEC,GAAI,SAAU2B,KAAM,uBAGlCE,aAAc,GACdC,QAAS,CACPlC,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,UAChBkC,MAAO,CAAElC,OAAQ,UACjBK,OAAQ,CAAEL,OAAQ,UAClBM,UAAW,CAAEN,OAAQ,QACrBO,QAAS,CAAEP,OAAQ,SAErBmC,KAAM,CACJpC,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdoC,IAAK,CAAEpC,OAAQ,UACfyB,KAAM,CAAEzB,OAAQ,UAChBqC,UAAW,CAAErC,OAAQ,UACrBsC,SAAU,CAAEtC,OAAQ,UACpBuC,UAAW,CAAEvC,OAAQ,QACrBK,OAAQ,CAAEL,OAAQ,UAClBwC,MAAO,CAAExC,OAAQ,SAEnByC,KAAM,CACJ1C,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,WAElB0C,MAAO,CACL3C,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,UAChB2C,SAAU,CAAE3C,OAAQ,UACpB4C,KAAM,CAAE5C,OAAQ,QAChBK,OAAQ,CAAEL,OAAQ,UAClB6C,MAAO,CAAE7C,OAAQ,UAEnB8C,UAAW,CACT/C,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,UAChB+C,aAAc,CAAE/C,OAAQ,UACxBK,OAAQ,CAAEL,OAAQ,WAEpBgD,aAAc,CACZjD,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACd4C,KAAM,CAAE5C,OAAQ,QAChBqB,QAAS,CAAErB,OAAQ,WACnBiD,OAAQ,CAAEjD,OAAQ,YAClBkD,SAAU,CAAElD,OAAQ,YACpBwC,MAAO,CAAExC,OAAQ,QACjBmD,MAAO,CAAEnD,OAAQ,YACjBoD,UAAW,CAAEpD,OAAQ,aAEvBqD,OAAQ,CACNtD,WAAY,CAAEC,OAAQ,WACtBG,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,WAElBsD,aAAc,CACZC,IAAK,CAAEvD,OAAQ,MACfG,GAAI,CAAEH,OAAQ,UACdyB,KAAM,CAAEzB,OAAQ,UAChBkC,MAAO,CAAElC,OAAQ,eACjBK,OAAQ,CAAEL,OAAQ,UAClBM,UAAW,CAAEN,OAAQ,QACrBO,QAAS,CAAEP,OAAQ,SAErBwD,UAAW,CACTrD,GAAI,CAAEH,OAAQ,MACdyB,KAAM,CAAEzB,OAAQ,UAChBqC,UAAW,CAAErC,OAAQ,UACrBsC,SAAU,CAAEtC,OAAQ,WAEtByD,kBAAmB,CACjBpC,QAAS,CAAErB,OAAQ,UACnBiD,OAAQ,CAAEjD,OAAQ,YAClBoD,UAAW,CAAEpD,OAAQ,YACrBmD,MAAO,CAAEnD,OAAQ,YACjBkD,SAAU,CAAElD,OAAQ,YACpBwC,MAAO,CAAExC,OAAQ,UACjB4C,KAAM,CAAE5C,OAAQ,UDpJlB0D,iBCMiE,CACjEC,IAAI,EACJC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,SAAS,GDVTvF,iBAMK,GAFLoB,EADanB,MACbmB,EADoBuB,SACpBvB,EAD8BoE,OAC9BpE,EADsCoC,aACtCpC,EADoDqE,SACpDrE,EAD8DsE,QAe5DC,YAAmCvE,EAAQ,CAC7CwE,SAAU,CAGRC,UAAU,EAGVC,sBAAsB,MAjBxBC,GAFK,EACLC,QADK,EAELD,UAIAE,GANK,EAGLC,kBAHK,EAILC,oBAJK,EAKLC,aALK,EAMLH,YACAI,EAPK,EAOLA,YAPK,EAQLC,aARK,EASLC,mBATK,EAULC,gBAVK,EAWLC,c,wkBEOWC,EAAUC,KA9CqB,SAACC,GAAW,IAAD,EAiBrD,OACE,eAAC,MAAD,CACEC,WAAY,CAACC,MAAO,SACpBC,UAAU,QACVC,UAAS,UAAKJ,EAAMI,UAAX,YAHX,UAIE,cAAC,SAAD,CACEC,QAASL,EAAMM,YACfC,KAAMP,EAAMQ,KACZJ,UAAU,yBAEZ,cAAC,MAAD,CAAKK,IAAK,CAACC,SAAU,UAAWN,UAAU,eAA1C,mBACGJ,EAAMW,YADT,aACG,EAAYC,KAAI,SAACC,EAAGC,GAAJ,OACf,qBAEEV,UAAS,2BAAsBJ,EAAMe,QAAU,IAAMF,EAAEG,MAAMC,cAAgB,SAAW,GAA/E,YAA2F,GAANH,GAA2B,IAAhBd,EAAMe,OAAe,SAAW,IACzIV,QAAS,kBAAML,EAAMkB,SAASL,EAAEG,QAHlC,UAKGG,IAAMC,aAAaP,EAAEN,KAAM,CAACc,MAAO,CAACC,OAAQ,YAAaC,KAAM,UAAWC,SAAU,OAAQC,SAAU,UACvG,cAAC,OAAD,CAAMvB,MAAO,YAAawB,OAAQ,CAACC,KAAM,SAAzC,SAAoDd,EAAEG,UANxD,kBACkBF,cAgBLf,CAAH,wgF,4FCzDP6B,EAAwC,SAAC5B,GAElD,MAAoC6B,mBAAsB,IAA1D,mBAAQC,EAAR,KAAmBC,EAAnB,KAcA,OAZAC,qBAAU,WACHhC,EAAM8B,WACLC,EAAa/B,EAAM8B,aAExB,CAAC9B,EAAM8B,YAEVE,qBAAU,WACHhC,EAAMiC,aACLF,EAAa,CAAC,CAACG,IAAKlC,EAAMiC,YAAaE,SAAUnC,EAAMoC,kBAE5D,CAACpC,EAAMiC,YAAajC,EAAMiC,cAErBjC,EAAM8B,WAAa9B,EAAMiC,YAC7B,cAAC,IAAD,CACII,OAAQ,CACJC,OAAQ,CACJC,iBAAiB,EACjBC,eAAe,EACfC,kBAAmB,kBAAM,gCAGjCX,UAAWA,EACXY,gBAAiBC,uBACrB,MC1BKC,EAAwC,SAAC,GAG/C,IAAD,IAFF9F,aAEE,MAFM,GAEN,EADFtD,EACE,EADFA,MAGA,IAAIsD,GAAyB,GAAhBA,EAAM3E,OA8Cf,OACI,eAAC,MAAD,CACI0K,MAAI,EACJC,MAAM,SACNC,QAAQ,SAHZ,UAII,cAAC,IAAD,CAAgBC,KAAK,UACrB,eAAC,OAAD,CAAMtB,OAAQ,CAAEuB,IAAK,SAAWD,KAAK,SAArC,UAA+ClG,EAAM3E,OAArD,eAnDR,IAAI+K,EAAOpG,EAAM,GACbqG,EAAWD,EAAKhG,SAAWgG,EAAKhG,SAAW,aAE3CkG,EAAG,UAAMtJ,kJAAYC,eAAiBD,kJAAYC,cAAc5B,OAAS,EAAI2B,kJAAYC,cAAgBN,OAAO4J,SAASC,OAAtH,sBAA0IJ,EAAK/E,KAA/I,QAAyJ,OAAJ+E,QAAI,IAAJA,OAAA,EAAAA,EAAMjG,WAAN,OAAkBiG,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMjG,UAAY,GAAzL,yBAA4MzD,GAE/M+J,EAAOJ,EAASK,MAAM,KAAK,GAC3BC,EAAMN,EAASK,MAAM,KAAK,GAE9B,OAAQD,GACJ,IAAK,QACD,OACI,uBAAOG,UAAU,EAAOC,IAAKP,IAErC,IAAK,QACD,OAAQ,qBAAK/B,MAAO,CAAEuC,MAAO,QAAUD,IAAKP,IAChD,IAAK,cACD,OAAQK,GACJ,IAAK,MACL,IAAK,8DACL,IAAK,wDAED,OADAI,QAAQC,IAAIV,EAAZ,UAAoBG,EAApB,YAA4BE,IAExB,cAAC,EAAD,CACIxB,YAAamB,EACbhB,aAAY,UAAKmB,EAAL,YAAaE,KAGrC,IAAK,MACL,IAAK,eACL,IAAK,mBACL,IAAK,mBACD,OACA,cAAC,MAAD,CAAKZ,MAAI,EAACC,MAAM,SAASC,QAAQ,SAAjC,SACI,cAAC,IAAD,CAAmBC,KAAK,YAGhC,QACI,OAAO,KAGnB,QACI,OAAO,OCxCVe,EAAchE,KARiC,SAAC,GAAoC,IAAnCK,EAAkC,EAAlCA,UAAkC,IAAvBtD,aAAuB,MAAf,GAAe,EAAXtD,EAAW,EAAXA,MACjF,OACI,cAAC,MAAD,CAAK4G,UAAWA,EAAW4D,UAAU,SAASnB,MAAI,EAAlD,SACI,cAAC,EAAD,CAAY/F,MAAOA,EAAOtD,MAAOA,QAKlBuG,CAAH,6F,iBCUXkE,EAAyC,SAACjE,GAAU,IAAD,EAE9D,EAAkC6B,oBAAkB,GAApD,mBAAQqC,EAAR,KAAkBC,EAAlB,KAEA,EAA4BtC,mBAAoB,IAAhD,mBAAQ/E,EAAR,KAAesH,EAAf,KAEApC,qBAAU,WACLhC,EAAMlD,QAAUuH,kBAAQvH,EAAOkD,EAAMlD,QACtCsH,EAASpE,EAAMlD,SAEhB,CAACkD,EAAMlD,QAKV,IA+BMwH,EAAU,WACXtE,EAAMsE,SACPtE,EAAMsE,WAKJlI,EAAa,SAACmI,EAAaC,GAC/B,IAAIC,EAAI3H,EAAM/E,QAEC,GAAZ0M,EAAEtM,OACHsM,EAAE,GAAF,2BACKA,EAAE,IADP,kBAEGF,EAAMC,IAEFC,EAAEtM,OAAS,GACR,UAAPoM,IACDE,EAAIA,EAAE7D,KAAI,SAACC,GAAD,mBAAC,eAAWA,GAAZ,kBAAgB0D,EAAMC,QAIpCJ,EAASK,IAILvB,EAAuB,GAAhBpG,EAAM3E,OAAc2E,EAAM,GAAK,CAC1C/B,GAAI,IACJsB,KAAM,iBACNa,SAAU,WACVE,MAAO,CAACf,KAAM,sBACdpB,OAAQ6B,EAAM,GAAKA,EAAM,GAAG7B,OAAS,GACrCkC,UAAW,GAEX,OAAO6C,EAAM0E,KACX,cAAC,QAAD,CACEC,MAAOL,EACPM,eAAgBN,EAFlB,SAIE,eAAC,MAAD,CACEO,OAAO,OACPjB,MAAM,SACNnD,IAAI,QAHN,UAIA,eAAC,MAAD,CAAKuD,UAAU,MAAMjB,QAAQ,UAA7B,UACE,cAAC,UAAD,CAAS+B,MAAM,IAAIpD,OAAQ,CAACqD,OAAQ,QAAS9B,IAAK,QAAlD,0BACA,cAAC,SAAD,CACE1C,KAAM,cAACyE,EAAA,EAAD,IACN3E,QAAS,kBAAM8D,GAAaD,IAC5BlD,MAAM,iBAEV,eAAC,MAAD,CACE6B,MAAI,EACJmB,UAAU,MAFZ,UAGE,sBAAK3C,MAAO,CAACwB,KAAM,EAAGoC,YAAa,EAAGC,QAAS,OAAQC,cAAe,UAAtE,UACE,cAACpB,EAAD,CAAajH,MAAOA,EAAOtD,MAAOwG,EAAMxG,QACtB,IAAZ,OAALsD,QAAK,IAALA,OAAA,EAAAA,EAAO3E,SAAe+L,EACvB,cAAC,SAAD,CAAQ3D,KAAM,cAAC6E,EAAA,EAAD,IAAmBpE,MAAM,WAAWK,MAAO,CAACgE,UAAW,OAAShF,QAtFnE,WACnB,IAAIvD,EAAQkD,EAAMlD,MAClB,GAAGA,GAAyB,GAAhBA,EAAM3E,OACL2E,EAAM,MAoFT,QAEJ,sBAAKuE,MAAO,CACRiE,SAAU,SACV1B,MAAQM,EAAmB,OAAR,MACnBqB,WAAY,qBACZ1C,KAAOqB,EAAe,EAAJ,EAClBsB,WAAY,EACZN,QAAS,OACTC,cAAe,SACfM,eAAgB,iBARpB,UAWE,eAAC,MAAD,CACEC,IAAI,QACJ1B,UAAU,SAFZ,UAGE,cAAC,YAAD,CACE2B,YAAY,aACZC,SAAU,SAACC,GAAD,OAAOzJ,EAAW,OAAQyJ,EAAEC,OAAOtB,QAC7CA,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAM7G,OAEf,cAAC,OAAD,CAAMqF,OAAO,OAAOsB,KAAK,QAAzB,oBACA,cAAC,SAAD,CACEwB,OAAW,OAAJtB,QAAI,IAAJA,OAAA,EAAAA,EAAMjI,SAAU,GACvB2K,SAAU,gBAAEpB,EAAF,EAAEA,MAAF,EAASuB,OAAT,OAAqB3J,EAAW,SAAUoI,IACpDwB,QAAS,CAAC,SAAU,WAAY,iBAGpC,sBAAK3E,MAAO,CAAC6D,QAAS,OAAQC,cAAe,UAA7C,UACE,eAAC,OAAD,CAAM9D,MAAO,CAACnB,MAAO,QAArB,wBAA0CgD,GAAQA,EAAKhG,YACvD,eAAC,OAAD,CAAMmE,MAAO,CAACnB,MAAO,QAArB,0BAA4CgD,GAAQA,EAAK9F,QAAb,UAAsB8F,EAAK9F,aAA3B,aAAsB,EAAYf,SAC7E6G,EAAKnI,IAAM,eAAC,OAAD,CAAMsG,MAAO,CAACnB,MAAO,QAArB,0BAA4CgD,GAAQ+C,MAAuCC,OAAO,iCAKpH,eAAC,MAAD,CAAKxE,OAAQ,CAACuB,IAAK,SAAUe,UAAU,MAAMjB,QAAQ,MAArD,UACE,cAAC,SAAD,CAAQ/B,MAAM,SAASX,QAASiE,IAChC,cAAC,SAAD,CAAQ6B,SAAO,EAACnF,MAAM,OAAOX,QA/GpB,WACL,IAAD,EAANvD,IAED,UAAAkD,EAAMoG,gBAAN,cAAApG,EAAiBlD,IAGnBwH,eA6GI,MC9EO+B,EAActG,KA3EiC,SAACC,GAC3D,MAA8B6B,oBAAkB,GAAhD,mBAAQyE,EAAR,KACA,GADA,KAC0BzE,oBAAkB,IAA5C,mBAAQ0E,EAAR,KA8CUP,GA9CV,KA8CsChG,EAA5BgG,SAASxB,EAAmBxE,EAAnBwE,MAAOoB,EAAY5F,EAAZ4F,SACxB,OACE,eAAC,MAAD,CACI5B,UAAU,SACV5D,UAAWJ,EAAMI,UAFrB,UAGE,cAAC,MAAD,CACEwD,MAAM,OACNxD,UAAU,sBAFZ,SAGE,cAAC,SAAD,CACIoG,SAAU,QACVC,SAAU,QACVT,SAAgB,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAAS1E,QAtBV,SAAC/H,GACnB,OAAOA,EAAEmN,MACP,IAAK,QACH,OAAOJ,EACT,IAAK,MACH,OAAOC,EACT,QACE,OAAO,MAeqC3F,KA9CjC,SAAC8F,GAQhB,OAAOA,EAAKA,MACV,IAAK,QACH,MAAM,CACJ1F,MAAO,UAAG0F,EAAKC,QAAR,cAAqBD,EAAKE,MAAO7N,UAAU,EAAG,IACrDyL,MAAO,SAASkC,EAAKC,SAEzB,IAAK,MACH,MAAO,CACL3F,MAAO,UAAG0F,EAAKG,MAAR,cAAmBH,EAAKI,SAAU/N,UAAU,EAAG,IACtDyL,MAAO,OAASkC,EAAKG,OAEzB,QACE,MAAO,SA0BsD,GACvDrC,MAAOA,EACPoB,SAAU,gBAAEG,EAAF,EAAEA,OAAF,OAAaH,EAASG,QAEtC,cAAC,MAAD,CACErE,OAAQ,CAACuB,IAAK,SACde,UAAU,MACV5D,UAAU,+BASOL,CAAH,mhB,gCC3FLgH,E,4JACnB,WACE,MAAwBC,KAAKhH,MAArBgD,EAAR,EAAQA,KAAM9C,EAAd,EAAcA,MACd,OACE,qBAAKmB,MAAO,CACV4D,YAAa,EACbhF,WAAYC,EACZ+G,aAAqB,EAAPjE,EACd6B,OAAQ7B,EACRY,MAAOZ,S,GATuBkE,a,YCyNTnH,KAvLmC,SAACC,GAC7D,MAAkC6B,mBAAiB,IAAnD,mBAAQsF,EAAR,KAAkBC,EAAlB,KAEA,EAA8BvF,mBAAgB,IAA9C,mBAAQyE,EAAR,KACA,GADA,KAC4BzE,sBAA5B,mBAAQwF,EAAR,KAAeC,EAAf,KAEA,EAA0BzF,mBAAiB,UAA3C,mBAAQxH,EAAR,KAAckN,EAAd,KACA,EAA4B1F,qBAA5B,mBAAQ2F,EAAR,KAAeC,EAAf,KACA,EAAwB5F,qBAAxB,mBAAQ6F,EAAR,KAAaC,EAAb,KAEA3F,qBAAU,cAcP,IAGHA,qBAAU,WAEiB,IAAD,YAMb,IAPNhC,EAAM4H,MACF5H,EAAM4H,MAAM7M,IACXuM,GAAS,UAACtH,EAAM4H,aAAP,iBAAC,EAAaC,YAAd,aAAC,EAAmBnB,MAAQ1G,EAAM4H,MAAMC,KAAKnB,KAAO,IAAM,oBAAW1G,EAAM4H,aAAjB,iBAAW,EAAaC,YAAxB,aAAW,EAAmB9M,KACjGqM,EAAYpH,EAAM4H,MAAMlB,KAAO1G,EAAM4H,MAAMlB,KAAO,UAClDe,EAAQ,UAACzH,EAAM4H,aAAP,aAAC,EAAaJ,OACtBG,EAAM,UAAC3H,EAAM4H,aAAP,aAAC,EAAaF,KACpBH,EAAQ,UAERE,EAAQ,UAACzH,EAAM4H,aAAP,aAAC,EAAaJ,OACtBG,EAAM,UAAC3H,EAAM4H,aAAP,aAAC,EAAaF,KACpBH,EAAQ,YAGZD,EAAS,MACTG,OAAS5N,GACT8N,OAAO9N,GACP0N,EAAQ,aAEb,CAACvH,EAAM4H,QAEV,IAwEItD,EAAU,WAAO,IAAD,EAClB,UAAAtE,EAAMsE,eAAN,cAAAtE,IAGE,OAAOA,EAAM0E,KACT,cAAC,QAAD,CACIE,eAAgBN,EAChBK,MAAOL,EAFX,SAGI,eAAC,MAAD,CAAKlE,UAAWJ,EAAMI,UAAWK,IAAI,QAArC,UACF,eAAC,UAAD,CAASiB,OAAQ,CAAChB,SAAU,UAAWoE,MAAM,IAA7C,UAA0D,QAARzK,EAAiB,OAAS,OAA5E,YAEE,eAAC,MAAD,CACIuJ,MAAM,SACNvC,MAAO,CACHyG,UAAW,UACX5C,QAAS,OACTC,cAAe,SACf4C,cAAe,QANvB,UAOA,cAAC,MAAD,CAAK1G,MAAO,CAACwB,KAAM,EAAGqC,QAAS,OAAQC,cAAc,UAArD,SACI,cAAC,MAAD,CAAK9D,MAAO,CAAC6D,QAAS,OAAS8C,aAAc,QAA7C,SACE,cAAC3B,EAAD,CACEL,QAASM,EACTV,SAnCD,SAAClJ,GAClBmH,QAAQC,IAAIpH,GACZ4K,EAAS5K,IAkCS8H,MAAO6C,GAAS,SASlB,sBAAKhG,MAAO,CAACgE,UAAW,EAAGH,QAAS,OAAQC,cAAe,MAAO8C,WAAY,UAA9E,UACA,cAAC,IAAD,CAAO5G,MAAO,CAAC4D,YAAa,KAC5B,cAAC,SAAD,CACET,MAAO2C,EACPnB,QAAS,CACL,CAAC9F,MAAO,UAAWc,MAAO,gBAC1B,CAACd,MAAO,UAAWc,MAAO,kBAC1B,CAACd,MAAO,UAAWc,MAAO,oBAC9B4E,SAAU,SAACC,GAAD,OAAOuB,EAAY,GAAD,OAAIvB,EAAEC,OAAOtB,SAN3C,SAOO,gBAAE0D,EAAF,EAAEA,MAAF,OACG,eAAC,MAAD,WACI,cAAC,EAAD,CAAUhI,MAAOgI,EAAMhI,MAAO8C,KAAM,KACpC,cAAC,OAAD,UAAOkF,EAAMlH,oBAMjC,eAAC,MAAD,CAAKgD,UAAU,MAAMjB,QAAQ,MAA7B,UACc,QAAR1I,EACE,cAAC,SAAD,CAASgG,QAjFT,WAAO,IAAD,EACnB,UAACL,EAAM4H,aAAP,OAAC,EAAa7M,IAgF8BiG,MAAM,WACrC,KACJ,cAAC,SAAD,CAASX,QAASiE,EAAStD,MAAM,UACjC,cAAC,SAAD,CAAQmF,SAAO,EAACgC,WA1Ed,MAAZhB,GACS,MAATE,GACS,MAATG,GACO,MAAPE,GAuEgDrH,QA/HlC,WAChB,IACInF,EAAS,OAAGsM,QAAH,IAAGA,OAAH,EAAGA,EAAOY,UACnBjN,EAAO,OAAGuM,QAAH,IAAGA,OAAH,EAAGA,EAAKU,UACrBvE,QAAQC,IAAIwC,EAAQe,GACpB,IAAI,IAAIzO,EAAI,EAAGA,GAAC,OAAG0N,QAAH,IAAGA,OAAH,EAAGA,EAAQnO,QAAQS,IAAI,CACnC,IAAIyP,EAAM,OAAG/B,QAAH,IAAGA,OAAH,EAAGA,EAAS1N,GAAG8N,KACpB2B,EAAQ,KAAR,OAAa/B,QAAb,IAAaA,OAAb,EAAaA,EAAS1N,GAAa,SAAVyP,EAAoB,UAAY,YAAzD,OAAqEhB,QAArE,IAAqEA,OAArE,EAAqEA,EAAO7C,QAE1D,CACbzJ,GAAE,OAAEuL,QAAF,IAAEA,OAAF,EAAEA,EAAS1N,GAAa,SAAVyP,EAAoB,UAAY,SAClDhM,KAAI,OAAEiK,QAAF,IAAEA,OAAF,EAAEA,EAAS1N,GAAa,SAAVyP,EAAoB,OAAS,WAC/C3B,KAAM2B,GAMhB,IAAIC,EAAW,CACbjB,MAAOA,EACPG,MAAOtM,EACPwM,IAAKvM,EACLuL,KAAMS,GAEVtD,QAAQC,IAAI,WAAYwE,IAuGkDtH,MAAgB,QAAR3G,EAAkB,OAAS,mBAIvG,OAIiB0F,CAAH,2H,gCCnJbwI,EAAWxI,KAzDuB,SAAC,GAIzC,IAAD,IAHFyI,gBAGE,MAHS,GAGT,EAFFtH,EAEE,EAFFA,SACAd,EACE,EADFA,UAEA,EAA4CyB,mBAAiB,IAA7D,mBAAQ4G,EAAR,KAAuBC,EAAvB,KAEA1G,qBAAU,WACHwG,GACCE,EAAiBF,KAEtB,CAACA,IA2BJ,OACA,cAAC,MAAD,CACIxE,UAAU,SACV5D,UAAWA,EAFf,SAGI,cAAC,WAAD,CACIA,UAAU,qBACVuI,UAAQ,EACRnE,MAAOgE,EAASI,OAAOH,GACvB7C,SAAU,SAACiD,GACP,GAAGhR,MAAMiR,QAAQD,GAAO,CACpB,IAAIE,EAAIF,EAAMjI,KAAI,SAACC,GAAD,OAAOA,EAAEmI,aAnCpBC,EAoCQpR,MAAMqR,KAAK,IAAIC,IAAIJ,IAAInI,KAAI,SAACC,GAAD,OAAO,IAAIpC,KAAKoC,MAhB9D,OAARK,QAAQ,IAARA,KAAW+H,GAEXpF,QAAQC,IAAImF,GAtBM,IAACA,SA4CHlJ,CAAH,y5B,2BCpDRqJ,EAA6C,SAACpJ,GACzD,MAAkC6B,mBAAgB,IAAlD,mBAAQwH,EAAR,KAAsBC,EAAtB,KACA,EAAoCzH,mBAAgB,IAApD,mBAAQ0H,EAAR,KAAuBC,EAAvB,KAIMC,EAAoB,SAAC/M,GACzB,IAAI8L,EAAWe,EAAcxR,QAC7B,GAAIyQ,EAASkB,SAAShN,GAEjB,CACH,IAAIoE,EAAK0H,EAAStQ,QAAQwE,GAC1B8L,EAASmB,OAAO7I,EAAI,QAHpB0H,EAASoB,KAAKlN,GAKhB8M,EAAShB,IAGLqB,EAAkB,SAACnN,GACvB,IAAI8L,EAAWa,EAAatR,QAC5B,GAAIyQ,EAASkB,SAAShN,GAEjB,CACH,IAAIoE,EAAK0H,EAAStQ,QAAQwE,GAC1B8L,EAASmB,OAAO7I,EAAI,QAHpB0H,EAASoB,KAAKlN,GAKhB4M,EAAQd,IAuEJsB,EAAM,SAACvQ,EAAUd,GACrB,OAAOc,EAAExB,QAAQuJ,QAAO,SAAAkD,GACtB,OAAgC,IAAzB/L,EAAEP,QAAQsM,EAAMzJ,QAKzB,OACE,eAAC,MAAD,CACEiJ,UAAU,MADZ,UAEE,cAAC,MAAD,CAAKnB,MAAI,EAACyC,SAAS,SAAnB,SACE,cAAC,OAAD,CACEyE,YAAa,gBAAErN,EAAF,EAAEA,KAAF,OAAiBmN,EAAgBnN,EAAK3B,KACnD8M,KAAMiC,EAAI9J,EAAMgG,QAAShG,EAAMwI,UAC/BwB,WAAW,OAHb,SAKG,SAACtN,GAAD,OACC,eAAC,MAAD,CAAKsH,UAAU,MAAMlB,MAAM,SAA3B,UACE,cAAC,WAAD,CAAUmH,QAASZ,EAAanR,QAAQwE,EAAK3B,KAAO,EAAG6K,SAAU,SAACC,GAAD,OAAOgE,EAAgBnN,EAAK3B,OAC7F,cAAC,OAAD,CAAM2G,OAAQ,CAACC,KAAM,SAArB,SAAgCjF,EAAKL,eAK7C,eAAC,MAAD,CACE0G,QAAQ,SACRiB,UAAU,SAFZ,UAGE,cAAC,SAAD,CACEzD,KAAM,cAAC2J,EAAA,EAAD,IACN/B,SAAUkB,EAAalR,QAAU,EACjC6K,KAAK,QACL3C,QAzCW,WAAO,IAAD,EACzB,UAAAL,EAAMmK,aAAN,cAAAnK,EAAcqJ,GACdC,EAAQ,OAwCF,cAAC,SAAD,CACE/I,KAAM,cAAC6J,EAAA,EAAD,IACNjC,SAAUoB,EAAcpR,QAAU,EAClC6K,KAAK,QACL3C,QAzCU,WAAO,IAAD,EACxB,UAAAL,EAAMqK,gBAAN,cAAArK,EAAiBuJ,GACjBC,EAAS,UAyCL,cAAC,MAAD,CAAK3G,MAAI,EAACyC,SAAS,SAAnB,SACE,cAAC,OAAD,CACE0E,WAAW,OACXD,YAAa,gBAAErN,EAAF,EAAEA,KAAF,OAAiB+M,EAAkB/M,EAAK3B,KACrD8M,KAAM7H,EAAMwI,SAAS5H,KAAI,SAACC,GAAD,oBACvB9F,GAAI8F,GACDb,EAAMgG,QAAQsE,MAAK,SAAC/Q,GAAD,OAAYA,EAAEwB,IAAM8F,SAL9C,SAOG,SAACnE,GAAD,OACC,eAAC,MAAD,CAAKsH,UAAU,MAAMlB,MAAM,SAA3B,UACE,cAAC,WAAD,CAAUmH,QAASV,EAAcrR,QAAQwE,EAAK3B,KAAO,EAAG6K,SAAU,SAACC,GAAD,OAAO4D,EAAkB/M,EAAK3B,OAChG,cAAC,OAAD,CAAM2G,OAAQ,CAACC,KAAM,SAArB,SAAgCjF,EAAKL,mBChKhCkO,E,yJAGnB,SAAIhR,EAAUd,GACZ,OAAOc,EAAE+H,QAAO,SAAAkD,GAAK,OAA0B,IAAtB/L,EAAEP,QAAQsM,Q,mBAGrC,SAAMgG,GACJ,IAAIhC,EAAWxB,KAAKhH,MAAMwI,SAC1BxB,KAAKhH,MAAM4F,SAAS4C,EAASI,OAAO4B,M,sBAGtC,SAASA,GACP,IAAIhC,EAAWxB,KAAKhH,MAAMwI,SAC1BxB,KAAKhH,MAAM4F,SAASoB,KAAK8C,IAAItB,EAAUgC,M,oBAGzC,WACE,MAAgCxD,KAAKhH,MAA7ByK,EAAR,EAAQA,UAAWjC,EAAnB,EAAmBA,SACnB,OACE,cAAC,MAAD,CAAK3D,OAAO,OAAZ,SACE,cAAC,EAAD,CACE6F,YAAaD,EAAUE,SAASpG,IAChCqG,aAAcH,EAAUE,SAAS9C,KACjCrB,SAAUiE,EAAUjE,SACpBR,QAASyE,EAAU5C,KAAKvG,QAAO,SAACT,GAAD,OAAYA,EAAExE,QAAMwO,MAAK,SAACtR,EAAQd,GAC9D,OAAOc,EAAE8C,KAAKyO,cAAcrS,EAAE4D,KAAM,KAAM,CAAE0O,SAAS,OAExDvC,SAAUA,EACV2B,MAAOnD,KAAKmD,MAAMa,KAAKhE,MACvBqD,SAAUrD,KAAKqD,SAASW,KAAKhE,c,GA9BDE,aCDjB+D,E,yJAEnB,SAAI1R,EAAUd,GACZ,OAAOc,EAAE+H,QAAO,SAAAkD,GAAK,OAA0B,IAAtB/L,EAAEP,QAAQsM,Q,mBAGrC,SAAMgG,GACJ,IAAIhC,EAAWxB,KAAKhH,MAAMwI,SAASzQ,QACnCiP,KAAKhH,MAAM4F,SAAS4C,EAASI,OAAO4B,M,sBAGtC,SAASA,GACP,IAAIhC,EAAWxB,KAAKhH,MAAMwI,SAASzQ,QACnCiP,KAAKhH,MAAM4F,SAASoB,KAAK8C,IAAItB,EAAUgC,M,oBAGzC,WACE,MAAgCxD,KAAKhH,MAA7ByK,EAAR,EAAQA,UAAWjC,EAAnB,EAAmBA,SAEnB,OACE,cAAC,MAAD,CAAK3D,OAAO,OAAZ,SACE,cAAC,EAAD,CACE6F,YAAaD,EAAUE,SAASpG,IAChCqG,aAAcH,EAAUE,SAAS9C,KACjCrB,SAAUiE,EAAUjE,SACpBR,QAASyE,EAAU5C,KACnBW,SAAUA,EACV2B,MAAOnD,KAAKmD,MAAMa,KAAKhE,MACvBqD,SAAUrD,KAAKqD,SAASW,KAAKhE,c,GA5BDE,a,kBCmDvBgE,EA/CyB,SAAClL,GAEvC,IAOMmL,EAAe,WAAO,IAAD,IACrBtD,GAAO,UAAA7H,EAAM6H,YAAN,eAAY9P,UAAW,GAClC8P,EAAK+B,KAAK,IACV,UAAA5J,EAAM4F,gBAAN,cAAA5F,EAAiB6H,IASnB,OACE,eAAC,MAAD,CAAKvC,SAAU,SAAUT,OAAQ,CAACuG,IAAK,QAAShL,UAAU,WAA1D,UACE,cAAC,OAAD,CACEK,IAAK,CAACC,SAAU,UAChBmH,KAAM7H,EAAM6H,KAFd,SAGG,SAACnL,EAAW2O,GAAZ,OACC,eAAC,MAAD,CAAKrH,UAAU,MAAMlB,MAAM,SAA3B,UACE,cAAC,YAAD,CACEwI,WAAS,EACTC,gBAAgB,EAChB/G,MAAO9H,EACPiJ,YAAY,qBACZ6F,UAAW,SAAC3F,GAAqB,SAATA,EAAEtB,KAAkB4G,KAC5CvF,SAAU,SAACC,GAAD,OAhCJ,SAAC/E,EAAY2K,GAAiB,IAAD,IACzC5D,GAAO,UAAA7H,EAAM6H,YAAN,eAAY9P,UAAW,GAClC8P,EAAK/G,GAAM2K,EACX,UAAAzL,EAAM4F,gBAAN,cAAA5F,EAAiB6H,GA6BU6D,CAAUL,EAAOxF,EAAEC,OAAOtB,UAE7C,cAAC,SAAD,CAAQmH,gBAAc,EAACpL,KAAM,cAACqL,EAAA,EAAD,IAAWvL,QAAS,kBArBvC,SAACgL,GAAmB,IAAD,IACjCxD,GAAO,UAAA7H,EAAM6H,YAAN,eAAY9P,UAAW,GAClC8P,EAAK8B,OAAO0B,EAAO,GACnB,UAAArL,EAAM4F,gBAAN,cAAA5F,EAAiB6H,GAkB8CgE,CAAYR,YAIzE,cAAC,SAAD,CAAQhL,QAAS8K,EACf5K,KAAM,cAACuL,EAAA,EAAD,IAAS9K,MAAM,iBC9BhB+K,GAAiC,SAAC,GASxC,IAAD,IARFxF,YAQE,MARK,GAQL,MAPFyF,cAOE,MAPO,GAOP,MANFnO,cAME,MANO,GAMP,EALFnB,EAKE,EALFA,KACAkJ,EAIE,EAJFA,SACAqG,EAGE,EAHFA,cACAC,EAEE,EAFFA,eAGA,EAAoCrK,mBAAiB,IAArD,mBAAQsK,EAAR,KAAmBC,EAAnB,KAEA,EAAsCvK,mBAAiB,UAAvD,mBAEMwK,GAFN,UAEa,CACT,CACIrL,MAAO,SACPsL,UACA,cAAC,EAAD,CACE1G,SAAU,SAACC,GAAD,cAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAQ,2BAAOlJ,GAAP,IAAamB,OAAQgI,MACnD4E,UAAW,CACTE,SAAU,CAACpG,IAAK,KAAMsD,KAAI,OAAEoE,QAAF,IAAEA,OAAF,EAAEA,EAAerL,KAAI,SAACC,GAAD,OAAYA,EAAEhD,WAC7D2I,SAAU,OACVqB,KAAMhK,GAER2K,UAAc,OAAJ9L,QAAI,IAAJA,OAAA,EAAAA,EAAMmB,SAAU,MAGhC,CACImD,MAAO,YACPsL,UACI,cAAC,EAAD,CACE1G,SAAU,SAACC,GAAD,cAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAQ,2BAAOlJ,GAAP,IAAasB,UAAW6H,MACtD4E,UAAW,CACTE,SAAU,CAACpG,IAAK,KAAMsD,KAAI,OAAEqE,QAAF,IAAEA,OAAF,EAAEA,EAAgBtL,KAAI,SAACC,GAAD,OAAOA,EAAE7C,cACzDwI,SAAU,OACVqB,KAAMmE,GAAU,IAElBxD,UAAc,OAAJ9L,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,YAAa,MAGvC,CACIgD,MAAO,QACPsL,UACI,cAAC,EAAD,CACEzE,MAAU,OAAJnL,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,QAAS,GACrB6H,SAAU,SAACC,GAAD,cAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAQ,2BAAOlJ,GAAP,IAAaqB,MAAO8H,WAK1D0G,EAAWC,mBAAQ,WAErB,OADQC,IAAE7L,IAAI2F,EAAMkG,IAAEC,aAAaD,IAAEE,KAAM,CAAC,KAAM,UACzC/L,KAAI,SAACC,GAAD,mBAAC,eAAgBA,GAAjB,IAAoB9F,GAAG,GAAD,OAAK8F,EAAE9F,WAC3C,CAACZ,KAAKC,UAAUmM,KAEnB,OACI,eAAC,MAAD,CAAK1D,MAAI,EAACmB,UAAU,SAApB,UACC,eAAC,MAAD,CACClB,MAAM,SACNkB,UAAU,MAFX,UAID,cAAC,MAAD,CAAKnB,MAAI,EAAT,SACE,cAAC,SAAD,CACE+J,SAAU,SAACC,GAAD,OAAYT,EAAaS,IACnClH,YAAY,gBACZa,SAAU,SAACsG,GAAD,MAAS,UAAGA,EAAI/R,GAAP,cAAe+R,EAAIzQ,MAAOtD,UAAU,EAAG,KAC1DiN,QAASuG,EAASjL,QAAO,SAAC/H,GAAD,MAAY,UAAGA,EAAEwB,GAAL,cAAaxB,EAAE8C,MAAOnE,QAAQiU,IAAc,KACjF3H,OAAW,OAAJ9H,QAAI,IAAJA,OAAA,EAAAA,EAAMT,QAAQlB,MAAd,OAAoB2B,QAApB,IAAoBA,OAApB,EAAoBA,EAAMT,SACjCwK,SAAU,CAAClC,IAAK,KAAMwI,QAAQ,GAC9BnH,SAAU,YAAe,IAAbG,EAAY,EAAZA,OACRlC,QAAQC,IAAIiC,GACJ,OAARH,QAAQ,IAARA,KAAQ,2BAAOlJ,GAAP,IAAaT,QAAS8J,EAAOhL,WAG3C2B,IAAI,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMT,UAChB,cAAC,MAAD,CACE+H,UAAU,SACVjB,QAAQ,SAFV,SAGE,cAAC,SAAD,CACErB,OAAQ,OACRiK,gBAAgB,EAChBqB,UAAU,YACVzM,KAAM,cAAC0M,EAAA,EAAD,IACNC,KAAI,0CAA8BxQ,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAMT,QAAQlB,WAIlD,cAAC,MAAD,CAAK8J,OAAQ,CAACsI,IAAK,QAAnB,SACE,cAAC,OAAD,CACEC,cAAc,QADhB,SAEGf,EAAKzL,KAAI,SAACyM,GAAD,OACR,cAAC,MAAD,CAAKC,MAAOD,EAAIrM,MAAhB,SACGqM,EAAIf,uB,UCvGViB,GAA0C,SAAC,GAGjD,IAAD,IAFJC,aAEI,MAFI,GAEJ,MADJxK,YACI,MADG,GACH,EACJ,OACE,qBAAK3B,MAAO,CAAC6D,QAAS,OAAQC,cAAe,OAA7C,SACKqI,EAAM5M,KAAI,SAACC,EAAGC,GAAQ,IAAD,EAChBO,EAAc,CAChBuC,MAAOZ,EACP6B,OAAQ7B,EACRyK,SAAUzK,EAAO,EACjB0K,gBAAiB7M,EAAEX,OAOrB,OAJGY,EAAK,IACNO,EAAK,UAAgB,eAAiB2B,EAAM,EAAKlC,EAAI,OAIrD,cAAC,SAAD,CAAQO,MAAOA,EAAf,SACE,cAAC,OAAD,CAAM2B,KAAI,UAAKA,GAAQ,EAAE,GAAf,MAAuB9C,MAAOlI,aAAY6I,EAAEX,OAAS,IAA/D,mBACGW,EAAExE,YADL,aACG,EAAQmH,MAAM,KAAK5C,KAAI,SAACC,GAAD,OAAOA,EAAE,MAAI/I,KAAK,c,SCtB7C6V,GAA2C,SAAC,GAGlD,IAAD,IAFF7P,gBAEE,MAFS,GAET,MADF0P,aACE,MADM,GACN,EAEJ3J,QAAQC,IAAIhG,EAAU0P,GAEpB,IAAMI,EAAU9P,EAAS8C,KAAI,SAACC,EAAGC,GAC3B,IAAI+M,EAAOL,EAAMlD,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAM8F,MAAM,GACzC,MAAO,CACHxE,KAAMwR,EAAKxR,KACX6D,MAAOxH,aAAcmV,EAAK9S,IAAM,QAK5C,OAAQ,cAAC,GAAD,CAAYyS,MAAOI,KCvBlBE,GAAc,SAAC1Q,EAAgBU,EAA4CiQ,EAAgBC,GACpGnK,QAAQC,IAAI,WAAYhG,EAAUkQ,EAAQD,GACxC,IAAIE,EAAI,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAKzM,QAAO,SAAC/H,GACpB,IAAI2U,KAAcF,GAAU,IAAI9V,QAAQqB,IAAM,GAE9C,SADkBuE,GAAY,IAAI5F,QAAQqB,IAAM,IAC7B2U,KAEvBrK,QAAQC,IAAImK,GAEZ,IAAIE,EAAU,CAAC/Q,GAAQwL,QAAe,OAAR9K,QAAQ,IAARA,OAAA,EAAAA,EAAU8C,KAAI,SAACrH,GAAD,gBAAUA,QAAQ,IAI9D,OAHG0U,IACCE,EAASA,EAAOvF,OAAOqF,IAEpBE,EAAO7M,QAAO,SAAC/H,GAAD,OAAOA,MAAQyU,GAAU,IAAI9V,QAAQqB,IAAM,OCGlE0M,GAASmI,EAAQ,IA+VNC,GAxTsC,SAACrO,GAAW,IAAD,UAE9D,EAAyB6B,mBAAiB,UAA1C,mBAAQxH,EAAR,KAAckN,EAAd,KAEM+G,EAA0C9B,mBAAQ,WACtD,MAAiB,UAATnS,EAAoB,QAAmB,SAATA,EAAmB,OAAU,WAClE,CAACA,IAEJ,EAAsCwH,oBAAkB,GAAxD,mBAEA,GAFA,UAEwBA,mBAAiB,IAAzC,mBACA,GADA,UAC0BA,mBAAe,IAAIpD,OAA7C,mBAEA,GAFA,UAEoCoD,mBAAe7B,EAAM7C,WAAa,IAAIsB,OAA1E,mBAAQtB,EAAR,KAAmBoR,EAAnB,KAEA,EAAwB1M,qBAAxB,mBAAOnF,EAAP,KAAa8R,EAAb,KAEA,EAAwC3M,mBAGrC,IAHH,mBAAQ4M,EAAR,KAAqBC,EAArB,KAKA,EAA4C7M,mBAAiB,IAA7D,mBAAQ8M,EAAR,KAAuBC,EAAvB,KACA,EAA8C/M,mBAAiB,IAA/D,mBAAQgN,EAAR,KAAwBC,EAAxB,KAEA9M,qBAAU,WACLhC,EAAM7C,WACPoR,EAAavO,EAAM7C,aAEpB,CAAC6C,EAAM7C,YAEV6E,qBAAU,WACLhC,EAAMtD,MACP8R,EAAQxO,EAAMtD,QAEf,CAACsD,EAAMtD,OAEVsF,qBAAU,WAAO,IAAD,EACd6B,QAAQC,IAAI9D,EAAMtD,MACfsD,EAAMtD,MAAQsD,EAAMtD,KAAK3B,IAC1BwM,EAAQ,QAEPvH,EAAMtD,MAAQsD,EAAMtD,KAAK3B,KAAU,OAAJ2B,QAAI,IAAJA,OAAA,EAAAA,EAAM3B,OAAN,UAAaiF,EAAMtD,YAAnB,aAAa,EAAY3B,KACzD8I,QAAQC,IAAI,cAOb,WAAC9D,EAAMtD,YAAP,aAAC,EAAY3B,KAqGhB,IAiCMgU,EAAM,uCAAG,sBAAAxV,EAAA,sDACbsK,QAAQC,IAAIpH,EAAMrC,GACfqC,IAEW,UAATrC,EACD2F,EAAMgP,YAAYtS,EAAMiS,EAAeE,GAGvB,UAAbP,EACDtO,EAAMiP,aAAavS,EAAMS,GAEzB6C,EAAMkP,WAAWxS,EAAMS,GAI3BmH,KAfW,2CAAH,qDA0CNA,EAAU,WAAO,IAAD,EACpB,UAAAtE,EAAMsE,eAAN,cAAAtE,GAEAwO,OAAQ3U,GACR+U,EAAiB,IACjBE,EAAkB,IAClBJ,EAAe,IACfnH,EAAQ,WAGJ4H,EDnRkB,SAACC,EAAWC,EAA2BC,EAAmBC,GAA0B,IAAD,EACvG,GAAIF,EAAJ,CACF,IAAIG,EAAYH,GAAWA,EAAQvR,UAAYuR,EAAQvR,SAAS5F,QAAQkX,EAAGrU,KAAO,EAC9E0U,EAASH,EAAQpX,QAAQkX,EAAGrU,KAAO,EACnC2U,EAAUL,IAAW,UAAAA,EAAQjS,aAAR,eAAerC,KAAMqU,EAAGrU,GAC7C4U,EAAaJ,EAAWrX,QAAX,OAAmBkX,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAIrU,IAAM,EAE9C,OAAQyU,GAAaC,GAAUC,IAAYC,GC4Q9BC,CAAS,CAAC7U,GAAIiF,EAAM6N,KAAK1P,KAAMzB,GAAQ,MAAiB,OAAX+R,QAAW,IAAXA,OAAA,EAAAA,EAAaV,MAAO,IAAe,OAAXU,QAAW,IAAXA,OAAA,EAAAA,EAAaT,SAAU,IAKzG,OAHFnK,QAAQC,IAAR,OAAYpH,QAAZ,IAAYA,OAAZ,EAAYA,EAAMU,MAAO4C,EAAM6N,KAAK1P,KAG3B6B,EAAM0E,KACX,cAAC,QAAD,CACErD,MAAO,CAACwO,OAAQ,GAAIC,UAAW,4BAA6BxK,SAAU,UACtEV,eAAgBN,EAChBK,MAAOL,EAHT,SAIA,eAAC,MAAD,CACEyL,MAAM,UACNzK,SAAS,SACTrF,WAAY,YACZ+D,UAAU,SACVJ,MAAM,QALR,UAOE,eAAC,MAAD,CACE3D,WAAW,WACX8C,QAAQ,UACRD,MAAM,SACNrC,IAAK,CAACwC,IAAK,QAAS8B,OAAQ,QAASiL,WAAY,SACjDhM,UAAU,MALZ,UAME,cAAC,MAAD,CACEA,UAAU,MACVlB,MAAM,SAFR,SAGA,eAAC,UAAD,CAASgC,MAAM,IAAIpD,OAAO,OAA1B,UACK4M,EADL,sBACmCrI,GAAO9I,GAAW+I,OAAO,mBAI5D,eAAC,MAAD,CAAKlC,UAAU,MAAMlB,MAAM,SAA3B,UACgB,QAAbwL,IAA2B,OAAJ5R,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAarC,OAAb,UAAoBiF,EAAM6N,YAA1B,aAAoB,EAAY1P,MA/DvC,WACzB,IAAM8R,EAAM,uCAAG,sBAAA1W,EAAA,sDACV4V,IAAM,OAAIzS,QAAJ,IAAIA,OAAJ,EAAIA,EAAM3B,MAMToU,IAAD,OAAWzS,QAAX,IAAWA,KAAM3B,IAPb,2CAAH,qDAeZ,OACE,cAAC,SAAD,CAAQ4Q,gBAAc,EAACtK,MAAO,CAAC6O,QAAS,mBAAoBxO,OAAQ,CAACyO,MAAO,SAAUC,OAAK,EAAC/P,QAAS4P,EAAQjP,MAAQmO,EAAS,QAAU,SA8CnEkB,GAE/D,cAAC,GAAD,CACE7C,MAAOxN,EAAMwN,MACb1P,SAAUgQ,IAAgB,OAAJpR,QAAI,IAAJA,GAAA,UAAAA,EAAMU,aAAN,eAAarC,MAAb,UAAmBiF,EAAM6N,YAAzB,aAAmB,EAAY1P,MAAO,IAAQ,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,WAAY,GAAI2Q,EAAYV,IAAKU,EAAYT,gBAIzH,cAAC,MAAD,CAEEvN,IAAI,QACJoE,OAAQ,CAACsI,IAAK,QAASzL,OAAQ,CAACqD,OAAQ,SAH1C,SAIsB,SAAduJ,GAAsC,WAAdA,EACxB,cAAC/F,EAAD,CACGC,SAAUqG,EACV3N,SAAU,SAAC2H,GAAD,OAAWiG,EAAkBjG,MAE1C,cAAC,GAAD,CACEnM,KAAMA,EACNkJ,SAAU,SAAC0K,GACTzM,QAAQC,IAAR,2BAAgBpH,GAAS4T,IACzB9B,EAAQ,2BAAI9R,GAAS4T,KAEvB/J,KAAMvG,EAAMuQ,SACZvE,OAAQhM,EAAMhC,UACdH,OAAQmC,EAAMnC,WAGxB,eAAC,MAAD,CAAK6H,IAAI,SAASjF,IAAK,SAAU+P,OAAQ,CAACC,KAAM,MAAOvQ,MAAO,WAAY8D,UAAU,MAAMjB,QAAQ,MAAlG,UACGoM,GAlIY,SAACb,GACpB,MAAiB,SAAdA,EAEC,cAAC,SAAD,CAAQpO,MAAM,YAAYG,QAAS,WACjC,OAAG3D,QAAH,IAAGA,KAAM3B,GAGTuJ,KAJF,oBAQK,KAuHQoM,CAAapC,GACvBa,GAnJW,SAACb,GACnB,MAAiB,SAAdA,EAEC,cAAC,SAAD,CAAQtN,MAAM,QAAQX,QAAW,WAAMkH,EAAQ,YAG7B,UAAd+G,EAEJ,cAAC,SAAD,CAAQtN,MAAM,OAAOX,QAAW,WAAMkH,EAAQ,WAIzC,KAuIQoJ,CAAYrC,GACvB,cAAC,SAAD,CAAQtN,MAAM,QAAQX,QAAWiE,KAC7B6K,GAAwB,WAAdb,IAA4B,cAAC,SAAD,CAAQnI,SAAO,EAAC9F,QAAS0O,EAAQ/N,MACxD,SAAdsN,GAAsC,UAAdA,EAAwC,SAAbA,EAAwB,oBAAsB,eAAkB,mBAK1H,MC/VKsC,GAAb,4JAEE,SAAO5M,GACL,MAAsCgD,KAAKhH,MAAnCwE,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,SAAUiL,EAAzB,EAAyBA,SAEzBjL,EADQK,IAAOzB,GAAOuJ,IAAI/J,EAAW6M,GAAY,aAJrD,oBAQE,WACE,MAAiC7J,KAAKhH,MAA9BwE,EAAR,EAAQA,MAAOsM,EAAf,EAAeA,cACf,OACE,eAAC,MAAD,CAAK9M,UAAU,MAAMlB,MAAM,SAAS1C,UAAU,eAA9C,UACE,cAAC,SAAD,CAAQG,KAAM,cAAC,IAAD,IAAiBF,QAAS2G,KAAK+J,OAAO/F,KAAKhE,MAAO,KAEhE,cAAC,OAAD,CAAM5G,UAAU,wBAAhB,SAAyC6F,IAAOzB,GAAO0B,OAAO4K,KAC9D,cAAC,SAAD,CAAQvQ,KAAM,cAAC,IAAD,IAAkBF,QAAS2G,KAAK+J,OAAO/F,KAAKhE,KAAM,YAfxE,GAAkCE,a,qBCGnB8J,I,eAAAA,GAdf,SAAoBhR,GAClB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,kBACRtN,MAAM,MACNiB,OAAO,OACH7E,GALN,aAOE,sBAAM+I,EAAE,qqBCHDoI,GAAsBhQ,IAAMiQ,cAAoC,ICOhEC,GAAmC,SAAC,GAAmB,IAAlBxJ,EAAiB,EAAjBA,KAAM2F,EAAW,EAAXA,MAEpD,EAAwC8D,qBAAWH,IAA3CtT,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,UAAWuS,EAA3B,EAA2BA,SAiE3B,OACI,sBAAKlP,MAAO,CAAE6D,QAAS,OAAQrC,KAAM,EAAGsC,cAAe,UAAvD,UAhEe,WACf,IAAMoM,IAAa,OAAJ1J,QAAI,IAAJA,OAAA,EAAAA,EAAMhK,SAAU,IAAI+C,KAAI,SAACC,GACtC,cAAOhD,QAAP,IAAOA,OAAP,EAAOA,EAAQyM,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAM8F,QAErC,OAAQ,OAAL0Q,QAAK,IAALA,OAAA,EAAAA,EAAOpZ,QAAS,EAEhB,cAAC,MAAD,CAAK6L,UAAU,SAAS5D,UAAU,kBAAlC,SACImR,EAAM3Q,KAAI,SAAClE,GAAD,OAAeA,GACpB,cAAC,OAAD,CAAMsG,KAAK,QAAX,SAAoBtG,EAAKL,YAI3B,KAqDLmV,GAhDS,WAChB,IAAMhH,IAAa,OAAJ3C,QAAI,IAAJA,OAAA,EAAAA,EAAM7J,YAAa,IAAI4C,KAAI,SAACC,GACxC,cAAO7C,QAAP,IAAOA,OAAP,EAAOA,EAAWsM,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAM8F,QAIzC,OAAG2J,EAAMrS,OAAS,EAEf,eAAC,MAAD,CAAK6L,UAAU,SAAS5D,UAAU,kBAAlC,UACG,cAAC,OAAD,CAAMqR,OAAO,OAAOzO,KAAK,QAAQ5C,UAAU,yBAA3C,4BACCoK,EAAM5J,KAAI,SAAClE,GAAD,OACL,cAAC,OAAD,CAAMsG,KAAK,QAAX,SAAoBtG,EAAKL,aAK3B,KAiCHqV,GAED,cAAC,MAAD,CACI1N,UAAU,MACVlB,MAAM,SACNC,QAAQ,UAHZ,SA/BU,WAAO,IAAD,IACpB4O,EAAU,CACb,cAAC,GAAD,CAAY3O,KAAM,GAAIwK,MAAQ,QAAC3F,QAAD,IAACA,GAAD,UAACA,EAAMzK,aAAP,aAAC,EAAarC,IAAI6N,QAAW,OAAJf,QAAI,IAAJA,GAAA,UAAAA,EAAM/J,gBAAN,eAAgB8C,KAAI,SAACC,GAAD,OAAOA,GAAK,QAAO,IAAKD,KAAI,SAACC,GACrG,GAAG2M,GAASA,EAAMrV,OAAS,EAAE,CAC5B,IAAI0V,EAAOL,EAAMlD,MAAK,SAAC/Q,GAAD,OAAYA,EAAEwB,IAAM8F,KAC1C,MAAO,CACNX,MAAOxH,aAAcmV,EAAMA,EAAK9S,GAAK8F,GACpCxE,KAAMwR,EAAMA,EAAKxR,KAAO,IAGzB,MAAO,CACL6D,MAAO,GACP7D,KAAM,UAMTuV,GAAU,OAAJ/J,QAAI,IAAJA,OAAA,EAAAA,EAAM5L,SAAN,OAAgBsU,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAUjG,MAAK,SAAC/Q,GAAD,OAAQ,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGwB,MAAH,OAAS8M,QAAT,IAASA,OAAT,EAASA,EAAM5L,QAAQlB,OAAM,CAAC+B,MAAO,IAKrF,OAHM,OAAH8U,QAAG,IAAHA,OAAA,EAAAA,EAAK9U,SAAY,OAAH8U,QAAG,IAAHA,OAAA,EAAAA,EAAK9U,MAAM3E,QAAS,GAClCwZ,EAAQ/H,KAAK,cAACiI,GAAD,CAAShN,OAAQ,GAAIjB,MAAO,MAErC+N,EAYKG,SCnFJC,GAAiC,SAAC,GAAY,IAAD,EAAVlK,EAAU,EAAVA,KAC5C,QAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM9J,QAAS,IAAI5F,OAAS,EAChC,cAAC,MAAD,CAAK8H,WAAY,UAAjB,SACI,eAAC,OAAD,CAAMC,MAAM,QAAQE,UAAU,kBAA9B,2BAAwDyH,QAAxD,IAAwDA,GAAxD,UAAwDA,EAAM9J,aAA9D,aAAwD,EAAa5F,YAEzE,MCDK6Z,GAAiC,SAAC,GAA8B,IAAD,EAA5BnK,EAA4B,EAA5BA,KACxC3H,GADoE,EAAtB+R,OAAsB,EAAdC,SAC9CxZ,cAAkB,OAAJmP,QAAI,IAAJA,GAAA,UAAAA,EAAMzK,aAAN,eAAaf,OAAQ,KAC3C8V,EAAana,aAAYkI,GAE7B,OACI,cAAC,MAAD,CACI6C,QAAQ,SACTiB,UAAU,MACV/D,WAAYC,EACZmB,MAAO,CACJwD,OAAQ,OACRK,QAAS,OACT+C,WAAY,SACZmK,YAAa,OARnB,SAUE,cAAC,OAAD,CAAMpP,KAAK,QAAQ3B,MAAO,CAACnB,MAAOiS,GAAlC,SAAgDtK,EAAK5L,QAAQlB,QCnB1DsX,GAA4C,SAAC,GAAsC,IAApCxK,EAAmC,EAAnCA,KAAMyK,EAA6B,EAA7BA,OAAQ9E,EAAqB,EAArBA,MAAOnN,EAAc,EAAdA,QAC7E,EAA8BwB,qBAA9B,mBAAO0Q,EAAP,KAAgBC,EAAhB,KAwBA,OACI,cAAC,MAAD,CACIrS,UAAU,QACVmF,SAAS,SACTyK,MAAM,SACN9P,WAAW,WAJf,SAMI,cAAC,KAAD,CACIwS,8BAA+B,IAC/BC,SAAa,OAAJ7K,QAAI,IAAJA,OAAA,EAAAA,EAAM9J,QAAS,IAAI5F,OAAS,GAAgB,MAAXoa,EAC1CzM,OAAQyM,EACRI,YAAa,QACbzY,KACI,8BACI,oBAAImH,MAAO,CAAEuR,UAAW,OAAQR,YAAa,GAA7C,SAAmDvK,EAAK9J,MAAM6C,KAAI,SAACC,GAAD,OAAQ,6BAAKA,WAP3F,SAUI,eAAC,MAAD,CACI,YAAsB,MAAX0R,EAAkB,wBAAqB1Y,EAClD,gBAAc,OACdgZ,aAjCG,SAAChN,GAChB2M,EAAW3M,EAAEiN,gBAiCDC,aA5BC,SAAClN,GACd2M,EAAW,OA4BCpS,UAAU,gBALd,UAOI,cAAC,GAAD,CACI6R,OA3CL,WACPK,GAAQA,GAAQ,IA2CJJ,SAhDH,WACTI,GAAQA,EAAO,IAgDHzK,KAAMA,IAEV,eAAC,MAAD,CACIpH,IAAI,SACJY,MAAO,CAAE0G,eAjCX,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMhK,UAAc,OAAJgK,QAAI,IAAJA,OAAA,EAAAA,EAAMhK,OAAO1F,QAAS,IAAW,OAAJ0P,QAAI,IAAJA,OAAA,EAAAA,EAAM7J,aAAiB,OAAJ6J,QAAI,IAAJA,OAAA,EAAAA,EAAM7J,UAAU7F,QAAS,OAiCrC0B,EAAT,OAAqBmZ,SAAU,YAAc3S,QAASA,EAF/F,UAGI,cAAC,OAAD,CAAM2C,KAAK,QAAQyO,OAAO,OAAOrR,UAAU,aAA3C,gBAA0DyH,QAA1D,IAA0DA,OAA1D,EAA0DA,EAAM5L,QAAQI,OACxE,cAAC,GAAD,CACImR,MAAOA,GAAS,GAChB3F,KAAMA,OAEd,cAAC,GAAD,CACIA,KAAMA,YCpEjBoL,GAAoC,SAACjT,GAC9C,OACI,eAAC,MAAD,CACI6C,MAAI,EACJkN,MAAM,SACN9P,WAAW,YACX+D,UAAU,SAJd,UAMI,cAAC,MAAD,UACKhE,EAAMsC,SAEX,cAAC,MAAD,CAAKO,MAAI,EAAT,SACK7C,EAAMkT,eCAnBjN,GAASmI,EAAQ,IAwBR+E,GAA4C,SAACnT,GACxD,MAA+B6B,oBAAS,GAAxC,mBAAOuR,EAAP,KAAkBC,EAAlB,KAEA,EAAwBxR,mBAASoE,GAAOjG,EAAMxC,MAAM8V,QAAQ,YAA5D,mBAAO9V,EAAP,KAAa+V,EAAb,KAEA,EAA4B1R,mBAAgB,CAACoE,KAASqN,QAAQ,WAAYrN,KAASuN,MAAM,aAAzF,mBAAOC,EAAP,KAAeC,EAAf,KAIA,EAA0C7R,mBAAgB,IAA1D,mBAAOoK,EAAP,KAEA,GAFA,KAEgCpK,sBAAhC,mBAAO2G,EAAP,KAAiBmL,EAAjB,KAEA,EAAoC9R,qBAApC,mBAAmB+R,GAAnB,WAEA,EAAkC/R,mBAAS,IAAIpD,MAA/C,mBAAOtB,EAAP,KAAkBoR,EAAlB,KAEA1K,QAAQC,IAAI9D,EAAM6T,QAElB7R,qBAAU,WACLhC,EAAMxC,MACP+V,EAAQtN,GAAOjG,EAAMxC,MAAM8V,QAAQ,cAEpC,CAACtT,EAAMxC,OAyBV,IAAMsW,EAAa,SAACC,GAClB,IAAIN,EAAS,CAACxN,GAAO8N,GAAMT,QAAQ,WAAYrN,GAAO8N,GAAMC,QAAQR,MAAM,YAC1ED,EAAQtN,GAAO8N,GAAMT,QAAQ,YAC7BI,EAAUD,GAEVzT,EAAMiU,iBAAiB,IAAIxV,KAAKgV,EAAO,GAAGzK,WAAY,IAAIvK,KAAKgV,EAAO,GAAGzK,aAgCrEkL,EAAa,SAACtb,EAAWsN,GAG7B,OAFQD,GAAOwN,EAAO,IACZ1F,IAAInV,EAAG,OACRsN,OAAOA,IA0CZiO,EAAiB,SAACvb,GAAe,IAAD,EAChCwb,EAAcnO,GAAOzI,GAAMwW,QAAQjG,IAAInV,EAAG,QAE9C,OADAiL,QAAQC,IAAI,kBAAmBsQ,EAAYlO,OAAO,eAClD,UAAOlG,EAAM6T,cAAb,aAAO,EAAcvS,QAAO,SAAC/H,GAE3B,OAAO0M,GAAO1M,EAAEiE,MAAM6W,OAAOD,EAAa,UACzCxT,KAAI,SAACC,EAAQC,GACd,OACE,oBAAIO,MAAO,CAAE6O,QAAS,EAAGlI,aAAc,GAAvC,SACE,cAAC,GAAD,CACEzB,KAAMvG,EAAMuQ,SACZ/C,MAAOxN,EAAMwN,MACbnN,QAAS,WACFL,EAAM6N,KAAKyG,SAOdC,GAAkB,EAAM1T,IAI5ByR,OAAQ,SAACkC,KAET3M,KAAMhH,GADDC,SAOTyT,EAAoB,SAACE,GAAsC,IAArB7C,EAAoB,uDAAT,KAErD,GADA/N,QAAQC,IAAI2Q,EAAQ7C,GAChB6C,EAAQ,CAMN7C,GAAOA,EAAIpU,MACb+Q,EAAaqD,EAAIpU,MAGnB6V,GAAU,GACVM,EAAY/B,QAGZyB,GAAU,IAsBdxP,QAAQC,IAAI,OAAQ9D,EAAM6N,MAE1B,IAyBM6G,EAA0B,SAACC,GAG7B,OACE,cAAC,SAAD,CAAQtT,MAAO,CAACpB,WAAY,WAAYC,MAAM,WAAWc,MAAM,SAAwBZ,UAAU,kBAAkBC,QAAS,WAC1H,IAAIuU,EAAM3O,GAAOwN,EAAO,IAAI1F,IAAI4G,EAAU,OAC1CpG,EAAaqG,GACbhB,EAAce,GAIdJ,GAAkB,KAPyDI,IAgB7EE,EAAmB,WAEvB,IADA,IAAI5a,EAAU,GACLrB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkc,EAAQ,IAAIrW,KACZsW,EAAaD,EAAME,UACnBC,EAAeH,EAAMI,WAAa,EACtCjb,EAAQ2P,KACN,eAAC,MAAD,CACE5F,UAAU,SACVnB,MAAI,EACJzC,UAAY2U,GAAcb,EAAWtb,EAAG,OAASqc,GAAgBf,EAAWtb,EAAG,MAAS,2CAA6C,kBAHvI,UAIE,cAAC,MAAD,UACGsb,EAAWtb,EAAG,SAEjB,cAAC,MAAD,UACGsb,EAAWtb,EAAG,eAKvB,OAAOqB,GAyBHkb,EAtBa,WAEjB,IADA,IAAIpB,EAAO,GACFnb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMwc,EAAYjB,EAAevb,GAC7Bkc,EAAQ,IAAIrW,KACZsW,EAAaD,EAAME,UACnBC,EAAeH,EAAMI,WAAa,EACtCnB,EAAKnK,KACH,cAAC,MAAD,CACEnJ,IAAK,CAACuP,WAAY,UAClBnN,MAAI,EACJzC,UAAY2U,GAAcb,EAAWtb,EAAG,OAASqc,GAAgBf,EAAWtb,EAAG,MAAS,6BAA+B,WAHzH,SAIE,qBAAIyI,MAAO,CAAEwB,KAAM,EAAG+P,UAAW,OAAQ1C,QAAS,GAAK9P,UAAU,mBAAjE,UACGgV,EACAV,EAAwB9b,SAKjC,OAAOmb,EAGYsB,GACfC,EA3F4B,WAChC,IAAIC,EAAYtJ,EAChB,OACE,cAAC,GAAD,CAEEgD,aAAcjP,EAAMiP,aACpBC,WAAYlP,EAAMkP,WAClBF,YAAahP,EAAMgP,YAEnBuB,SAAUvQ,EAAMuQ,SAChB1S,OAAQmC,EAAMnC,OACdG,UAAWgC,EAAMhC,UAEjB6P,KAAM7N,EAAM6N,KACZL,MAAOxN,EAAMwN,MAEblJ,QAAS,kBAAMiQ,GAAkB,IACjC7P,KAAM0O,EACNjW,UAAWA,EACX8O,cAAesJ,EACf7Y,KAAM8L,IAuEUgN,GAEtB,OACE,cAACrE,GAAoBsE,SAArB,CACEjR,MAAO,CACH+L,SAAUvQ,EAAMuQ,SAChB1S,OAAQmC,EAAMnC,OACdG,UAAWgC,EAAMhC,WAJvB,SAMA,cAAC,GAAD,CACEsE,OAvPiB,WACnB,IAAIoT,EAAab,IACjB,OACE,eAAC,MAAD,CACEvP,SAAS,SACTtB,UAAU,SACV5D,UAAU,cAHZ,UAIE,cAAC,MAAD,CACE2P,MAAO,CAAC4F,OAAQ,MAAO3S,KAAM,UAC7B/C,WAAW,WACX6C,MAAM,SACN1C,UAAU,wBAJZ,SAKE,cAAC,GAAD,CACEoE,MAAOhH,EACPsT,cAAe,YACfD,SAAU,OACVjL,SAAUkO,MAEd,cAAC,MAAD,CACErT,IAAK,CAACC,SAAU,UAChBT,WAAY,WACZ+D,UAAU,MACV5D,UAAU,oBAJZ,SAKGsV,OAgOGE,GADV,SAEG5V,EAAM6V,UACH,eAAC,MAAD,CACEhT,MAAI,EACJE,QAAQ,SACRD,MAAM,SAHR,UAIE,cAAC,UAAD,CAASE,KAAK,WACd,cAAC,OAAD,sCAGF,eAAC,MAAD,CAAKsC,SAAU,SAAUzC,MAAI,EAACmB,UAAU,MAAM5D,UAAU,YAAxD,UACG+U,EACAG,U,UCpQEQ,GA9E2B,SAAC9V,GAsEvC,OAAQA,EAAMkD,KACZ,qBAAK9C,UAAU,gBAAf,SACE,cAAC,EAAD,CAAYtD,MAAO,CAACkD,EAAMkD,MAAO1J,MAAOwG,EAAMxG,UAF7B,MCxEZuc,GAAqC,SAAC/V,GAAW,IAAD,EACzD,OACI,cAAC,MAAD,CACIgE,UAAU,MACVgS,MAAI,EACJ5V,UAAU,mBAHd,mBAICJ,EAAMlD,aAJP,aAIC,EAAa8D,KAAI,SAACC,EAAGC,GAAJ,OAChB,eAAC,MAAD,CAAcV,UAAU,YAAYC,QAAS,kBAAOQ,EAAE7D,IAAOgD,EAAMK,QAAQQ,GAAK,cAAhF,UACIA,EAAE7D,IAAQ,qBAAKoD,UAAU,uBAAuBC,QAAS,SAACwF,GAC1D7F,EAAMiW,cAAcpV,GACpBgF,EAAEqQ,mBAFQ,SAIV,cAACC,GAAA,EAAD,MACQ,KACPtV,EAAE7D,IAAqE,KAA7D,qBAAKoD,UAAU,yBAAf,SAAwC,cAAC,UAAD,MACrD,cAAC,GAAD,CAAU8C,KAAMrC,IACdA,EAAE7D,IAAO,cAAC,OAAD,UAAO6D,EAAExE,OAAe,OAT3ByE,S,SCXPsV,GAAoC,SAACpW,GAAW,IAAD,MACxD,EAA8B6B,mBAAgB,IAA9C,mBAAOoI,EAAP,KAAgBoM,EAAhB,KACA,EAAwBxU,qBAAxB,mBAAOgJ,EAAP,KAAayL,EAAb,KAEMC,EAAc,SAACtM,GAAuB,IAAD,EACvCoM,EAAWpM,GACX,UAAAjK,EAAMkB,gBAAN,cAAAlB,EAAiBiK,EAAQrJ,KAAI,SAACC,GAAD,uBAAOb,EAAMlD,aAAb,aAAO,EAAawN,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAM8F,UA2BzE,OACI,cAAC,YAAD,CACI2V,KAAM,GACNC,UAAU,EACVC,OAAQ,kBAAM7S,QAAQC,IAAI,SAC1B6S,KAAG,EACH3M,WAAY,KACZ4M,QAAS,CACL,CACIC,SAAU,WACVC,OAAQ,SAAA5O,GAAK,OACRlI,EAAM+W,SAAW,IAAI7e,QAAQgQ,EAAMnN,KAAO,IAAMmN,EAAMlL,IACnD,cAAC,UAAD,IAEA,cAAC,WAAD,CACIiN,QAASA,EAAQ/R,QAAQgQ,EAAMnN,KAAO,EACtC6K,SAAU,SAACC,GAxCvB,IAAC+B,EAA4CpD,EAA5CoD,EAyCuB/B,EAzCqBrB,EAyClB0D,EAAMnN,GAxCzC6M,EAAM9B,OAAOmE,QACbsM,EAAY,GAAD,oBAAKtM,GAAL,CAAczF,KAEzB+R,EAAYtM,EAAQ3I,QAAO,SAAA5E,GAAI,OAAIA,IAAS8H,MAsCpBqB,EAAEmR,iBACFnR,EAAEqQ,sBAGlB5T,OACI,cAAC,WAAD,CACIsD,SAxCL,SAACgC,GAChB2O,EAAY3O,EAAM9B,OAAOmE,SAAWjK,EAAMlD,OAAS,IAAI8D,KAAI,SAACsH,GAAD,OAAWA,EAAMnN,MAAM,KAwC9DkP,QAASA,EAAQ9R,SAAR,UAAkB6H,EAAMlD,aAAxB,aAAkB,EAAa3E,QACxC8e,cAAehN,EAAQ9R,OAAS,GAAK8R,EAAQ9R,SAAU,UAAA6H,EAAMlD,aAAN,eAAa3E,SAAU,KAEtF+e,UAAU,GAEd,CACIL,SAAU,OACVvU,OAAQ,cAAC,OAAD,mBACR4U,UAAU,GAEd,CACIL,SAAU,SACVvU,OAAQ,SACR4U,UAAU,IAGlBC,OAAQ,gBAAGN,EAAH,EAAGA,SAAU7S,EAAb,EAAaA,UAAb,OAA6BsS,EAAQ,CAAEO,WAAU7S,eACzD6D,KAAI,UAAE7H,EAAMlD,aAAR,aAAE,EAAa+N,MAvDT,SAACtR,EAAQd,GACvB,IAAKoS,EAAM,OAAO,EAClB,IAAIuM,EAAQ7d,EAAEsR,EAAKgM,WAAa,GAC5BQ,EAAO5e,EAAEoS,EAAKgM,WAAa,GAC/B,MAAyB,OAAlBhM,EAAK7G,UACRoT,GAASC,EAAO,EAAID,EAAQC,EAAO,GAAK,EAExCD,GAASC,EAAO,EAAID,EAAQC,EAAO,GAAK,KAiDxCC,WAAY,YAAwB,IAArBxR,EAAoB,EAApBA,OAAQoC,EAAY,EAAZA,MACfqP,EAAWzR,EACI,SAAfyR,EAAIC,SAAkC,YAAZD,EAAI7Q,MAEvB6Q,EAAIE,qBAAqB,SAAStf,OAAS,IAGlD0L,QAAQC,IAAIyT,EAAIC,SAChBxX,EAAMK,QAAQ6H,QC7BnBwP,GAjC+C,SAAC1X,GAC7D,MAA0B6B,qBAA1B,mBAAQgJ,EAAR,KAEA,GAFA,KAEgChJ,mBAAmB,KAAnD,6BAEoB2K,mBAAQ,WAC1B,OAAI3B,GAEI7K,EAAMlD,OAAS,IAAI8D,KAAI,SAACC,GAAD,sBAAYA,MAAKgK,MAAK,SAACtR,EAAQd,GAC5D,IAAI2e,EAAQ7d,EAAEsR,EAAKgM,WAAa,GAC5BQ,EAAO5e,EAAEoS,EAAKgM,WAAa,GAC7B,MAAyB,OAAlBhM,EAAK7G,UACVoT,GAASC,EAAO,EAAID,EAAQC,EAAO,GAAK,EAExCD,GAASC,EAAO,EAAID,EAAQC,EAAO,GAAK,KAR7BrX,EAAMlD,OAAS,KAW/B,CAAC3C,KAAKC,UAAU4F,EAAMlD,OAAQ+N,IAG/B,OAAO7K,EAAM2X,KACX,cAAC,GAAD,CACEtX,QAASL,EAAMK,QACf4V,cAAejW,EAAMiW,cACrBnZ,MAAOkD,EAAMlD,QAEf,cAAC,GAAD,CACEuD,QAASL,EAAMK,QACfa,SAAUlB,EAAMkB,SAChBpE,MAAOkD,EAAMlD,S,8BCvCH8a,aAAgB3R,K,OCXrB4R,GAA0C,SAAC7X,GAEpD,OAAO,cAAC,KAAD,CACC8X,YAAa9X,EAAM8X,aAAe,GAClCpR,KAAK,OAFN,SAGE,SACGqR,GADH,aAGL,eAAC,MAAD,2BACQA,EAAaC,gBADrB,IAEIC,IAAKF,EAAaG,SAClBxS,IAAI,QACJrE,MAAO,CAAC8W,UAAW,eACnB1X,IAAK,CAACC,SAAU,SAChBsD,UAAU,SACVnB,MAAI,EAPR,oBAQC7C,EAAMwK,aARP,aAQC,EAAa5J,KAAI,SAAClE,EAAM2O,GAAP,OACd,cAAC,KAAD,CAAyB+M,YAAa1b,EAAK3B,GAAIsQ,MAAOA,EAAtD,SACG,SACCgN,EACAC,GAFD,aAIC,cAAC,MAAD,qCACAvI,MAAM,SACNS,OAAQ,CAACC,KAAM,MAAOvQ,MAAO,YAAa8C,KAAMsV,EAAaC,WAAa,MAAQ,OAClFN,IAAKI,EAAaH,UACdG,EAAaG,gBACbH,EAAaI,iBALjB,cAOU,OAALzY,QAAK,IAALA,GAAA,UAAAA,EAAO0Y,kBAAP,oBAAA1Y,EAAoBtD,KAAS,WAZtBA,EAAK3B,OAiBxBgd,EAAapS,oBC5BTgT,GAA6C,SAAC,GAQpD,IAAD,IAPFrL,aAOE,MAPM,GAON,MANFjC,aAME,MANM,EAMN,MALFb,aAKE,MALM,CAAC,CAACvP,OAAQ,SAAUoB,KAAM,KAKhC,EADFqc,GACE,EAJFE,iBAIE,EAHFC,SAGE,EAFFC,aAEE,EADFJ,YAEA,OACQ,eAAC,MAAD,CACIzY,WAAW,WACX8P,MAAM,SACN/L,UAAU,SACVJ,MAAM,QACNnD,IAAK,CAACuP,WAAY,SALtB,UAOI,eAAC,MAAD,CACIlN,MAAM,SACNC,QAAQ,UACRyN,OAAQ,CAACC,KAAM,SAAUvQ,MAAO,UAChC8D,UAAU,MAJd,UAMI,cAAC,UAAD,CACItC,OAAO,QACPoD,MAAM,IAFV,SAEewI,IACf,cAAC,MAAD,CACIjM,MAAO,CAAC0X,WAAY,QACpBjW,MAAM,SACNC,QAAQ,SACRa,MAAM,OACNiB,OAAO,OACPpE,IAAI,SACJR,WAAW,SACX8P,MAAM,QARV,SASI,cAAC,OAAD,CAAM/M,KAAK,QAAX,gBAAoBwH,QAApB,IAAoBA,OAApB,EAAoBA,EAAOrS,cAGnC,cAAC,MAAD,CACImN,SAAU,CAAC5E,SAAU,QACrBmC,MAAI,EAFR,SAGC,cAAC,GAAD,CACGiV,YAAW,UAAKzM,GAChBqN,WAAYA,EACZlO,MAAOA,UCnCdwO,GAAqC,SAAC,GAQ5C,IAPHC,EAOE,EAPFA,gBACAJ,EAME,EANFA,SACAD,EAKE,EALFA,iBACAM,EAIE,EAJFA,sBACAR,EAGE,EAHFA,WACAS,EAEE,EAFFA,OAEE,IADFvC,eACE,MADQ,GACR,EAoBMwC,EACA,cAAC,KAAD,CACItB,YAAY,QACZpR,KAAK,SACL1C,UAAU,aACVqV,wBAAyB1a,QAAQsa,GAJrC,SAKK,SAACK,GAAD,OACG,eAAC,MAAD,yBACE5T,IAAI,QACJjF,IAAI,QACJuD,UAAU,MACVnB,MAAI,EACHoV,IAAKqB,EAASpB,UACVoB,EAAStB,gBANhB,cAOCpB,EAAQhW,KAAI,SAAC2D,EAAK8G,GAAN,OACb,cAAC,GAAD,CAEIA,MAAOA,EACPiC,MAAO/I,EAAI+I,MACX9C,MAAOjG,EAAIgV,KACXT,aAAcI,EACdN,iBAAkBA,EAClBC,SAAUA,EACVH,WAAYA,GAPPnU,EAAIxJ,OASZue,EAAS3T,mBAS1B,OACI,cAAC,KAAD,CAAiB6T,UAAWL,GArDd,SAACM,GAAwB,IAAD,EACtC5V,QAAQC,IAAI2V,GAEZ,IAAInW,EAAkBhL,SAASmhB,EAAOC,OAAO5B,aACzC6B,EAAI,UAAGF,EAAOG,mBAAV,aAAG,EAAoB9B,YAE/B,GAAG6B,EAAK,CAAC,IAAD,EACFE,EAAO,UAAGjD,EAAQtT,GAAQiW,YAAnB,aAAG,EAAsB3Y,KAAI,SAACC,GAAD,OAAOA,EAAE9F,MAAI7C,QAAQuhB,EAAOrB,aACpE,GAAGyB,GAAWA,GAAW,EAAE,CAAC,IAAD,IACrBnd,EAAI,UAAGka,EAAQtT,GAAQiW,YAAnB,aAAG,EAAsB5P,OAAOkQ,EAAS,GACjD,UAAAjD,EAAQte,SAASqhB,IAAOJ,YAAxB,SAA8B3P,KAAKlN,MA2CvC,SACI,cAAC,MAAD,CAAKmG,MAAI,EAAT,SACIuW,O,sECnDHU,GAA8C,SAAC,GAcpD,IAAD,IAbLhd,aAaK,MAbG,GAaH,EAXLid,GAWK,EAZLnU,SAYK,EAXLmU,UAEA1Y,GASK,EAVL2Y,MAUK,EATL3Y,OACAhB,EAQK,EARLA,QACA4Z,EAOK,EAPLA,SACAC,EAMK,EANLA,OAIAnD,GAEK,EALLoD,OAKK,EAJLC,MAIK,EAHLC,YAGK,EAFLtD,SACAuD,EACK,EADLA,UAGA,EAAkCzY,mBAAc,MAAhD,mBAEA,GAFA,UAE4CA,mBAAgB,KAA5D,mBAAQ0Y,EAAR,KAAuBC,EAAvB,KAEA,EAAmC3Y,oBAAkB,GAArD,mBAIA,GAJA,UAI8BA,oBAAkB,IAAhD,mBAAQ4Y,EAAR,KAAgBC,EAAhB,KAKMC,EAAe,SAACC,GAEPA,EAAcha,KAAI,SAACC,GAAD,MAAQ,CACrC1C,IAAK0c,eACL3X,KAAMrC,EACNxE,KAAMwE,EAAExE,KACRye,UAAU,MAGJ,OAARf,QAAQ,IAARA,KAAWa,IA8BPG,EAAa,SAAC7X,KAsBlB,OACE,cAAC,MAAD,CACEL,MAAI,EACJkN,MAAM,SACNzK,SAAS,SACTtB,UAAU,SACV3C,MAAK,eAAMA,GALb,SAME,eAAC,MAAD,CACEwB,MAAI,EACJxB,MAAO,CAAC2R,SAAU,YAFpB,UAGE,eAAC,MAAD,CACE/S,WAAW,WACX+D,UAAU,MACVjB,QAAQ,UAHV,UAII,eAAC,MAAD,CACEgN,MAAO,CAAC4F,OAAQ,MAAO3S,KAAM,UAC7BgB,UAAU,MAFZ,UAQE,cAAC,SAAD,CACE3D,QAjCA,WACR,OAAN6Z,QAAM,IAANA,KAASK,IAiCKvX,KAAK,QACLmF,SAAkC,GAAxBoS,EAAcpiB,OACxBoI,KAAM,cAAC,KAAD,MACR,cAAC,SAAD,CACEF,QAjCE,WACR,OAAR4Z,QAAQ,IAARA,KAAWM,IAiCGvX,KAAK,QACLmF,SAAkC,GAAxBoS,EAAcpiB,OACxBoI,KAAM,cAAC,KAAD,CAAcL,MAAM,yBAE9B,eAAC,MAAD,CACEoF,SAAS,SACTyK,MAAO,CAAC4F,OAAQ,MAAO3S,KAAM,UAC7BgB,UAAU,MACV7D,UAAU,IACVuF,IAAI,QALN,UAMA,cAAC,SAAD,CACE3E,QAAS0Z,EACTla,KAAM,cAAC,KAAD,IACNF,QAAS,kBAAMqa,GAAU,MAE3B,cAAC,SAAD,CACE3Z,OAAQ0Z,EACRla,KAAM,cAAC,KAAD,IACNF,QAAS,kBAAMqa,GAAU,YAI7B,cAAC,KAAD,CAAUM,SAAS,EAAMC,YAAY,EAAMC,OAAQP,EAAnD,SACG,gBAAEQ,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,aAA/B,EAA6C3W,KAA7C,OACC,0BAASrD,MAAO,CAACwB,KAAM,EAAGqC,QAAS,OAAQC,cAAe,SAAUmW,QAAS,OAAQxT,UAAW,UAAhG,UAEE,eAAC,MAAD,yBAAKjF,MAAI,EAACzC,UAAS,qBAAoB,OAALtD,QAAK,IAALA,OAAA,EAAAA,EAAO3E,QAAS,EAAI,GAAK,UAAegjB,KAA1E,cACE,mCAAOpgB,GAAG,oBAAuBqgB,OAE1B,OAALte,QAAK,IAALA,OAAA,EAAAA,EAAO3E,QAAS,EAChB,cAAC,GAAD,CACEwf,KAAM8C,EACNc,KAAM,EACNxE,QAASA,EACTuD,UAAWA,EACXpZ,SAAU,SAACsa,GAAD,OAAehB,EAAiBgB,IAC1Cnb,QAASA,EACT4V,cAAe8E,EACfje,MAAOA,GAAS,KAGlB,eAAC,MAAD,CAEE+F,MAAI,EACJC,MAAM,SACNC,QAAQ,SACRiB,UAAU,SACV5D,UAAU,gBANZ,UAOE,cAACqb,GAAA,EAAD,IAAe,eAAC,OAAD,CAAMvb,MAAOmb,EAAe,OAAS,GAArC,UAA0CA,EAAe,OAAS,OAAlE,kCAWrB,cAAC,SAAD,CAAQha,MAAO,CAAC2R,SAAU,WAAY7C,MAAO,GAAIpL,OAAQ,IAAK7E,MAAM,UAAUG,QAAS,WACrF,IAAIqb,EAAYC,SAASC,cAAc,SACvCF,EAAUhV,KAAO,OACjBgV,EAAU/S,UAAW,EACrB+S,EAAUG,SAAW,SAAChW,GAGpB,IAFA,IAAIiW,EAAY,GACZhf,EAAQ+I,EAAEC,OAAOhJ,MACblE,EAAI,EAAGA,EAAIkE,EAAM3E,OAAQS,IAC/BkjB,EAAUlS,KAAK9M,EAAMlE,IAGvB+hB,EAAamB,IAEfJ,EAAUK,SAbZ,SAeE,cAACjQ,EAAA,EAAD,CAAKzK,MAAO,CAAC2a,OAAQ,yBCzOnCC,GAAY,CAChB3Z,OAAQ,CACNW,IAAK,CACH5B,MAAO,CACLqM,gBAAiB,UACjBD,SAAU,GACVvN,MAAO,QACPgc,UAAW,WAGfC,OAAQ,CACN9a,MAAO,CACLqM,gBAAiB,aAEnB0O,cAAe,CACb1O,gBAAiB,UACjB2O,WAAY,SAGhBtX,OAAQ,CACN1D,MAAO,CACLpB,WAAY,UACZC,MAAO,UACPuN,SAAU,QAEZ2O,cAAe,CACb1O,gBAAiB,UACjB2O,WAAY,UAIlBC,SAAU,CACRhP,MAAO,CACLtM,MAAO,WACPK,MAAO,CACLqM,gBAAiB,UACjB6O,aAAc,mBACdrc,MAAO,QACPgc,UAAW,WAGfM,KAAM,CACJnb,MAAO,CACLqM,gBAAiB,YAGrB+O,kBAAmB,CACjBpb,MAAO,CACLqM,gBAAiB,WAEnBgP,KAAM,CACJrb,MAAO,CACLqM,gBAAiB,cAKzBiP,aAAc,CACZpD,KAAM,CACJlY,MAAO,IAGTmb,KAAM,CACJI,WAAW,EAEXvb,MAAO,CACL2R,SAAU,WACV/L,aAAc,GACd/G,MAAO,QACPgc,UAAW,SACXxO,gBAAiB,QAEnB0O,cAAe,CACbpJ,SAAU,WACV/L,aAAc,GACduJ,OAAQ,oBACRtQ,MAAO,QACPgc,UAAW,SACXxO,gBAAiB,UAIvBmP,MAAO,CACL3c,MAAO,QACP4c,cAAe,YAwCJza,GADA,I,WAjCb,aAAe,IAAD,gCADNwF,UACM,OAIdkV,KAAO,SAACC,GACN,EAAKnV,KAAO,GACRmV,EAAQ,EAAKC,SAASD,EAAQf,GAAW,EAAKpU,MAC7C,EAAKA,KAAOoU,IANjBjV,KAAKa,KAAOoU,G,4CASd,SAASe,EAAaf,EAAgBiB,GACpC,GAAKlW,KAAKmW,SAASlB,GACnB,IAAK,IAAI1X,KAAO0X,EACTe,EAAOzY,IAKV2Y,EAAM3Y,GAAOyY,EAAOzY,GACpByC,KAAKiW,SAASD,EAAOzY,GAAM0X,EAAU1X,GAAM2Y,EAAM3Y,KAJjD2Y,EAAM3Y,GAAO0X,EAAU1X,K,sBAQ7B,SAASC,GACP,MAAqB,kBAAVA,GAAuC,mBAAVA,GAAwC,kBAAVA,I,kBAIxE,WACE,OAAOwC,KAAKa,S,0BChDD9H,QA5D2C,SAACC,GACzD,IAAMod,EAAcC,iBAAuB,MAErCC,EAAWD,kBAAgB,GAEjC,EAAqCxb,oBAAkB,GAAvD,mBAAQ0W,EAAR,KAAoBgF,EAApB,KAEMC,EAAc,SAAC/R,GACnB6R,EAASG,QAAUhS,EACnB8R,EAAa9R,IAETiS,EAAmBL,iBAAY,GAmB/BM,EAAc,SAAC9X,GACnB,GAAGyX,EAASG,QAAQ,CAAC,IAAD,EAClB5X,EAAEqQ,kBACF,IACI0H,GADSF,EAAiBD,SAAW,GACpB5X,EAAEgY,QACvBH,EAAiBD,QAAU5X,EAAEgY,QAE5BD,EAAQ,GAAG/Z,QAAQC,IAAI,QAAS8Z,GACjC,UAAA5d,EAAM8d,wBAAN,cAAA9d,EAAyB6F,EAAEgY,QAAU,KAMvC,OACE,sBACE5F,IAAKmF,EACLhd,UAAS,UAAKJ,EAAMI,UAAX,YAAwBJ,EAAM+d,QAAU,UAAW,GAAnD,YAAuE,GAAdxF,EAAqB,WAAY,IACnGlX,MAAO2c,GAAOhB,OAAOV,SAASG,kBAAkBpb,MAChD4c,YAnCc,SAACpY,GACnB,GAAiB,IAAbA,EAAEqY,QAAgBle,EAAM+d,QAAS,CACnCL,EAAiBD,QAAU5X,EAAEgY,QAC7BL,GAAY,GAOZ/jB,OAAO0kB,iBAAiB,YAAaR,GACrClkB,OAAO0kB,iBAAiB,WANR,SAAVC,IACJZ,GAAY,GACZ/jB,OAAO4kB,oBAAoB,YAAaV,GACxClkB,OAAO4kB,oBAAoB,UAAWD,QAuBxC,UAMI,cAACE,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,SAQKxe,CAAf,uaAGY,SAAAye,GAAC,OAAIA,EAAET,QAAU,aAAe,UCnE/BU,GAAuB,IAGvBC,GAAiB,OACjBC,GAAkB,QAClBC,GAAiB,OASjBC,GAAiB,iBACjBC,GAAgB,gBCtBvBC,GAAc,KAgDLC,GADA,I,4DAZbC,cAAgB,SAACrK,EAAUsK,EAAaC,GACtC,OAAOvK,EAAMuK,EAAWD,G,KAG1BE,WAAa,SAACC,GACZ,OAAO,EAAKC,WAAWD,GAAQ,IAAM,K,+CAtCvC,SAAYE,EAAYC,EAAqBC,GAC3C,IAAIC,EAAU1Y,KAAK2Y,WACfC,EAAY,IAAInhB,KAAK8gB,GAGrBM,EAAkF,IAA/DD,EAAUE,oBAAsBJ,EAAQI,qBAA4B,IAG3F,OAFeF,EAAUxX,UAAYsX,EAAQtX,UAAYyX,GAEtCd,IADDU,EAAW,IACmBD,I,yBAElD,SAAYxM,EAAkBwM,EAAqBC,GACjD,IAAIM,EAAe,GAAKN,EACpBO,EAAgBhN,EAAWwM,EAC3B1K,EAAQ9N,KAAK2Y,WACbM,EAAqBnL,EAAM1M,UAAY4X,EAAgBD,EAAehB,GACtEtF,EAAS,IAAIhb,KAAKwhB,GAClBJ,EAA6E,IAA1DpG,EAAOqG,oBAAsBhL,EAAMgL,qBAA4B,IAEtF,OADArG,EAAOyG,QAAQzG,EAAOrR,UAAYyX,GAC3BpG,I,sBAET,WACE,IAAIjc,EAAO,IAAIiB,KAEf,OADAjB,EAAK2iB,SAAS,EAAG,EAAG,EAAG,GAChB3iB,I,uBAET,SAAUgK,EAAYE,GACpB,OAAO0Y,KAAKC,IAAI3Y,EAAIwN,WAAa1N,EAAM0N,WAAa,IAAMxN,EAAI4Y,cAAgB9Y,EAAM8Y,kB,yBAGtF,SAAYC,EAAYlB,GACtB,OAAO,IAAI5gB,KAAK4gB,EAAMkB,EAAO,GAAGvL,Y,wBAWlC,SAAWqK,GACT,OAAOA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,GAAKA,EAAO,IAAM,M,MCRlDmB,GAAazgB,KAvBgC,SAACC,GAEvD,OACE,qBACII,UAAWJ,EAAMI,UACnBiB,MAAO,CACL6D,QAAS,OACTO,eAAgB,SAChBwC,WAAY,SACZwY,WAAY,+BACZzN,SAAU,WACVnO,OAAQ,GACRlD,KAAM3B,EAAM2B,KACZiC,MAAO5D,EAAM4D,MACb8c,OAAQ,WAXZ,SAcE,8BAAM1gB,EAAMgB,YAMMjB,CAAH,wGChBZ4gB,GAAkBxf,IAAMiQ,cAAgC,IClBxDwP,GAAmB,SAAC5gB,GAC7B,OACI,cAAC,MAAD,CACIC,WAAYD,EAAMC,WAClBoB,MAAO,CACH2R,SAAU,WACVrR,KAAM3B,EAAM2B,KACZkD,OAAQ,OACRjB,MAAM,GAAD,OAAK5D,EAAM4D,MAAX,UCiNN7D,QAlMwB,SAACC,GACtC,IAAM6gB,EAAYxD,iBAAuB,MAEzC,EAA2B/L,qBAAWqP,IAA9BtmB,EAAR,EAAQA,KAAM8kB,EAAd,EAAcA,SAER2B,EAAY,SAACzmB,EAAc2Y,GAC/B,OAAQ3Y,GACN,IAAK,OACH,MAAO,OACT,IAAK,QACH,MAAgB,OAAZ2Y,EAA0B,YAClB,OACd,IAAK,OACH,MAAgB,OAAZA,EAA0B,eAClB,KACd,IAAK,UACH,MAAO,KACT,IAAK,WACH,MAAO,MAIP+N,EAAmB,SAACvjB,EAAYnD,GACpC,OAAQA,GACN,IAAK,OACH,OAAO2mB,GAAW5B,WAAW5hB,EAAK6hB,QACpC,IAAK,QACH,OAAO7hB,EAAKyjB,cACd,IAAK,OACH,OAAO,EACT,QACE,OAAO,IAKRC,EAAe,SAAC1jB,EAAqBnD,GACxC,IAAIglB,EAAO,KACX,OAAQhlB,GACN,IAAK,OAEH,OADAglB,EAAO7hB,EAAK6hB,OACLpZ,IAAO,CAACoZ,EAAM,EAAG,IAC1B,IAAK,QACHA,EAAO7hB,EAAK6hB,OACZ,IAAIkB,EAAQ/iB,EAAK+iB,QACjB,OAAOta,IAAO,CAACoZ,EAAMkB,EAAO,IAC9B,IAAK,OACH,OAAO/iB,EAAKwW,QAAQV,QAAQ,QAC9B,QACE,OAAO9V,IAsBP2jB,EAAS,SAAC3jB,EAAqBnD,GAAwC,IAA1B+mB,EAAyB,uDAAN,EAChEC,EAAYN,EAAiBvjB,EAAMnD,IAAS8kB,GAAY,GAC5D,IAAKiC,EAAU,CACb,IAAIE,EAAWJ,EAAa1jB,EAAMnD,GAClCinB,EAAWA,EAAShO,QAAQ,OAC5B,IAAI4L,EAAMjZ,MAASqN,QAAQ,OACvBiO,EAAgBD,EAASE,KAAKtC,EAAK,QACvCkC,EAAWJ,GAAW/B,cAAcsC,EAAgBvhB,EAAMwf,aAAa,EAAKL,GAAW,GAGzF,MAAO,CAAExd,KAAMyf,EAAUxd,MAAOyd,IAI5BI,EAAmB,SAACxe,EAAckZ,EAAgBpX,GAYtD,IAXA,IAAI0U,EAAe,CAAExW,IAAK,GAAIkZ,OAAQ,GAAIpX,OAAQ,GAAI9E,WAAY,IAC9DmhB,EAAiB,GACjBM,EAAa,GACbC,EAAgB,GAChBC,EAAgB,GAChBC,EAAc,KACdC,EAAY,KAEZta,EAAQxH,EAAM+hB,WACdra,GAAO1H,EAAM+hB,YAAc,IAAM/hB,EAAMgiB,gBAAgB,GAVc,WAYhEppB,GAiBP,GAfAipB,EAAc5b,MAAS8H,IAAInV,EAAG,QAC1B8oB,GAAcG,EAAY3b,OAAO4a,EAAU7d,EAAK,UAClDye,EAAaG,EAAY3b,OAAO4a,EAAU7d,EAAK,QAC/C6e,EAAMX,EAAOU,EAAa5e,EAAKme,EAASne,KACxCme,EAASne,IAAM6e,EAAIngB,KAAOmgB,EAAIle,MAC9B6V,EAAOxW,IAAI2G,KAAK,cAAC4W,GAAD,CAAoB7e,KAAMmgB,EAAIngB,KAAMiC,MAAOke,EAAIle,MAAO5C,MAAO0gB,GAA5C9oB,KAG/B+oB,GAAiBE,EAAY3b,OAAO4a,EAAU3E,MAChDwF,EAAgBE,EAAY3b,OAAO4a,EAAU3E,IAC7C2F,EAAMX,EAAOU,EAAa1F,EAAQiF,EAASjF,QAC3CiF,EAASjF,OAAS2F,EAAIngB,KAAOmgB,EAAIle,MACjC6V,EAAO0C,OAAOvS,KAAK,cAAC4W,GAAD,CAAoB7e,KAAMmgB,EAAIngB,KAAMiC,MAAOke,EAAIle,MAAO5C,MAAO2gB,GAA5C/oB,KAGlCgpB,GAAiBC,EAAY3b,OAAO4a,EAAU/b,IAIhD,GAHA6c,EAAgBC,EAAY3b,OAAO4a,EAAU/b,IAC7C+c,EAAMX,EAAOU,EAAa9c,EAAQqc,EAASrc,QAC3Cqc,EAASrc,OAAS+c,EAAIngB,KAAOmgB,EAAIle,MACnB,aAAVmB,GAAmC,YAAVA,EAAsB,CACjD,IAAIkd,EAAUpqB,MAAMqqB,MAAM,KAAMrqB,MAAM,KAAK+I,KAAI,eAAgBA,KAAI,SAACC,EAAGC,GAAJ,OACjE,cAAC,GAAD,CAA0Cb,WAAYa,EAAK,GAAK,EAAI,UAAY,YAAaa,KAAMmgB,EAAIngB,KAASmgB,EAAIle,MAAQ,GAAM9C,EAAK8C,MAAOke,EAAIle,MAAQ,IAA1J,eAA+BhL,EAA/B,YAAoCkI,OAEtC2Y,EAAOxZ,WAAW2J,KAAKqY,GACvBxI,EAAO1U,OAAO6E,KArEH,SAACjI,EAAciC,EAAevJ,EAAckK,GAI7D,IAHA,IAAIkV,EAAS,GACT0I,EAAYve,EAAQ,GACpBwe,EAAW,EACNxpB,EAAI,EAAGA,EAAI,GAAIA,IACtB6gB,EAAO7P,KAAK,cAAC4W,GAAD,CAAoB7e,KAAMygB,EAAUxe,MAAOue,EAAWnhB,MAAe,aAAR3G,EAAsBzB,EAAtB,UAA6BA,EAA7B,QAA5CA,IAC7BwpB,GAAsBD,EAExB,OACE,sBAAe9gB,MAAO,CAAE2R,SAAU,WAAYnO,OAAQ,GAAIlD,KAAMA,EAAMiC,MAAOA,GAA7E,UACG,IACA6V,IAFOlV,GA4Da2P,CAAW4N,EAAIngB,KAAMmgB,EAAIle,MAAOmB,EAAQnM,SAE3D6gB,EAAOxZ,WAAW2J,KAAK,cAAC,GAAD,CAAoCjI,KAAMmgB,EAAIngB,KAAMiC,MAAOke,EAAIle,MAAO3D,WAAYrH,EAAI,GAAK,EAAI,UAAY,aAA3G,eAA+BA,KACtD6gB,EAAO1U,OAAO6E,KAAK,cAAC4W,GAAD,CAAoB7e,KAAMmgB,EAAIngB,KAAMiC,MAAOke,EAAIle,MAAO5C,MAAO4gB,GAA5ChpB,KA7BjCA,GAAK4O,GAAO,GLrHE,GKqHgB5O,EAAI8O,ELrHpB,GKqHuC9O,IAAM,EAA3DA,GAoCT,OACE,sBAAKwH,UAAU,iCAAiCiB,MAAO,CAAEuC,MAAO6a,GAAsBhd,SAAUgd,IAAhG,UACE,cAAC,MAAD,CACExe,WAAW,YACXG,UAAU,aAFZ,SAGGqZ,EAAOxW,MAEV,cAAC,MAAD,CACEhD,WAAW,WACXG,UAAU,gBAFZ,SAGGqZ,EAAO0C,SAEV,cAAC,MAAD,CACElc,WAAW,WACXG,UAAU,gBAFZ,SAGGqZ,EAAO1U,SAEV,cAAC,MAAD,CAAK3E,UAAU,gBAAgBiB,MAAK,aAAGwD,OAAQ,QAAWmZ,GAAOhB,OAAO1a,OAAOyC,OAAO1D,OAAtF,SACGoY,EAAOxZ,iBAmCd,OANI4gB,EAAUpD,UAASoD,EAAUpD,QAAQ4E,WAAcriB,EAAMqiB,YAAY,GAOvE,qBAAKtnB,GAAG,kBAAkBkd,IAAK4I,EAAWzgB,UAAS,UAAKJ,EAAMI,UAAX,kCAAnD,SA9BiB,WACnB,OAAQ/F,GAAQ2F,EAAM3F,MACpB,IL/KuB,MKgLrB,OAAOonB,EAAiB,OAAQ,UAAW,YAC7C,KAAK/C,GACH,OAAO+C,EAAiB,QAAS,OAAQ,WAC3C,KAAK9C,GACH,OAAO8C,EAAiB,QAAS,UAAW,YAC9C,KAAK7C,GACH,OAAO6C,EAAiB,OAAQ,QAAS,SAsBxC7L,OAMM7V,CAAf,4T,SCxLqBuiB,G,kDAEnB,WAAYtiB,GAAuB,IAAD,8BAChC,cAAMA,IAFR0d,sBACkC,IAMlC6E,sBAAwB,SAAC1c,EAAiDmN,GACnD,IAAD,IAAH,IAAbnN,EAAEqY,SACJrY,EAAEqQ,kBACF,eAAKlW,OAAMwiB,yBAAX,gBAA+B,EAAKxiB,MAAMtD,KAAMsW,KATlB,EAYlCyP,oBAAsB,SAAC5c,EAAiDmN,GACtEnN,EAAEqQ,kBACF,EAAKlW,MAAM0iB,mBAAmB,EAAK1iB,MAAMtD,KAAMsW,IAdf,EAgBlC2P,uBAAyB,SAAC9c,EAAqCmN,GAAsB,IAAD,IAClFnN,EAAEqQ,kBACF,eAAKlW,OAAMwiB,yBAAX,gBAA+B,EAAKxiB,MAAMtD,KAAMsW,IAlBhB,EAoBlC4P,qBAAuB,SAAC/c,EAAqCmN,GAC3DnN,EAAEqQ,kBACF,EAAKlW,MAAM0iB,mBAAmB,EAAK1iB,MAAMtD,KAAMsW,IAtBf,EA2FlC6P,YAAc,SAAChd,EAAqCxL,GAC7C,EAAK2F,MAAM8iB,cACC,IAAbjd,EAAEqY,SACJrY,EAAEqQ,kBACF,EAAK6M,UAAUld,EAAEgY,QAASxjB,KA/FI,EAkGlC2oB,YAAc,SAACnd,GACT,EAAKod,MAAM3F,WACbzX,EAAEqQ,kBACF,EAAKgN,YAAYrd,EAAEgY,WArGW,EAwGlCsF,UAAY,WACV,EAAKC,WAzG2B,EA4GlCC,aAAe,SAACxd,EAAqCxL,GAC9C,EAAK2F,MAAM8iB,eAChBjf,QAAQC,IAAI,SACZ+B,EAAEqQ,kBACF,EAAK6M,UAAUld,EAAEyd,QAAQ,GAAGzF,QAASxjB,KAhHL,EAkHlCkpB,YAAc,SAAC1d,GACT,EAAKod,MAAM3F,WACbzZ,QAAQC,IAAI,QACZ+B,EAAEqQ,kBACF,EAAKgN,YAAYrd,EAAE2d,eAAe,GAAG3F,WAtHP,EAyHlC4F,WAAa,SAAC5d,GACZhC,QAAQC,IAAI,OACZ,EAAKsf,WAzHL,EAAKM,eAAiB,EAAKA,eAAe1Y,KAApB,iBACtB,EAAKiY,MAAQ,CAAE3F,UAAU,EAAO3b,KAAM,EAAK3B,MAAM2B,MAAQ,EAAGiC,MAAO,EAAK5D,MAAM4D,OAAS,EAAGvJ,KNxCrE,GMqCW,E,sDAyBlC,SAAmB2F,EAAYijB,GACzBjc,KAAKic,MAAM3F,WAAa2F,EAAM3F,UAChC3B,SAASwC,iBAAiB,YAAanX,KAAKgc,aAC5CrH,SAASwC,iBAAiB,UAAWnX,KAAKmc,WAC1CxH,SAASwC,iBAAiB,YAAanX,KAAKuc,aAC5C5H,SAASwC,iBAAiB,WAAYnX,KAAKyc,cACjCzc,KAAKic,MAAM3F,UAAY2F,EAAM3F,WACvC3B,SAAS0C,oBAAoB,YAAarX,KAAKgc,aAC/CrH,SAAS0C,oBAAoB,UAAWrX,KAAKmc,WAC7CxH,SAAS0C,oBAAoB,YAAarX,KAAKuc,aAC/C5H,SAAS0C,oBAAoB,WAAYrX,KAAKyc,e,4BAIlD,WACE,IAAIE,EAAiB3C,GAAW4C,YAAY5c,KAAKic,MAAMthB,KAAMqF,KAAKhH,MAAMwf,YAAaxY,KAAKhH,MAAMmf,UAAY,GACxG0E,EAAe7C,GAAW4C,YAAY5c,KAAKic,MAAMthB,KAAOqF,KAAKic,MAAMrf,MAAOoD,KAAKhH,MAAMwf,YAAaxY,KAAKhH,MAAMmf,UAAY,GAE7HnY,KAAKhH,MAAM8iB,aAAa9b,KAAKhH,MAAMtD,KAAM,CAAE8K,MAAOmc,EAAgBjc,IAAKmc,M,uBAGzE,SAAUhjB,EAAQxG,GAChB2M,KAAKhH,MAAM8jB,aAAY,GACvB9c,KAAK0W,iBAAmB7c,EACxBmG,KAAK+c,SAAS,CACZzG,UAAU,EACVjjB,KAAMA,EACNsH,KAAMqF,KAAKhH,MAAM2B,MAAQ,EACzBiC,MAAOoD,KAAKhH,MAAM4D,OAAS,M,yBAG/B,SAAY/C,GACV,IAAI+c,EAAQ5W,KAAK0W,iBAAmB7c,EAChCmjB,EAAUhd,KAAKic,MAAMthB,KACrBsiB,EAAWjd,KAAKic,MAAMrf,MAE1B,OAAQoD,KAAKic,MAAM5oB,MACjB,KNlGmB,EMmGjB2pB,EAAUhd,KAAKic,MAAMthB,KAAOic,EAC5B,MACF,KNpG0B,EMqGxBoG,EAAUhd,KAAKic,MAAMthB,KAAOic,EAC5BqG,EAAWjd,KAAKic,MAAMrf,MAAQga,EAC9B,MACF,KNvG2B,EMwGzBqG,EAAWjd,KAAKic,MAAMrf,MAAQga,EAIlC,IAAIsG,EAAY,CACdxnB,KAAMsK,KAAKhH,MAAMtD,KACjBsW,SAAU,CAAExL,MAAOwc,EAAUhd,KAAKhH,MAAMwf,YAAa9X,IAAKsc,EAAUC,EAAWjd,KAAKhH,MAAMwf,cAG5FxY,KAAKmd,iBAELnd,KAAKhH,MAAMokB,eAAeF,GAC1Bld,KAAK+c,SAAS,CAAEpiB,KAAMqiB,EAASpgB,MAAOqgB,IACtCjd,KAAK0W,iBAAmB7c,I,qBAE1B,WACEmG,KAAKhH,MAAM8jB,aAAY,GACvB9c,KAAKmd,iBACLnd,KAAK+c,SAAS,CAAEzG,UAAU,EAAOjjB,KN7HZ,M,4BMmKvB,WACE,IAAIgqB,EAAcrd,KAAKhH,MAAMskB,WAAatG,GAAOhB,OAAOL,aAAaH,KAAKJ,cAAgB4B,GAAOhB,OAAOL,aAAaH,KAAKnb,MACtHqM,EAAkB1G,KAAKhH,MAAME,MAAQ8G,KAAKhH,MAAME,MAAQmkB,EAAY3W,gBAExE,OAAI1G,KAAKic,MAAM3F,SACN,2BACF+G,GADL,IAEE3W,gBAAiBA,EACjB/L,KAAMqF,KAAKic,MAAMthB,KACjBiC,MAAOoD,KAAKic,MAAMrf,MAClBiB,OAAQmC,KAAKhH,MAAM6E,OAAS,IAGvB,2BAAKwf,GAAZ,IAAyB3W,kBAAiB/L,KAAMqF,KAAKhH,MAAM2B,KAAMiC,MAAOoD,KAAKhH,MAAM4D,MAAOiB,OAAQmC,KAAKhH,MAAM6E,OAAS,M,oBAG1H,WAAU,IAAD,SACHxD,EAAQ2F,KAAK0c,iBACjB,OACE,eAAC,MAAD,CACEnY,gBAAgB,EAChBpL,UAAW,SACX8d,YAAa,SAACpY,GAAD,OAAO,EAAKgd,YAAYhd,ENxLpB,IMyLjB0e,aAAc,SAAC1e,GAAD,OAAO,EAAKwd,aAAaxd,ENzLtB,IM0LjBxF,QAAS,SAACwF,GACR,EAAK7F,MAAMwkB,aAAa,EAAKxkB,MAAMtD,OAErC2E,MAAK,2BACAA,GADA,IAEH4B,IAAK,EACLiC,QAAS,SAXb,UAcE,qBACE9E,UAAU,+BACViB,MAAO,CAAE4B,IAAK,EAAGtB,MAAO,EAAGkD,OAAQxD,EAAMwD,QACzCoZ,YAAa,SAACpY,GAAD,OAAO,EAAKgd,YAAYhd,ENrMf,IMsMtB0e,aAAc,SAAC1e,GAAD,OAAO,EAAKwd,aAAaxd,ENtMjB,IMkMxB,SAME,qBACEzF,UAAU,sCACVqkB,UAAW,SAAC5e,GAAD,OAAO,EAAK4c,oBAAoB5c,EAAGiZ,KAC9C4F,WAAY,SAAC7e,GAAD,OAAO,EAAK+c,qBAAqB/c,EAAGiZ,SAGpD,qBAAKzd,MAAO,CAAE6D,QAAS,OAAQrC,KAAM,EAAG4C,eAAgB,SAAUwC,WAAY,SAAU3C,SAAU,UAAlG,UACK,UAAA0B,KAAKhH,MAAMtD,YAAX,eAAiBkgB,WAAoD,kBAA/B5V,KAAKhH,MAAMtD,KAAKkgB,UAA2B5V,KAAKhH,MAAMtD,KAAKkgB,UAAY5V,KAAKhH,MAAMtD,KAAKL,KAAQ,KAE1I,qBACE+D,UAAU,+BACViB,MAAO,CAAE4B,IAAK,EAAGtB,KAAMN,EAAMuC,MAAQ,EAAGiB,OAAQxD,EAAMwD,QACtDoZ,YAAa,SAACpY,GAAD,OAAO,EAAKgd,YAAYhd,ENnNd,IMoNvB0e,aAAc,SAAC1e,GAAD,OAAO,EAAKwd,aAAaxd,ENpNhB,IMgNzB,SAME,qBACEzF,UAAU,sCACV6d,YAAa,SAACpY,GAAD,OAAO,EAAK0c,sBAAsB1c,EAAGgZ,KAClD0F,aAAc,SAAC1e,GAAD,OAAO,EAAK8c,uBAAuB9c,EAAGgZ,gB,GAzL1B3X,aC9BjByd,G,kDACjB,WAAY3kB,GAA2B,uCAC/BA,G,0CAER,WACE,OACE,cAAC,MAAD,CACEI,UAAU,yBACViB,MAAK,2BACE2c,GAAOhB,OAAOL,aAAapD,KAAKlY,OADlC,IAED4B,IAAK+D,KAAKhH,MAAMiD,IAChB4B,OAAQmC,KAAKhH,MAAM4kB,WACnBrI,aAAc,uBACdsI,gBAAiB,IACjBC,iBAAkB,MARxB,SAWG9d,KAAKhH,MAAMkT,e,GAjBehM,aCHxB6d,GAAqB,SAAC1qB,GAC/B,OAAOA,GACH,IAAK,OACD,OAAO,EACX,IAAK,QAEL,IAAK,OACD,OAAO,EACX,IAAK,MACD,OAAO,EAAI,GACf,QACI,OAAO,IAIN2qB,GAAwB,SAAC3qB,GAClC,OAAOA,GACH,IAAK,OACD,MAAO,OACX,QACI,OAAO,IAKN4qB,GAAc,SAAC5qB,GACxB,OAAQA,GACN,IRpBuB,MQqBrB,ORZoB,IQatB,KAAKqkB,GAEL,KAAKC,GACH,ORnBsB,GQoBxB,KAAKC,GACH,ORtBqB,EQuBvB,QACE,ORvBsB,K,qBSkJfsG,GAPanlB,KA9IoB,SAACC,GAAW,IAAD,EAEnDmlB,EAAc9H,iBAAuB,MAE3C,EAA4D/L,qBAAWqP,IAA/DtmB,EAAR,EAAQA,KAAMgH,EAAd,EAAcA,MAAO8d,EAArB,EAAqBA,SAAUiG,EAA/B,EAA+BA,aAAc/C,EAA7C,EAA6CA,WAE7C,EAA4CxgB,oBAAkB,GAA9D,mBAAQwjB,EAAR,KAAuBC,EAAvB,KASA,EAAkCC,MANjB,SAACzf,GAAiC,IAAD,EAC5C0f,EAAa,CAAC5hB,OAAa,OAANkC,QAAM,IAANA,OAAA,EAAAA,EAAQ2f,cAAe,KAAM5gB,QAAc,OAANiB,QAAM,IAANA,OAAA,EAAAA,EAAQ4f,eAAgB,MAEtF,OADGF,EAAW5hB,OAAS4hB,EAAW3gB,SAAQ,UAAA7E,EAAM2lB,cAAN,cAAA3lB,EAAewlB,IAClDA,KAGT,mBAAQI,EAAR,KAMM9B,GANN,KAMoB,SAACxG,GACnBgI,EAAiBhI,KA+DnBtb,qBAAU,WACLmjB,EAAY1H,UAAS0H,EAAY1H,QAAQ4E,WAAa,KACxD,IAEHrgB,qBAAU,WACJmjB,EAAY1H,UACd0H,EAAY1H,QAAQ4E,WAAariB,EAAMqiB,WACvC8C,EAAY1H,QAAQoI,UAAY7lB,EAAM6lB,aAEvC,CAAC7lB,EAAMqiB,WAAYriB,EAAM6lB,YAEGxrB,IAAI,OAAIgH,QAAJ,IAAIA,OAAJ,EAAIA,EAAOpB,YAAhB,OAA8BoB,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAOpB,kBAArC,OAA8B,OAAAoB,EAAoBhH,EAAM8kB,GAAY,IAQjF,GAAD,OAAM4F,GAAmB/kB,EAAM3F,MAAQ,UAAY8kB,GAAY,GAAM,EAArE,WACO6F,GAAsBhlB,EAAM3F,MAAQ,UAG3D,OACI,sBACE4d,IAAKkN,EACLpqB,GAAG,uBACHqF,UAAS,UAAKJ,EAAMI,UAAX,gCACT0lB,QAAS,SAACC,GAEI,OAAZX,QAAY,IAAZA,MAAgB/C,GAAc,GAAK0D,EAAIC,SAEzC/H,YAlDc,SAACpY,GACF,IAAbA,EAAEqY,QAAiBmH,GACrBrlB,EAAMie,YAAYpY,IAiDhB8X,YA9Cc,SAAC9X,GACnB7F,EAAM2d,YAAY9X,EAAGsf,EAAY1H,UA8C7BgH,UAAWzkB,EAAMykB,UACjB1R,aAAc/S,EAAM+S,aACpBwR,aA7Ce,SAAC1e,GACfwf,GACHrlB,EAAMukB,aAAa1e,IA4CjBogB,YAzCc,SAACpgB,GACnB7F,EAAMimB,YAAYpgB,EAAGsf,EAAY1H,UAyC7BiH,WAAY1kB,EAAM0kB,WAClBwB,cAAelmB,EAAMkmB,cAfvB,UAiBGN,EACD,qBACExlB,UAAU,+BACViB,MAAO,CACLpB,WAAY,cACZ4E,OAAQ,OACRjB,MAAO6a,GACPhd,SAAUgd,IANd,SAtGa,WAEjB,IADA,IAAIhF,EAAS,GACJ7gB,EAAIoH,EAAMmmB,SAAUvtB,EAAIoH,EAAMomB,OAAS,EAAGxtB,IAAK,CACtD,IAAI8D,EAAOsD,EAAM6H,KAAKjP,GACtB,IAAK8D,EAAM,MAGX,IAAI2pB,EAAerF,GAAWsF,YAAY5pB,EAAK8K,MAAOxH,EAAMwf,YAAaL,GAAY,GACjFoH,EAAYvF,GAAWsF,YAAY5pB,EAAKgL,IAAK1H,EAAMwf,YAAaL,GAAY,GAAKkH,EACrF5M,EAAO7P,KACL,cAAC,GAAD,CACE0a,WAAYtkB,EAAMwmB,cAAgB9pB,EAEjCsE,MAAOtE,EAAKL,KACZ4G,IAAKrK,GAAKoH,EAAM4kB,WAAa,GAC7BjjB,KAAM,GACNijB,WAAa5kB,EAAM4kB,WAAa,EANnC,SAOE,cAAC,GAAD,CACEloB,KAAMA,EACNsE,MAAOtE,EAAKL,KACZmjB,YAAaxf,EAAMwf,YACnBL,SAAUA,EACVjf,MAAOxD,EAAKwD,MACZyB,KAAM0kB,EACNziB,MAAO2iB,EACP1hB,OAAQ7E,EAAM4kB,WACdd,YAAaA,EACbQ,WAAYtkB,EAAMwmB,cAAgB9pB,EAClC8nB,aAAcxkB,EAAMwkB,aACpBhC,kBAAmBxiB,EAAMwiB,kBACzBE,mBAAoB1iB,EAAM0iB,mBAC1B0B,eAAgBpkB,EAAMokB,eACtBtB,aAAc9iB,EAAM8iB,aAftB,SAiBG,OAtBGlqB,IA2BZ,OAAO6gB,EAuEAgN,UAOiB1mB,CAAH,sFC3EV2mB,G,kDAzEb,WAAY1mB,GAAa,IAAD,8BACtB,cAAMA,IAGR2mB,oBAAsB,WACpB,IAEIxK,EAIJ,MAAO,CAAEyK,KAFF,CAAE/lB,EADTsb,EAAS,EAAKnc,MAAMwH,MAAM3G,GAAK,EAAKb,MAAM0H,IAAI7G,EAAI,EAAKb,MAAMwH,MAAM3G,GAAK,EACpDgmB,EAAG,EAAK7mB,MAAMwH,MAAMqf,GAEnBC,KADd,CAAEjmB,EAAGsb,EAAQ0K,EAAG,EAAK7mB,MAAM0H,IAAImf,KAVhB,EAcxBE,iBAAmB,WACjB,IAAIH,EAAO,CAAE/lB,EAAG,EAAKb,MAAMwH,MAAM3G,EAlBX,GAkBkCgmB,EAAG,EAAK7mB,MAAMwH,MAAMqf,GACxEG,GAAS,EAAKhnB,MAAM0H,IAAImf,EAAI,EAAK7mB,MAAMwH,MAAMqf,GAAK,EAClDC,EAAO,CAAEjmB,EAAG+lB,EAAK/lB,EAAGgmB,EAAGD,EAAKC,EAAIG,GAChCC,EAAO,CAAEpmB,EAAG,EAAKb,MAAM0H,IAAI7G,EArBT,GAqBgCgmB,EAAGC,EAAKD,GAE9D,MAAO,CAAED,KAAMA,EAAME,KAAMA,EAAMG,KAAMA,EAAMC,KADlC,CAAErmB,EAAGomB,EAAKpmB,EAAGgmB,EAAGI,EAAKJ,EAAIG,KAnBd,EAuBxBG,QAAU,SAACC,GACT,IAAIC,EAAc,KAClB,OAAI,EAAKrnB,MAAMwH,MAAM3G,EAAI,EAAKb,MAAM0H,IAAI7G,GACtCwmB,EAAc,EAAKN,mBACb,IAAN,OAAW,EAAK/mB,MAAMwH,MAAM3G,EAA5B,YAAiC,EAAKb,MAAMwH,MAAMqf,EAAlD,aAAwDQ,EAAYT,KAAK/lB,EAAzE,YAA8EwmB,EAAYT,KAAKC,EAA/F,YAAoGQ,EAAYP,KAAKjmB,EAArH,YAA0HwmB,EAAYP,KAAKD,EAA3I,YAAgJQ,EAAYJ,KAAKpmB,EAAjK,YAAsKwmB,EAAYJ,KAAKJ,EAAvL,YAA4LQ,EAAYH,KAAKrmB,EAA7M,YAAkNwmB,EAAYH,KAAKL,EAAnO,YAAwO,EAAK7mB,MAAM0H,IAAI7G,EAAvP,YAA4P,EAAKb,MAAM0H,IAAImf,KAE3QQ,EAAc,EAAKV,sBACb,IAAN,OAAW,EAAK3mB,MAAMwH,MAAM3G,EAA5B,YAAiC,EAAKb,MAAMwH,MAAMqf,EAAlD,aAAwDQ,EAAYT,KAAK/lB,EAAzE,YAA8EwmB,EAAYT,KAAKC,EAA/F,YAAoGQ,EAAYP,KAAKjmB,EAArH,YAA0HwmB,EAAYP,KAAKD,EAA3I,YAAgJ,EAAK7mB,MAAM0H,IAAI7G,EAA/J,YAAoK,EAAKb,MAAM0H,IAAImf,KA9B/J,EAkCxB3lB,SAAW,SAAC2E,GACN,EAAK7F,MAAMwkB,cAAc,EAAKxkB,MAAMwkB,aAAa,EAAKxkB,MAAMtD,OAnC1C,E,0CAsCxB,WACE,IAAI4qB,EAAYtgB,KAAKhH,MAAMskB,WAAatG,GAAOhB,OAAOH,MAAMC,cAAgBkB,GAAOhB,OAAOH,MAAM3c,MAChG,OACE,oBAAGE,UAAU,gBAAb,UACE,sBACEmnB,cAAc,SACdtJ,YAAajX,KAAK9F,SAClB8a,OAAO,QACPjT,EAAG/B,KAAKmgB,UACRK,eAAe,QACfjmB,KAAK,cACLkmB,YAAY,IACZ/G,OAAO,YAGT,sBACE6G,cAAc,SACdtJ,YAAajX,KAAK9F,SAClB8a,OAAQsL,EACRve,EAAG/B,KAAKmgB,UACRK,eAAe,QACfjmB,KAAK,cACLkmB,YAAY,IACZ/G,OAAO,UACPgH,UAAU,uB,GA/DDxgB,aCFEygB,G,kDAInB,WAAY3nB,GAAa,IAAD,8BACtB,cAAMA,IAJR4nB,UAGwB,IAFxBC,WAEwB,IADxBC,WACwB,IAiBxB9E,YAAc,SAACnd,GACR,EAAK+hB,OACR,EAAKC,MAAQhiB,EAAEgY,QACf,EAAKiK,MAAQjiB,EAAEkiB,QACf,EAAKH,MAAO,GAEd,IAAII,EAAO,EAAK/E,MAAMpiB,GAAKgF,EAAEgY,QAAU,EAAKgK,OACxCI,EAAO,EAAKhF,MAAM4D,GAAKhhB,EAAEkiB,QAAU,EAAKD,OAC5C,EAAKD,MAAQhiB,EAAEgY,QACf,EAAKiK,MAAQjiB,EAAEkiB,QACf,EAAKhE,SAAS,CAAEljB,EAAGmnB,EAAMnB,EAAGoB,KA3BN,EA8BxB9E,UAAY,SAACtd,GACX,EAAK7F,MAAM0iB,sBA7BX,EAAKO,MAAQ,CAAEpiB,EAAG,EAAKb,MAAMwH,MAAM3G,EAAGgmB,EAAG,EAAK7mB,MAAMwH,MAAMqf,GAC1D,EAAKe,MAAO,EACZ,EAAKC,OAAS,EACd,EAAKC,OAAS,EALQ,E,qDAQxB,WACEnM,SAASwC,iBAAiB,YAAanX,KAAKgc,aAC5CrH,SAASwC,iBAAiB,UAAWnX,KAAKmc,a,kCAE5C,WACExH,SAAS0C,oBAAoB,YAAarX,KAAKgc,aAC/CrH,SAAS0C,oBAAoB,UAAWrX,KAAKmc,a,oBAoB/C,WACE,OAAO,cAAC,GAAD,CAAe3b,MAAO,CAAE3G,EAAGmG,KAAKhH,MAAMwH,MAAM3G,EAAGgmB,EAAG7f,KAAKhH,MAAMwH,MAAMqf,GAAKnf,IAAK,CAAE7G,EAAGmG,KAAKic,MAAMpiB,EAAGgmB,EAAG7f,KAAKic,MAAM4D,KAAlG,O,GAvCiB3f,aCoNzBghB,GA1KqC,SAACloB,GAAW,IAAD,QAEvDmoB,EC5CmB,SAACptB,GACxB,IAAQ8M,EAASyJ,qBAAWqP,IAApB9Y,KAGR,OADQ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMjH,KAAI,SAACC,EAAGC,GAAJ,mBAAC,eAAeD,GAAhB,IAAmBwK,MAAOvK,OAAMwJ,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAMA,KDyCtDqtB,EAAY,UAAApoB,EAAMmoB,oBAAN,mBAAoB3L,YAApB,eAA0BzhB,KAAM,IAG3D8hB,GE1Ce,SAAC9hB,GACpB,IAAQ8hB,EAAUvL,qBAAWqP,IAArB9D,MAKR,OAAOA,QAAP,IAAOA,KAAOjc,KAAI,SAACC,EAAGC,GAAJ,mBAAC,eAAeD,GAAhB,IAAmBwK,MAAOvK,OAAMwJ,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,IAAMA,KFkC3DstB,CAAO,UAACroB,EAAMmoB,oBAAP,iBAAC,EAAoB3L,YAArB,aAAC,EAA0BzhB,IE/BzB,WACpB,IAAQ8hB,EAAUvL,qBAAWqP,IAArB9D,MAER,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAOjc,KAAI,SAACC,EAAGC,GAAJ,mBAAC,eAAeD,GAAhB,IAAmBwK,MAAOvK,OF8BhCwnB,IACd,EAA2BhX,qBAAWqP,IAA9B9Y,EAAR,EAAQA,KAAMsX,EAAd,EAAcA,SAEd,EAA0Ctd,mBAAc,MAAxD,mBACA,GADA,UAC0CA,sBAA1C,mBAEA,GAFA,UAE4BA,mBAAgB,KAA5C,mBAEM0mB,GAFN,UAEmB,SAACC,EAAkCC,EAAkCC,EAAYnkB,GAClG,GAAIikB,EAAU9gB,KAAQ+gB,EAAQjhB,MAA9B,CAEA,IAAImhB,EAAgBC,EAAgBJ,EAAUnd,MAAOmd,EAAU9gB,KAC3DmhB,EAAcD,EAAgBH,EAAQpd,MAAOod,EAAQjhB,OACzD,OACE,cAAC,GAAD,CAEE9K,KAAMgsB,EACNlhB,MAAO,CAAE3G,EAAG8nB,EAAc9nB,EAAGgmB,EAAG8B,EAAc9B,GAC9Cnf,IAAK,CAAE7G,EAAGgoB,EAAYhoB,EAAGgmB,EAAGgC,EAAYhC,GACxCvC,WAAYtkB,EAAMwmB,cAAgBkC,EAClClE,aAAcxkB,EAAMwkB,cALfkE,EAAK3tB,OAUV6tB,EAAkB,SAACvd,EAAe7N,GACtC,IAAIsrB,GAAc9oB,EAAM4kB,YAAc,GAAK,EAI3C,MAAO,CAAE/jB,EAFDmgB,GAAWsF,YAAY9oB,EAAM,EAAG2hB,GAAY,GAErC0H,EADNxb,EAASyd,EAAgBA,EAAa,IAyH/C,OACE,sBAAKjoB,EAAG,EAAGgmB,EAAG,EAAGjjB,MAAM,OAAO2jB,cAAc,OAAOlmB,MAAO,CAAE2R,SAAU,WAAY/P,IAAK,EAAG8V,WAAY,OAAQlU,OAAQ,QAAtH,UACE,+BACE,wBAAQ9J,GAAG,QAAQmW,QAAQ,YAAY6X,KAAK,IAAIC,KAAK,IAAIC,YAAY,IAAIC,aAAa,IAAIC,OAAO,qBAAjG,SACE,sBAAMpgB,EAAE,wBAAwBye,eAAe,cAGnD,oBAAG4B,UAAS,4BAAuBppB,EAAMqiB,YAAc,IAAMriB,EAAMwf,aAAa,IAApE,cAA6Exf,EAAM6lB,WAAW,GAA9F,KAAZ,UA5Hc,WAClB,IAAIwD,EAAc,GAEdb,EAAiB,GACjBC,EAAe,GAEnB,GAAoB,IAAZ,OAAJ5gB,QAAI,IAAJA,OAAA,EAAAA,EAAM1P,QAAV,CACA,IAPwB,eAOfS,GACP,IAAI8vB,EAAI,OAAG7L,QAAH,IAAGA,OAAH,EAAGA,EAAQjkB,GACnB,OAAK8vB,GAGLF,EAAS,OAAG3gB,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,KAAF,OAAQ2tB,QAAR,IAAQA,OAAR,EAAQA,EAAMhP,cAM5C+O,EAAO,OAAG5gB,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,MAAK,SAAC/Q,GAAD,OAAOA,EAAEwB,KAAF,OAAQ2tB,QAAR,IAAQA,OAAR,EAAQA,EAAM5iB,iBAO1CujB,EAAMA,EAAIzgB,OAAO,CAAC2f,EAAWC,EAAWC,EAASC,MAT/C,WAPe,CAAN,WAFJ9vB,EAAI,EAAGA,GAAKikB,GAAS,IAAI1kB,OAAQS,IAAK,CAAC,IAAD,IAAtCA,GAAsC,kDAqB/C,OAAOywB,GAiGAC,GA5FgB,WAAO,IAAD,EAC7B,GAAItpB,EAAMupB,kBAAN,UAAyBvpB,EAAMmoB,oBAA/B,aAAyB,EAAoB3L,KAAKzhB,IAAI,CAExD,IAAIotB,IAAiBA,EAAazgB,IAAK,OAAO7D,QAAQ2lB,MAAM,WAE5D,IAAIxW,EAAW4V,EAAe,OAACT,QAAD,IAACA,OAAD,EAACA,EAAc9c,MAAf,OAAsB8c,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAczgB,KAClE,OAAO,cAAC,GAAD,CAAYF,MAAOwL,EAAU0P,mBAAoB1iB,EAAM0iB,sBAuFzD+G,UGhNUC,G,kDAInB,WAAY1pB,GAAa,IAAD,8BACtB,cAAMA,IAJA2pB,UAAYxoB,IAAMyoB,YAGF,EAFxBC,aAEwB,IAgBxBC,QAAU,WACR,EAAK/F,SAAS,CAAEgG,SAAS,KAjBH,EAoBxBC,OAAS,WACP,EAAKC,iBArBiB,EAwBxBC,UAAY,SAACrkB,GAEK,MADAA,EAAEskB,SAAWtkB,EAAEukB,QAE7B,EAAKH,iBA3Be,EA+BxBA,cAAgB,WACd,EAAKJ,SAAU,EACf,EAAK9F,SAAS,CAAEgG,SAAS,IACrB,EAAK/pB,MAAM4F,UAAU,EAAK5F,MAAM4F,SAAS,EAAKqd,MAAMze,QAlClC,EAqCxB6lB,aAAe,SAACxkB,GACd,EAAKke,SAAS,CAAEvf,MAAOqB,EAAEC,OAAOtB,SAtCV,EAyCxB8lB,UAAY,WACV,OACE,sBAAKC,SAAU,EAAKvqB,MAAMqL,MAAOhL,QAAS,EAAKypB,QAASA,QAAS,EAAKA,QAASzoB,MAAO,CAAEuC,MAAO,QAA/F,UACG,IACA,EAAKqf,MAAMze,UA7CM,EAyDxBgmB,aAAe,WACb,OACE,uBACEvS,IAAK,EAAK0R,UACVK,OAAQ,EAAKA,OACb3oB,MAAO,CAAEuC,MAAO,OAAQ6mB,aAAc,QAASC,aAAc,UAC7DhkB,KAAK,OACLrK,KAAK,OACLmI,MAAO,EAAKye,MAAMze,MAClBmmB,QAAS,EAAKT,UACdtkB,SAAU,EAAKykB,gBAjEnB,EAAKR,SAAU,EACf,EAAK5G,MAAQ,CACX8G,SAAS,EACTvlB,MAAO,EAAKxE,MAAMwE,OALE,E,sDASxB,SAAmBomB,EAAgBC,GAC7B7jB,KAAK2iB,UAAUlM,UAAYzW,KAAK6iB,UAClC7iB,KAAK2iB,UAAUlM,QAAQqN,QACvB9jB,KAAK6iB,SAAU,K,mCAsCnB,SAAsBkB,EAA4BC,GAIhD,OAHID,EAAUvmB,OAASwC,KAAKhH,MAAMwE,OAChCwC,KAAK+c,SAAS,CAACvf,MAAOumB,EAAUvmB,SAE3B,I,oBAkBT,WACE,OAAOwC,KAAKic,MAAM8G,QAAU/iB,KAAKwjB,eAAiBxjB,KAAKsjB,gB,GA7EdpjB,aCIhC+jB,GAAb,kDACI,WAAYjrB,GAAa,IAAD,8BACtB,cAAMA,IAGR4F,SAAW,SAACpB,GACN,EAAKxE,MAAM8iB,cACb,EAAK9iB,MAAM8iB,aAAa,EAAK9iB,MAAMtD,KAAM,CAAEL,KAAMmI,KAN7B,EAD5B,0CAWI,WAAU,IAAD,OACP,OACE,eAAC,MAAD,CACIR,UAAU,MACVlB,MAAM,SACNrC,IAAI,QACJsC,QAAQ,UACV1B,MAAO,CACL4B,IAAK+D,KAAKhH,MAAMiD,IAChB4B,OAAQmC,KAAKhH,MAAM4kB,WAAa,GAElCvkB,QAAS,SAACwF,GAAD,OAAO,EAAK7F,MAAMwkB,aAAa,EAAKxkB,MAAMtD,OATrD,UAYA,qBAAK0D,UAAU,YAAYiB,MAAO,CAC9BuC,MAAO,GACPiB,OAAQ,GACRoC,aAAc,GACdhC,YAAa,EACbhF,WAAY+G,KAAKhH,MAAMtD,KAAKwD,SAG7B8G,KAAKhH,MAAMkrB,YACV,cAAC,MAAD,CAAKX,SAAUvjB,KAAKhH,MAAMqL,MAA1B,SACGrE,KAAKhH,MAAMgB,QAGd,cAAC,GAAD,CAAiBwD,MAAOwC,KAAKhH,MAAMgB,MAAOqK,MAAOrE,KAAKhH,MAAMqL,MAAOzF,SAAUoB,KAAKpB,kBAtC9F,GAA6BsB,aCmFdikB,IAhFmBjkB,YAYA,SAAClH,GACjC,IAI2BuZ,EAJrB6R,EAAc/N,iBAAuB,MAE3C,EAA6B/L,qBAAWqP,IAAhC9Y,EAAR,EAAQA,KAAMihB,EAAd,EAAcA,WAEavP,GAiCiB1R,GAAQ,IAAI1P,OAEtD,OACE,eAAC,MAAD,CAAKiI,UAAU,gBAAf,UACE,cAAC,MAAD,CACEyE,OAAQ,OACR5E,WAAW,YACXE,UAAU,QACV2C,MAAM,SACNC,QAAQ,SACRtC,IAAI,QACJuD,UAAU,MAPZ,SAQE,8BAAMga,GAAOhB,OAAOV,SAAShP,MAAMtM,UAErC,cAAC,MAAD,CACEf,WAAW,WACXgY,IAAKmT,EACLhrB,UAAU,8BACVirB,SAvBS,WACZD,EAAY3N,SAASzd,EAAMqrB,SAASD,EAAY3N,QAAQoI,YAkBvD,SAKE,cAAC,MAAD,CAAKzlB,UAAU,+BAA+BiB,MAAO,CACnD6D,QAAS,QADX,SA/Cc,SAAC2C,GAErB,IADA,IAAI4R,EAAS,GACJ7gB,EAAIoH,EAAMmmB,SAAUvtB,EAAIoH,EAAMomB,OAAS,EAAGxtB,IAAK,CACtD,IAAI8D,EAAOmL,EAAKjP,GAChB,IAAK8D,EAAM,MACX+c,EAAO7P,KACL,cAAC,GAAD,CAEEyB,MAAOzS,EACP8D,KAAMA,EACNsE,MAAOtE,EAAKL,KACZ4G,IAAKrK,IAAMkwB,GAAc,GAAK,GAC9BlE,WAAYkE,EACZxE,WAAYtkB,EAAMwmB,cAAgB9pB,EAClComB,aAAc9iB,EAAM8iB,aACpB0B,aAAcxkB,EAAMwkB,aACpB0G,YAAalrB,EAAMkrB,aATdtyB,IAaX,OAAO6gB,EA8BE6R,CAAczjB,GAAQ,aC5Ed0jB,G,WAYnB,aAAe,IAAD,gCAXdC,iBAWc,OAVdC,iBAUc,OATdC,mBASc,OARdlM,iBAQc,OAPdC,cAOc,OANdkM,sBAMc,OALdC,sBAKc,OAKdC,WAAa,SAACrkB,EAAYE,EAAU8X,EAAkBC,GACpD,EAAKD,YAAcA,EACnB,EAAKC,SAAWA,EAChB,EAAKqM,UAAUtkB,EAAOE,GACtB,EAAKqkB,mBATO,KAadC,YAAc,SAACxkB,EAAYE,EAAU8X,EAAkBC,GACrD,EAAKD,YAAcA,EACnB,EAAKC,SAAWA,EACZ,EAAKwM,SAASzkB,EAAOE,KACvB,EAAKokB,UAAUtkB,EAAOE,GACtB,EAAKqkB,oBAlBK,KAsBdE,SAAW,SAACzkB,EAAYE,GACtB,OAAOF,EAAQ,EAAKmkB,kBAAoBjkB,EAAM,EAAKkkB,kBAvBvC,KA0BdE,UAAY,SAACtkB,EAAYE,GACvB,EAAK8jB,YAAchkB,EA1CA,GA2CnB,EAAKmkB,iBAAmBnkB,EA1CC,GA2CzB,EAAKikB,YAAc/jB,EA5CA,GA6CnB,EAAKkkB,iBAAmBlkB,EA5CC,IAcb,KAkCdqkB,gBAAkB,WAChB,IAAIG,EAAalL,GAAW4C,YAAY,EAAK4H,YAAa,EAAKhM,YAAa,EAAKC,UAC7E0M,EAAUnL,GAAW4C,YAAY,EAAK6H,YAAa,EAAKjM,YAAa,EAAKC,UAC9E,EAAK2M,gBAAgBF,EAAYC,IApCjCnlB,KAAKwkB,YAAc,EACnBxkB,KAAKykB,YAAc,EACnBzkB,KAAK0kB,cAAgB,G,mDAPvB,SAAgBQ,EAAiBC,GAC/B,MAAM,IAAI/zB,MAAM,+B,KC+ePi0B,GAAWtsB,KA5cuB,SAACC,GAC9C,MAAkC6B,oBAAkB,GAApD,mBAAQyb,EAAR,KAAkBE,EAAlB,KACA,EAAkD3b,mBAAiB,GAAnE,mBAAQ6b,EAAR,KAA0B4O,EAA1B,KACA,EAAsCzqB,mBAAiB,MAAvD,mBAAQ0qB,EAAR,KAAoBC,EAApB,KAEA,EAAoC3qB,mBAAiB,GAArD,mBAAQgkB,EAAR,KAAmB4G,EAAnB,KACA,EAAsC5qB,mBAAiB,GAAvD,mBAAQwgB,EAAR,KAAoBqK,EAApB,KAEA,EAAkC7qB,qBAAlC,mBAAQskB,EAAR,KAAkBwG,EAAlB,KACA,EAA8B9qB,qBAA9B,mBAAQukB,EAAR,KAAgBwG,EAAhB,KAEA,EAA8C/qB,mBAAiB,IAA/D,mBAAQgrB,EAAR,KAAwBC,EAAxB,KACA,EAA8CjrB,mBAAiB,IAA/D,mBAAQmgB,EAAR,KAAwB+K,EAAxB,KAEA,EAAwClrB,mBAAiB,GAAzD,mBAAQ2d,EAAR,KAAqBwN,EAArB,KAEA,EAAmCnrB,mBAAc,CAAE+B,MAAO,MAA1D,mBAAOqpB,EAAP,KAAkBC,EAAlB,KAEM/N,EAAW9B,iBAAe4H,GAAYjlB,EAAM3F,MAAQ,UAE1D,EAAqCwH,mBAAiB,GAAtD,mBAAOkgB,EAAP,KAAmBnO,EAAnB,KAEA,GAAgD/R,oBAAkB,GAAlE,qBAAQ0nB,GAAR,MAAyB4D,GAAzB,MAEA,GAA0BtrB,mBAAiB7B,EAAM3F,KAAO2F,EAAM3F,KAAOskB,IAArE,qBAAQtkB,GAAR,MAAckN,GAAd,MAEA,GAA0B1F,mBAA4C,CAAE+B,MAAO,EAAGiB,OAAQ,IAA1F,qBAAQ7B,GAAR,MAAcoqB,GAAd,MAEA,GAA0CvrB,qBAA1C,qBAAQsmB,GAAR,MAAsBkF,GAAtB,MACA,GAA0CxrB,qBAA1C,qBAAQyrB,GAAR,MAAsBC,GAAtB,MAEMC,GAAKnQ,iBAAuB,IAAIkO,IAEtC,GAAsC1pB,qBAAtC,qBAAQ4rB,GAAR,MACA,IADA,MACsC5rB,sBAAtC,qBAAQ6rB,GAAR,MAAoBC,GAApB,MAEA,GAA0B9rB,mBAAiB,IAA3C,qBAAQgG,GAAR,MAAc+lB,GAAd,MACA,GAA4B/rB,mBAAiB,IAA7C,qBAAQgb,GAAR,MAAegR,GAAf,MAGA7rB,qBAAU,WACRwrB,GAAG/P,QAAQ2O,gBAAkBA,GAC7BpO,GAAOjB,KAAK/c,EAAMqC,QAElBmrB,GAAG/P,QAAQoO,WACTxJ,EAAa7C,EACb6C,EAAa7C,EAAcxc,GAAKY,MAChC4b,EACAL,EAAS1B,WAGV,IAaH,IA8CMqQ,GAAwB,SAACjB,EAAwBhlB,EAAcge,GACnE,IAAIkI,EAAY3N,KAAK4N,MAAMnI,GAAa7lB,EAAM4kB,YAAY,IAE1D,MAAO,CAAEpd,MAAOumB,EAAWrmB,IADbqmB,EAAYlB,GAAkBhlB,EAAK1P,OAAS0P,EAAK1P,OAAS41B,EAAYlB,IAIhFb,GAAc,WAClBwB,GAAG/P,QAAQuO,YAAY3J,EAAYA,EAAarf,GAAKY,MAAO4b,EAAaL,EAAS1B,UAG/EwQ,GAAmB,SAACC,GAA2B,IAAD,EAG7CC,EACAC,EAHAC,EAAkB7O,EAClB8O,GAAY,EAKZJ,EAAgB3B,GAElB8B,EAAkB7O,EAAc+M,EAAa,EAC7C+B,EAAW,GAEPJ,GAAiB,GAEnBG,EAAkB7O,EAAc+M,EAAa,GAC7C+B,EAAW/B,GAEX+B,EAAWJ,EAKf,IAAIK,EAAcnO,KAAK4N,OAAOE,EAAgB1O,GAAeL,EAAS1B,SAItE2Q,GADAD,EAAe/N,KAAK4N,MAAMnI,GAAa7lB,EAAM4kB,YAAY,KAExCiI,IAAmB7sB,EAAM6H,MAAQ,IAAI1P,QAC/C6H,EAAM6H,MAAQ,IAAI1P,OAAS,EAC5Bg2B,EAAetB,EAGrBb,KAEApY,EAAc2a,GAEd,IAM2C,EANvC/wB,EAAO,IAAIiB,KACXojB,EAAc7hB,EAAMxC,MACxBA,EAAK2iB,SAAS,EAAG,EAAG,EAAG,GACZ,OAAX0B,QAAW,IAAXA,KAAa1B,SAAS,EAAG,EAAE,EAAE,GAE7B3iB,EAAK+V,QAAQ/V,EAAKwX,UAAYuZ,IAC3B,UAAAvuB,EAAMxC,YAAN,eAAY4K,YAAa5K,EAAK4K,aAC/B,UAAApI,EAAMwuB,oBAAN,cAAAxuB,EAAqBxC,IAGvBwvB,EAAeqB,GACfV,GAAcD,IACdhB,EAAc4B,GACd3B,EAAYwB,GACZvB,EAAUwB,IAINK,GAAmC,SAACzrB,GAExCwpB,GAAe,EAAIxpB,EAAKY,MAAQ6a,IAAwBA,GAAuB,IAG3E2N,GAAkB,SAACF,EAAiBC,GACpCnsB,EAAMosB,iBAAiBpsB,EAAMosB,gBAAgBF,EAAYC,IAiEzD3H,GAAe,SAAC9nB,GAChBsD,EAAMwkB,cAAgB9nB,GAAQsD,EAAMwmB,cAAcxmB,EAAMwkB,aAAa9nB,IAUrEgmB,GAAqB,SAAClG,EAAYxJ,GAEtC,GADAnP,QAAQC,IAAR,WAAwB0Y,EAAM2L,GAAcnoB,EAAM0uB,cAC9C1uB,EAAM0uB,cAAgBlS,GACxB2L,IAAgBA,GAAa3L,KAAKzhB,IAAMyhB,EAAKzhB,GAAI,CAE/C,IAAIotB,GAAa3L,KAAKzhB,KAAOyhB,EAAKzhB,GAAI,OAEtC,IAAI4zB,EAAU,CACZ5zB,GAAI8f,eACJnB,OAAQyO,GAAa3L,KAAKzhB,GAC1B6zB,aAAczG,GAAanV,SAC3BlN,OAAQ0W,EAAKzhB,GACb8zB,aAAc7b,GAEhBnP,QAAQC,IAAI,WAAY6qB,GAC1B3uB,EAAM0uB,aAAaC,GAErBxB,IAAmB,GACnBE,QAAgBxzB,IAUZi1B,GAAqB,SAAC9rB,EAA0B+rB,GAEpD,OADAlrB,QAAQC,IAAId,EAAO+rB,GAAe5P,GAC3BiB,KAAK4O,KAAKhsB,EAAKY,OAAQmrB,GAAe5P,EAAS1B,UnBzU/B,ImB4UnBwR,GAAa,SAACC,GAElB,GADArrB,QAAQC,IAAI,cAAeorB,GACvBA,GAAW70B,GAAM,CACnB,IAAI00B,EAAc9J,GAAYiK,GAO1BC,EAAa/O,KAAK4O,MAAOjN,EAAagN,EAAexC,GAErDlK,GAAcN,EAAagN,EAAcvP,GAAe+M,EAG5D1oB,QAAQC,IAAIorB,EAASH,GACrBxnB,GAAQ2nB,GACR/P,EAAS1B,QAAUsR,EACnBhC,EAAkB+B,GAAmB9rB,GAAM+rB,IAC3C/B,EAAemC,EAAa5C,GAC5BG,EAAcrK,KAkDhB,OAzBFrgB,qBAAU,WACLhC,EAAM6H,MACT+lB,GAAQ5tB,EAAM6H,QAEb,CAAC7H,EAAM6H,OAEV7F,qBAAU,WACLhC,EAAM6c,OACTgR,GAAS7tB,EAAM6c,SAEd,CAAC7c,EAAM6c,QAEV7a,qBAAU,WACLhC,EAAM3F,MACP40B,GAAWjvB,EAAM3F,QAElB,CAAC2F,EAAM3F,OAQRwJ,QAAQC,IAAI+D,GAAM7H,EAAM6H,MAEtB,cAAC8Y,GAAgBlL,SAAjB,CAA0BjR,MAAO,CAC/BqD,QACAgV,SACAxb,MAAOrB,EAAMqB,MACbhH,KAAMA,GACNgoB,WAAYA,EACZ+C,aAAc6I,GACdgB,WAAYA,GACZ9P,SAAUA,EAAS1B,QACnBqL,WAAY9oB,EAAM4kB,YATpB,SAWA,eAAC,MAAD,CACEtf,SAAS,SACTyK,MAAM,QACN3P,UAAS,UAAKJ,EAAMI,UAAX,aAAiCiB,MAAO,CAAC2R,SAAU,WAAYnQ,KAAM,GAHhF,UAIE,sBAAKzC,UAAU,qBAAqBiB,MAAO4rB,EAA3C,UACE,cAAC,GAAD,CACE9G,SAAUA,EACVC,OAAQA,EACRI,aAAcxmB,EAAMwmB,aACpBhC,aAAcA,GACd1B,aAAc9iB,EAAM8iB,aACpBuI,SA7Ra,SAACxF,GACtB,GAAIA,GAAaA,EAAjB,CAEA,IAAIuJ,EAAUtB,GAAsBjB,EAAgB7sB,EAAM6H,MAAQ,GAAIge,GAClEuJ,EAAQ5nB,QAAU2e,IACpBsG,EAAa5G,GAEb8G,EAAYyC,EAAQ5nB,OACpBolB,EAAUwC,EAAQ1nB,QAsRZwjB,YAAalrB,EAAMqvB,kBAErB,cAAC,GAAD,CACEtR,QAAS/d,EAAMsvB,UACfxR,iBAvJe,SAACF,GACxBsP,EAAa,CAAEtpB,MAAOga,UAyJlB,sBAAKxd,UAAU,gBAAf,UAEA,cAAC,MAAD,CAAKiB,MAAO,CAAC2R,SAAU,WAAYnO,OAAQ,OAAQjB,MAAO,OAAQX,IAAK,EAAGtB,KAAM,GAAIvB,UAAU,mBAA9F,SACE,cAAC,GAAD,CACIstB,WAAYA,GACZ1L,eAAgBA,EAChBD,WAAYA,EACZvC,YAAaA,EACb6C,WAAYA,MAGlB,eAAC,MAAD,CAAKhhB,MAAO,CAAC2R,SAAU,WAAYpP,MAAO,OAAQiB,OAAQ,oBAAqBgL,OAAQ,EAAG5M,IAAK,GAAItB,KAAM,GAAzG,UACA,cAAC,GAAD,CACI0gB,WAAYA,EACZwD,UAAWA,EACXjB,WAAY5kB,EAAM4kB,WAClBpF,YAAaA,EACb2G,SAAUA,EACVC,OAAQA,EACRve,KAAM7H,EAAM6H,KACZ2e,aAAcxmB,EAAMwmB,aACpB6E,SAAUoC,GACVxP,YAjOU,SAACpY,GACnB2X,GAAY,GACZ8O,EAAoBzmB,EAAEgY,UAgOdF,YA7NU,SAAC9X,GACnB,GAAIyX,EAAU,CACZ,IAAIM,EAAQF,EAAmB7X,EAAEgY,QAEnB,IAAVD,IACF0O,EAAoBzmB,EAAEgY,SACtBoQ,GAAiB5L,EAAazE,MAwN1B6G,UApNQ,SAAC5e,GACjB2X,GAAY,IAoNJzK,aAlNW,SAAClN,GAGpB2X,GAAY,IAgNJ+G,aA7MW,SAAC1e,GACpB2X,GAAY,GACZ8O,EAAoBzmB,EAAEyd,QAAQ,GAAGzF,UA4MzBoI,YAtMU,SAACpgB,GACnB,GAAIyX,EAAU,CACZ,IAAIM,EAAQF,EAAmB7X,EAAEyd,QAAQ,GAAGzF,QAE9B,IAAVD,IACF0O,EAAoBzmB,EAAEyd,QAAQ,GAAGzF,SAEjCoQ,GAAiB5L,EAAazE,MAgM1B8G,WA1MS,SAAC7e,GAClB2X,GAAY,IA0MJ0I,cA7LY,SAACrgB,GACrB2X,GAAY,IA6LJgH,aAAcA,GACd1B,aAAc9iB,EAAM8iB,aACpBsB,eAhJa,SAACkJ,GACtBzpB,QAAQC,IAAI,gBAAiBwpB,GAC7BC,GAAgBD,IA+IR9K,kBA9KgB,SAAChG,EAAYxJ,GACrCnP,QAAQC,IAAR,gBAA6B0Y,EAAMxJ,GACnCma,IAAmB,GACnBE,GAAgB,CAAE7Q,KAAMA,EAAMxJ,SAAUA,KA4KhC0P,mBAAoBA,GACpB6M,WAAY,CACVC,MAAOnN,EACPoN,MAAOpN,EAAarf,GAAKY,OAE3B+hB,OA7WK,SAAC3iB,GAGda,QAAQC,IAAId,EAAMmc,GAClBsP,GAAiCzrB,GAUjCgpB,KACA,IAAI0D,EAAoBtP,KAAK4O,KAAKhsB,EAAK6B,QAAU7E,EAAM4kB,YAAY,IAC/D+K,EAAoBb,GAAmB9rB,EAAMmc,EAAS1B,SACtD2R,EAAUtB,GAAsB4B,EAAmB1vB,EAAM6H,MAAQ,GAAIge,GAEzEkH,EAAkB4C,GAClB9rB,QAAQC,IAAI,OAAQ6rB,GACpB7C,EAAkB4C,GAClB/C,EAAYyC,EAAQ5nB,OACpBolB,EAAUwC,EAAQ1nB,KAClB0lB,GAAQpqB,MAuVF,cAAC,GAAD,CACEqf,WAAYA,EACZwD,UAAWA,EACXM,SAAUA,EACVC,OAAQA,EACRve,KAAM7H,EAAM6H,MAAQ,GACpB2X,YAAaA,EACb+J,gBAAiBA,GACjBpB,aAAcA,GACdzF,mBAAoBA,GACpB4K,aAAcA,GACd9G,aAAcxmB,EAAMwmB,aACpBhC,aAAcA,GACdI,WAAY5kB,EAAM4kB,WAClB/H,MAAO7c,EAAM6c,OAAS,kBAeV9c,CAAH,4+I,+LCnfR6vB,EAAb,WAWI,WAAYC,GAAsB,yBAT1BC,cASyB,OAPzBC,cAOyB,OANzBC,kBAMyB,OAJzBC,yBAIyB,OAFzBC,iBAEyB,EAC7BlpB,KAAK+oB,SAAWF,EAAKE,SACrB/oB,KAAKgpB,aAAeH,EAAKG,aACzBhpB,KAAKipB,oBAAsBJ,EAAKI,oBAChCjpB,KAAKkpB,YAAcL,EAAKK,YAExBlpB,KAAK8oB,SAAWK,IAAMC,OAAO,CACzBC,QAASrpB,KAAKipB,oBACdK,QAAS,IACTr2B,QAAS,GACTs2B,aAAc,IAGlB1sB,QAAQC,IAAI,sBAxBpB,sFA2BI,WAAkB0sB,GAAlB,eAAAj3B,EAAA,sEACyByN,KAAK8oB,SAASW,IAAI,QAAS,CAACx2B,QAAS,CAAC,cAAiB,UAAYu2B,KAD5F,cACU/W,EADV,yBAEWA,EAAO5R,MAFlB,gDA3BJ,qHAgCI,WAAgB6oB,GAAhB,qBAAAn3B,EAAA,0DAGWm3B,EAHX,0CAKwC1pB,KAAK2pB,SAASD,GALtD,OAKoBE,EALpB,OAMgB/sB,QAAQC,IAAI8sB,GACTA,EAAYJ,cACXh3B,EAAQo3B,EAAYJ,aARxC,iEAW4CxpB,KAAK6pB,eAXjD,QAWoBC,EAXpB,OAYgBjtB,QAAQC,IAAIgtB,GACTA,EAAgBN,cACfh3B,EAAQs3B,EAAgBN,aAd5C,iDAkBwCxpB,KAAK6pB,eAlB7C,QAkBgBC,EAlBhB,OAmBYjtB,QAAQC,IAAIgtB,GACTA,EAAgBN,cACfh3B,EAAQs3B,EAAgBN,aArBxC,iCAwBeh3B,GAxBf,yDAhCJ,oHA2DI,WAAeg3B,GAAf,iBAAAj3B,EAAA,6DACQw3B,EAAK,IAAIC,iBACVC,OAAO,YAAajqB,KAAK+oB,UAE5BgB,EAAGE,OAAO,gBAAiBjqB,KAAKgpB,cAChCe,EAAGE,OAAO,aAAe,sBACzBF,EAAGE,OAAO,gBAAiB,QAC3BF,EAAGE,OAAO,OAAQT,GAPtB,SASyBxpB,KAAK8oB,SAASoB,KAAd,eAAmCH,EAAI,CAAC92B,QAAS,CAAC,eAAgB,qCAAsCk3B,iBAAiB,IATlJ,cASU1X,EATV,yBAUWA,EAAO5R,MAVlB,iDA3DJ,wHAwEI,8BAAAtO,EAAA,6DACUw3B,EAAK,IAAIC,iBAEZC,OAAO,gBAAiBjqB,KAAKgpB,cAChCe,EAAGE,OAAO,YAAajqB,KAAK+oB,UAC5BgB,EAAGE,OAAO,aAAc,iBAL5B,SAOyBjqB,KAAK8oB,SAASoB,KAAd,eAAmCH,EAAI,CAC1D92B,QAAS,CACP,eAAgB,qCAElBk3B,iBAAiB,IAXvB,cAOU1X,EAPV,yBAcWA,EAAO5R,MAdlB,gDAxEJ,+HAyFI,WAA2BupB,EAAkBC,GAA7C,eAAA93B,EAAA,+EAGuByN,KAAK8oB,SAASoB,KAAd,mBAAuC,CAClDI,UAAWtqB,KAAK+oB,SAChBwB,WAAY,qBACZC,aAAcxqB,KAAKkpB,YACnBuB,cAAe,OAEXL,WACAC,YAEL,CAACF,iBAAiB,IAZ7B,OAaQ1X,GAVAA,EAHR,QAawB5R,KAbxB,gDAeQhE,QAAQC,IAAR,MACA2V,EAAS,KAAEnf,SAhBnB,iCAmBWmf,GAnBX,yDAzFJ,gECLaiY,EAActgB,wBAAgH,IAS9HugB,EAA6C,SAAC3xB,GAEvD,MAAsC6B,qBAAtC,mBAAQ+vB,EAAR,KAAoBC,EAApB,KAEA,ECfoB,WACpB,MAA4BhwB,qBAA5B,mBAAQrI,EAAR,KAAes4B,EAAf,KA2CA,OAzCA9vB,qBAAU,WACNvI,OAAO0kB,iBAAiB,WAAW,SAACvW,GAAW,IAAD,EACtCmqB,EACJ,IACEA,EAAc53B,KAAK63B,MAAMv4B,OAAOC,eAAeC,QAAQ,sBAAwB,IAChF,MAAMkM,IAGP,OAAO+B,EAAMrD,KACT,IAAK,gCACD9K,OAAOw4B,aAAazjB,QAAQ,sBAAuBrU,KAAKC,UAAU,CAAEZ,MAAOA,KAC3EC,OAAOw4B,aAAaC,WAAW,uBAC/B,MACJ,IAAK,sBACEtqB,EAAMuqB,UAAU14B,OAAOC,eAAe8U,QAAQ,oBAAqB5G,EAAMuqB,UAAY,IACrFJ,GAAaD,GAAoB,QAAX,EAAAC,SAAA,eAAav4B,aAASK,GAC/C,MACJ,IAAK,oBACDJ,OAAOC,eAAew4B,WAAW,yBAK7Cz4B,OAAOw4B,aAAazjB,QAAQ,gCAAiC/P,KAAKygB,MAAM3mB,YACxEkB,OAAOw4B,aAAaC,WAAW,mCAEhC,IAeI,CAAC14B,EARS,SAACA,GACdqK,QAAQC,IAAI,gBACZguB,EAASt4B,GACTC,OAAOC,eAAe8U,QAAQ,oBAAqBhV,GAAS,IAC5DC,OAAOw4B,aAAazjB,QAAQ,sBAAuBrU,KAAKC,UAAU,CAAEZ,MAAOA,KAC3EC,OAAOw4B,aAAaC,WAAW,wBAVlB,WACbz4B,OAAOw4B,aAAazjB,QAAQ,oBAAqB/P,KAAKygB,MAAM3mB,YAC5DkB,OAAOw4B,aAAaC,WAAW,uBDlBPE,GAA5B,mBAAQ54B,EAAR,KAAes4B,EAAf,KAEMO,EAAYhV,iBAA8B,IAEhD,EAA+Bxb,qBAA/B,mBAAQrH,EAAR,KAAgB83B,EAAhB,KAoDA,OA7CAtwB,qBAAU,YACN6B,QAAQC,IAAI,aAActJ,GAEtBA,IARU,SAACA,GACf83B,EAAW93B,GACX63B,EAAU5U,QAAQjjB,OAASA,EAcvB+3B,CAPe,IAAI3C,EAAW,CAC1BK,oBAAqBjwB,EAAMiwB,qBAAuB,wBAClDF,SAAU/vB,EAAM+vB,UAAY,qBAC5BC,aAAchwB,EAAMgwB,cAAgB,SACpCE,YAAalwB,EAAMkwB,aAAe,uCAK3C,IAEHluB,qBAAU,WAEN,GAAGxH,IAAWhB,EAAM,CAChB,IACIg5B,EADW,IAAIxB,gBAAgBv3B,OAAO4J,SAASwJ,QACjC4jB,IAAI,QAEhB,OAANj2B,QAAM,IAANA,KAAQi4B,UAAUD,QAAQ34B,GAAW64B,MAAK,SAACl5B,GACvCs4B,EAASt4B,GACTqK,QAAQC,IAAItK,MACbm5B,OAAM,WACoCl5B,OAAO4J,SAAS6J,KAAO,iCAIzE,CAAC1S,IAEJwH,qBAAU,WACN6B,QAAQC,IAAI,YAAatK,GAEtBA,IACO,OAANgB,QAAM,IAANA,KAAQo4B,YAAYp5B,GAAOk5B,MAAK,SAACG,GAC1BA,EAAKhlB,MACJgkB,EAAcgB,EAAKhlB,MAEvBhK,QAAQC,IAAI,YAAa+uB,SAGlC,CAACr5B,IAIA,cAACk4B,EAAYjc,SAAb,CACIjR,MAAO,CACHhL,MAAOA,EACPgB,OAAQA,EACRo3B,WAAYA,GAJpB,SAMS5xB,EAAMkT,oBAAoB4f,SAAW9yB,EAAMkT,SAAS1Z,GAASwG,EAAMkT,Y,eE/DrE6f,MAff,SAAqB/yB,GACnB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,mBACJlR,GAHN,aAKE,oBAAGuB,KAAK,UAAR,UACE,sBAAMwH,EAAE,uYACR,sBAAMA,EAAE,6QCMDiqB,MAff,SAAsBhzB,GACpB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,mBACJlR,GAHN,aAKE,sBACE+I,EAAE,mwBACFxH,KAAK,gBCME0xB,MAff,SAAsBjzB,GACpB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,mBACJlR,GAHN,aAKE,oBAAGuB,KAAK,UAAR,UACE,sBAAMwH,EAAE,wNACR,sBAAMA,EAAE,+2BCQDmqB,MAjBf,SAAqBlzB,GACnB,OACE,8CAAKiR,MAAM,6BAA6BC,QAAQ,iBAAoBlR,GAApE,cACE,mBAAGuB,KAAK,UAAR,SACE,sBAAMwH,EAAE,i2BAEV,sBACEA,EAAE,qkBACFxH,KAAK,YAEP,mBAAGA,KAAK,UAAR,SACE,sBAAMwH,EAAE,wcCIDoqB,MAff,SAAmBnzB,GACjB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,mBACJlR,GAHN,aAKE,oBAAGuB,KAAK,UAAR,UACE,sBAAMwH,EAAE,shBACR,sBAAMA,EAAE,kICEDqqB,MAXf,SAAqBpzB,GACnB,OACE,6CAAKiR,MAAM,6BAA6BC,QAAQ,kBAAqBlR,GAArE,aACE,oBAAGuB,KAAK,UAAR,UACE,sBAAMwH,EAAE,yIACR,sBAAMA,EAAE,mvCCUDsqB,ICfClD,EDeDkD,EAff,SAAqBrzB,GACnB,OACE,6CACEiR,MAAM,6BACNC,QAAQ,mBACJlR,GAHN,aAKE,oBAAGuB,KAAK,UAAR,UACE,sBAAMwH,EAAE,0bACR,sBAAMA,EAAE,wQ,iBEEHuqB,EAAuC,SAACtzB,GAAW,IAAD,MAC3D,OACI,eAAC,MAAD,CACIS,IAAK,CAACuP,WAAY,UACtBlN,MAAM,SACNpB,OAAQ,CAACqD,OAAQ,UACjBgL,MAAM,SACNlL,OAAO,OACPb,UAAU,MACV/D,WAAW,WACXyF,IAAI,SARJ,UAUA,cAAC,MAAD,CACIJ,SAAS,SACTzC,MAAI,EACJ5C,WAAY,YACZ8P,MAAM,SAJV,SAKA,cAAC,YAAD,CACIvL,MAAK,UAAExE,EAAMsB,cAAR,aAAE,EAAcuL,OACrBjH,SAAU,SAACC,GAAD,yBAAO7F,EAAMuzB,sBAAb,aAAO,OAAAvzB,EAAuB,CAAC6M,OAAQhH,EAAEC,OAAOtB,MAAOvJ,OAAM,UAAE+E,EAAMsB,cAAR,aAAE,EAAcrG,UACzFsQ,gBAAgB,EAChB6E,OAAK,EACLzK,YAAY,kBAEd,cAAC,MAAD,CACIL,SAAS,SACTrF,WAAY,YACZ8P,MAAM,SAHV,SAIA,cAAC,SAAD,CACIvL,MAAK,UAAExE,EAAMsB,cAAR,aAAE,EAAcrG,OACrB2K,SAAU,oBAAEG,EAAF,EAAEA,OAAF,iBAAc/F,EAAMuzB,sBAApB,aAAc,OAAAvzB,EAAuB,CAAC6M,OAAM,UAAE7M,EAAMsB,cAAR,aAAE,EAAcuL,OAAQ5R,OAAQ8K,KACxFqK,OAAK,EACLzK,YAAY,SACZK,QAAS,CAAC,OAAO4C,OAAO/Q,MAAMqR,KAAK,IAAIC,IAAJ,UAAQnJ,EAAMuG,YAAd,aAAQ,EAAY3F,KAAI,SAACC,GAAD,OAAYA,EAAE5F,QAAU,iBC/BhFu4B,G,OAAmC,SAACxzB,GAE/C,MAA6B6B,mBAAc,IAA3C,mBAAQP,EAAR,KAAgBmyB,EAAhB,KAEA,EAAoC5xB,qBAApC,mBAAQmC,EAAR,KAAmB0vB,EAAnB,KACA,EAAkC7xB,qBAAlC,mBAAQgV,EAAR,KAAkB8c,EAAlB,KAEA,EAAkC9xB,mBAAgB,CAChD,CAAC0C,IAAK,KAAMvD,MAAO,SAAU0F,KAAM,MAAO9C,MAAO,IACjD,CAACW,IAAK,OAAQvD,MAAO,WAAY0F,KAAM,SAAU9C,MAAO,IACxD,CAACW,IAAK,SAAUvD,MAAO,SAAU0F,KAAM,SAAU9C,MAAO,MAH1D,mBAYM2M,GAZN,UAOcpR,YAAS,CACrBF,UAAU,EACVC,sBAAsB,IAGDlE,eAyCrB,OACE,eAAC,MAAD,CACE6H,MAAI,EACJmB,UAAU,SAFZ,UAIA,cAAC,EAAD,CACE1C,OAAQA,EACRiyB,eAAgB,SAACjyB,GAAD,OAAYmyB,EAASnyB,IACrCiF,KAAMgK,GAAY,KACpB,cAAC,MAAD,CACEjL,SAAU,CAAC5E,SAAU,QACrBqP,MAAM,SACN9P,WAAW,YACXG,UAAU,YAJZ,SAKE,cAAC,YAAD,CACEH,WAAY,CACVqC,OAAQ,CAAEpC,MAAO,WAAY0zB,QAAS,WAExCjd,KAAG,EACHQ,OAAQ,YAA4B,IAA1BN,EAAyB,EAAzBA,SAAU7S,EAAe,EAAfA,UAClB2vB,EAAY9c,GACZ6c,EAAa1vB,IAEf4S,QAAS,CACP,CACEC,SAAU,KACVvU,OAAQ,KACRU,KAAM,SACNkU,UAAU,GAEZ,CACEL,SAAU,OACVvU,OAAQ,eACRU,KAAM,QACNkU,UAAU,GAEZ,CACEL,SAAU,SACVvU,OAAQ,SACR4U,UAAU,EACVlU,KAAM,QACNF,MAAO,WAGXwU,WAAY,gBAlFD1F,EAkFG1J,EAAF,EAAEA,MAAF,OAAaA,EAAMnN,KAlFpB6W,EAkFoC,CAAC/K,MAAK,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAOnN,SAjFpEiF,EAAM6zB,QAAQjqB,KAAd,UAAsB5J,EAAM8zB,MAAM1wB,IAAlC,YAAyCwO,EAAI/K,UAkFvCgB,KA/EQ,WACd,IAEyB,EAUkB,EAI1B,EAhBb2C,EAAK,OAAG+F,QAAH,IAAGA,OAAH,EAAGA,EAAU3P,KAAI,SAACC,GAAD,MAAQ,CAAC9F,GAAE,OAAE8F,QAAF,IAAEA,OAAF,EAAEA,EAAG9F,GAAIsB,KAAI,OAAEwE,QAAF,IAAEA,OAAF,EAAEA,EAAGxE,KAAMpB,OAAM,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAG5F,WAErE4b,GAAY7S,IACbwG,EAAK,UAAGA,SAAH,aAAG,EAAOK,MAAK,SAACuM,EAAO2c,GAC1B,IAAIx6B,EAAU6d,EACV3e,EAASs7B,EACb,MAAoB,OAAb/vB,EACJzK,EAAEsd,IAAape,EAAEoe,GAAY,EAAKtd,EAAEsd,GAAYpe,EAAEoe,GAAY,GAAK,EACjEtd,EAAEsd,IAAape,EAAEoe,GAAY,EAAKtd,EAAEsd,GAAYpe,EAAEoe,GAAY,GAAK,MAIzEvV,EAAOrG,QAA2B,OAAjBqG,EAAOrG,SACzBuP,EAAK,UAAGA,SAAH,aAAG,EAAOlJ,QAAO,SAAC/H,GAAD,OAAOA,EAAE0B,QAAUqG,EAAOrG,WAG/CqG,EAAOuL,SACRrC,EAAK,UAAGA,SAAH,aAAG,EAAOlJ,QAAO,SAAC/H,GAAO,IAAD,IACvB8C,GAAO,UAAA9C,EAAE8C,YAAF,eAAQ4E,gBAAiB,GAChClG,GAAK,UAAAxB,EAAEwB,UAAF,eAAMkG,gBAAiB,GAE5B4L,EAASvL,EAAOuL,OAAO5L,eAAiB,GAG5C,OAAW,OAAJ5E,QAAI,IAAJA,OAAA,EAAAA,EAAMnE,QAAQ2U,KAAW,IAAO,OAAF9R,QAAE,IAAFA,OAAA,EAAAA,EAAI7C,QAAQ2U,KAAW,GAAK,UAAG9R,EAAH,YAASsB,GAAOnE,QAAQ2U,IAAW,MAKxG,OAAOrC,EAiDKwpB,Y,0BCrHVx6B,EAAQC,OAAOC,eAAeC,QAAQ,qBAEtCs6B,EAAO9D,IAAMC,OAAO,CACtBC,QAASv2B,kJAAYC,eAAiB,wBACtCE,QAAS,CACL,cAAiB,UAAYT,KAI/BsD,ECVqB,SAACqzB,GAExB,IAAM+D,EAAa,uCAAG,WAAOC,EAAgBr3B,GAAvB,mBAAAvD,EAAA,6DACZC,EAAQC,OAAOC,eAAeC,QAAQ,qBAExCo3B,EAAK,IAAIqD,SACbt3B,EAAMu3B,SAAQ,SAACnxB,GACX6tB,EAAGE,OAAO,QAAS/tB,MALL,SAQGitB,EAAMe,KAAN,wBAA4BiD,GAAUpD,EAAI,CAAC92B,QAAS,CAAC,cAAiB,UAAWT,KARpF,cAQZigB,EARY,yBASXA,EAAO5R,MATI,2CAAH,wDAyBnB,MAAO,CACHysB,WAdY,uCAAG,WAAOx3B,GAAP,mBAAAvD,EAAA,6DACfsK,QAAQC,IAAI,eACNtK,EAAQC,OAAOC,eAAeC,QAAQ,qBAExCo3B,EAAK,IAAIqD,SACbt3B,EAAMu3B,SAAQ,SAACnxB,GACX6tB,EAAGE,OAAO,QAAS/tB,MANR,SASMitB,EAAMe,KAAN,aAAyBH,EAAI,CAAC92B,QAAS,CAAC,cAAiB,UAAYT,KAT3E,cASTigB,EATS,yBAURA,EAAO5R,MAVC,2CAAH,sDAeZqsB,iBDnBMK,CAAYN,GACpB3rB,GHXU6nB,EGWiB8D,EHqBtB,CACHO,iBA/BkB,uCAAG,WAAOC,EAAmCj7B,GAA1C,mBAAAD,EAAA,sEACA42B,EAAMe,KAAN,WAAuB,CACxC73B,MAAM,woBAoBNC,UAAW,CACPkO,MAAOitB,EAAQjtB,MACfE,IAAK+sB,EAAQ/sB,MAElB,CAACzN,QAAS,CAAC,cAAiB,UAAYT,KA1BtB,cACfigB,EADe,mCA2BdA,EAAO5R,YA3BO,iBA2Bd,EAAaA,YA3BC,aA2Bd,EAAmBjM,cA3BL,2CAAH,0D,iBKoBpB84B,G,OAAS,CAAE,SAAU,WAAY,aAG1BC,EAAwC,SAAC30B,GAEpD,MAAwC6B,mBAAiB,GAAzD,mBAAQ+yB,EAAR,KAAqBC,EAArB,KAEA,EAA0ChzB,mBAAgB,IAA1D,mBAAQizB,EAAR,KAAsBC,EAAtB,KACA,EAA8ClzB,mBAAgB,IAA9D,mBAAQmzB,EAAR,KAEA,GAFA,KAEmCnzB,oBAAkB,IAArD,mBAAQozB,EAAR,KAAoBC,EAApB,KAEA,EAAoCrzB,mBAAgB,IAApD,mBAAQszB,EAAR,KAAmBC,EAAnB,KAEA,EAAoDvzB,mBAAgB,IAApE,mBAEA,GAFA,UAEgCA,mBAAiB,KAAjD,mBACA,GADA,UACsCA,mBAAiB,KAAvD,mBACA,GADA,UAC4BA,mBAAgB,KAA5C,mBAAQ/E,EAAR,KAAesH,EAAf,KAEA,EAAwCvC,mBAAiB,IAAzD,mBAEMsyB,GAFN,UAEen0B,EAAM8zB,MAAMrgB,OAAO1Y,IAG5B1B,EAAQ8F,YAAS,CACrBF,UAAU,EACVC,sBAAsB,IAGlBJ,EAAUO,cAEhB,EAAmCI,aAAY,SAAC1D,EAAUs5B,GAGxD,MAAO,CACL34B,KAHaX,EAASI,sBAAsB,CAACpB,GAAIs6B,EAAKt6B,GAAIkB,QAASo5B,EAAKp5B,UAIxEutB,MAAO,QAER,CACD8L,YADC,SACWztB,KACZ0tB,QAFC,SAEO/L,KACRgM,eAAgB,CAACn8B,EAAMwB,YAAY,CAACE,GAAIo5B,KACxCl1B,UAAU,EACVw2B,qBAAqB,IAZvB,mBAAQ1a,EAAR,KAeA,GAfA,KAAqBlF,UAeOpW,aAAY,SAAC1D,EAAUs5B,GACjD,IAAM5b,EAAS1d,EAASK,WAAW,CAACrB,GAAIs6B,EAAKt6B,GAAIsB,KAAMg5B,EAAKh5B,KAAMpB,OAAQo6B,EAAKp6B,SAC/E,MAAO,CACLyB,KAAK,eACA+c,GAEL+P,MAAO,QAEP,CACF8L,YADE,SACUztB,KACZ0tB,QAFE,SAEM/L,KACRgM,eAAgB,CAACn8B,EAAMwB,YAAY,CAACE,GAAIo5B,KACxCl1B,UAAU,EACVw2B,qBAAqB,KAbvB,mBAAQr5B,EAAR,KAgBA,GAhBA,KAgBoCqD,aAAY,SAAC1D,EAAUs5B,GACzD,IAAM5b,EAAS1d,EAASO,YAAY,CAACC,IAAK84B,EAAK94B,IAAKtB,OAAQo6B,EAAKp6B,SACjE,MAAO,CACLyB,KAAI,OAAE+c,QAAF,IAAEA,OAAF,EAAEA,EAAQ1hB,QACdyxB,MAAO,QAEP,CACF8L,YADE,SACUztB,KACZ0tB,QAFE,SAEM/L,KACRgM,eAAgB,CAACn8B,EAAMwB,YAAY,CAACE,GAAIo5B,KACxCl1B,UAAU,EACVw2B,qBAAqB,KAXvB,oBAAQn5B,GAAR,MAcMsV,IAdN,MAcYvY,EAAMwB,YAAY,CAACE,GAAIo5B,KAEnCnyB,qBAAU,WACR6B,QAAQC,IAAI,eACT8N,IAAOA,GAAI9U,QACZ+G,QAAQC,IAAI8N,GAAI9U,OAChBsH,EAASwN,GAAI9U,OAAS,OAEvB,CAAC3C,KAAKC,UAAUwX,MAEnB,IAAM8jB,GAAQ,CACZ,CACEpoB,MAAO,QACPhB,UACA,cAAC,IAAD,CACEyK,QAAS+d,EACTxa,UAAW0a,EAEX30B,QAAS,SAAC3D,GACR04B,EAAa,CAAC14B,IACdw4B,GAAW,IAEbp4B,MAAOA,GAAS,GAChBmd,SAAQ,uCAAE,WAAO0b,GAAP,SAAAp8B,EAAA,6DACRsK,QAAQC,IAAI6xB,GADJ,SAEFC,QAAQC,IAAIF,EAAO/0B,IAAP,uCAAW,WAAOsC,GAAP,SAAA3J,EAAA,kEACxBqY,SADwB,IACxBA,QADwB,EACxBA,GAAK7W,IADmB,gCACTggB,EAAW,CAACsa,KAAM,CAACp5B,QAAO,OAAE2V,SAAF,IAAEA,QAAF,EAAEA,GAAK7W,GAAIA,GAAImI,EAAK/E,OADrC,2CAAX,wDAFV,2CAAF,sDAOR4b,SAAU,SAACjd,GACTy3B,EAAYL,cAAcC,EAAQr3B,GAAO41B,KAAzC,uCAA8C,WAAOjZ,GAAP,SAAAlgB,EAAA,6DAC5CsK,QAAQC,IAAI,gBAAiB2V,GADe,SAEtC3a,EAAQzF,EAAMwB,YAAY,CAACE,GAAIo5B,KAFO,2CAA9C,wDAKFja,OAAQ,SAACpd,GACPo4B,GAAW,GACXE,EAAat4B,IAEfqd,OAAQ,SAACrd,GACPo4B,GAAW,GACXE,EAAat4B,IAEf8I,SAAU,SAAC9I,GAAD,OAAWsH,EAAStH,IAC9Bkd,MAAOma,KAEX,CACE7mB,MAAO,gBACPhB,UAAW,cAAC,IAAD,CACX6M,OAAQ,SAACM,GAAY,IAAD,IAElB,GADA5V,QAAQC,IAAR,UAAY2V,EAAOG,mBAAnB,aAAY,EAAoB9B,kBACMje,IAAnC,UAAA4f,EAAOG,mBAAP,eAAoB9B,aAAyB,CAAC,IAAD,IAC1CrT,EAAI3H,EAAM/E,QACV+9B,EAAOrxB,EAAE7D,KAAI,SAACC,GAAD,OAAOA,EAAE9F,MAAI7C,QAAQuhB,EAAOrB,aAC7C3T,EAAEqxB,GAAM76B,OAASy5B,EAAOp8B,UAAS,UAAAmhB,EAAOG,mBAAP,eAAoB9B,cAAe,KACpE1T,EAASK,GAET,IAAMsxB,EAASC,GAAWvc,EAAOrB,aAEjChc,EAAW,CAACi5B,KAAM,CAACt6B,GAAI0e,EAAOrB,YAAand,OAAQy5B,EAAOp8B,SAAQ,UAACmhB,EAAOG,mBAAR,aAAC,EAAoB9B,iBAAiB4a,MAAK,WAE3GqD,IACAhB,EAAgBtwB,QAStBiU,WAAY,SAAChc,GACX,OACA,cAAC,MAAD,CACE2D,QAAS,WACP+0B,EAAa,CAAC14B,IACdw4B,GAAW,IAEblxB,UAAU,SACV/D,WAAW,UACX8P,MAAM,SACNtP,IAAI,QARN,SASE,cAAC,OAAD,UAAO/D,EAAKL,UAGhBua,QAAS8d,EAAO9zB,KAAI,SAACC,GAAD,MAAQ,CAC1B9F,GAAI8F,EACJyM,MAAOzM,EACP0Y,KAAMzc,EAAMwE,QAAO,SAAC/H,GAAD,OAAYA,EAAE0B,QAAU4F,KAAGD,KAAI,SAACC,GAAD,sBAAWA,cAK7Dm1B,GAAa,SAACj7B,GAGlB,OAFAg6B,EAAgBl9B,MAAMqR,KAAK,IAAIC,IAAJ,sBAAY2rB,GAAZ,CAA0B/5B,OAE9C,WACL,IAAI0J,EAAIqwB,EAAa/8B,SAAW,GAC5B+I,EAAK2D,EAAEvM,QAAQ6C,GAEnB0J,EAAEkF,OAAO7I,EAAI,GACbi0B,EAAgBtwB,KAIpBzC,qBAAU,WACLhC,EAAM8zB,MAAMrgB,OAAO7B,MASrB,CAAC5R,EAAM8zB,MAAMrgB,OAAO7B,MAqCvB,OACC,eAAC,MAAD,CACKlM,IAAI,SACJ1B,UAAU,SACV+L,MAAM,SACN3P,UAAU,oBAAoBiB,MAAO,CAACwB,KAAM,EAAGqC,QAAS,QAJ7D,UAKO,eAAC,MAAD,CACE6K,MAAM,SACN9P,WAAW,WACXQ,IAAK,CAACkB,KAAM,SACZqC,UAAU,MACVjB,QAAQ,UALV,UAME,eAAC,UAAD,CAAS+B,MAAM,IAAIpD,OAAO,QAA1B,iBAAmCkQ,SAAnC,IAAmCA,QAAnC,EAAmCA,GAAK7W,GAAxC,OAAkD,OAAH6W,SAAG,IAAHA,QAAA,EAAAA,GAAKvV,OAAQ,eAE5D,eAAC,MAAD,CAAKqJ,IAAI,SAAS1B,UAAU,MAA5B,UACE,cAAC,SAAD,CACE3D,QAAS,kBAAMw0B,EAAe,IAC9BxzB,MAAO,CAACkb,aAA6B,GAAfqY,EAAmB,yBAAsB/6B,EAAWqW,QAAS,GACnFE,OAAK,EACJzE,gBAAc,EACd3K,MAAM,UACT,cAAC,SAAD,CACEX,QAAS,kBAAMw0B,EAAe,IAC9BxzB,MAAO,CAACkb,aAA6B,GAAfqY,EAAmB,yBAAsB/6B,EAAWqW,QAAS,GACnFE,OAAK,EACLzE,gBAAc,EACd3K,MAAM,wBAGZ,cAAC,IAAD,CACI0D,KAAMuwB,EACN7uB,SAAQ,uCAAE,WAAOuvB,GAAP,qBAAAp8B,EAAA,yDACRsK,QAAQC,IAAI6xB,GACQ,GAAjBA,EAAOx9B,OAFF,iBAGF+K,EAAOyyB,EAAO,IAEV56B,KACAg7B,EAASC,GAAW9yB,EAAKnI,IAE/BqB,EAAW,CAACi5B,KAAM,CAACt6B,GAAImI,EAAKnI,GAAIsB,KAAM6G,EAAK7G,MAAQ,GAAIpB,OAAQiI,EAAKjI,QAAU,MAAMy3B,MAAK,YAAa,IAAXh2B,EAAU,EAAVA,KACzFmH,QAAQC,IAAIpH,GAEZ,IAAI+H,EAAC,OAAG3H,QAAH,IAAGA,OAAH,EAAGA,EAAO/E,QACX+I,EAAK2D,EAAE7D,KAAI,SAACC,GAAD,OAAYA,EAAE9F,MAAI7C,QAAQgL,EAAKnI,IAE9C2B,EAAK3B,GAAKmI,EAAKnI,GAEZ+F,GAAM,IACP2D,EAAE3D,GAAF,eACKpE,IAIPq5B,QAtBE,4BAwCCJ,EAAOx9B,OAAS,GAxCjB,wBAyCFoE,EAAMo5B,EAAO/0B,KAAI,SAACC,GAAD,OAAOA,EAAE9F,MAzCxB,UA0CgBuB,GAAY,CAAC+4B,KAAM,CAAC94B,IAAKA,EAAKtB,OAAQ06B,EAAO,GAAG16B,UA1ChE,QA0CAg7B,EA1CA,OA4CNpyB,QAAQC,IAAImyB,GA5CN,4CAAF,sDAqDR3xB,QAAS,WACPT,QAAQC,IAAI,SACZoxB,GAAW,GACXE,EAAa,KAEft4B,MAAOq4B,EACPvjB,IAAG,OAAEA,SAAF,IAAEA,QAAF,EAAEA,GAAK7W,KAGd,cAAC,MAAD,CAAKgV,MAAM,SAASlN,MAAI,EAAC5C,WAAW,YAApC,SACE,cAAC,MAAD,CACE4E,OAAO,OACPhC,MAAI,EAFN,SAGC6yB,GAAMd,GAAatoB,kBCtVnB4pB,G,OAAuD,SAACl2B,GACjE,OACI,cAAC,MAAD,CACA8C,MAAM,SACNrC,IAAK,CAACuP,WAAY,UAClBtO,OAAQ,CAACqD,OAAQ,UACjBgL,MAAM,SACNlL,OAAO,OACPb,UAAU,MACV/D,WAAW,WAPX,SASA,cAAC,MAAD,CACIA,WAAW,YACX4C,MAAI,EAACkN,MAAM,SAFf,SAIA,cAAC,YAAD,CACIvL,MAAOxE,EAAMsB,OACbsE,SAAU,SAACC,GAAD,uBAAY7F,EAAMuzB,sBAAlB,aAAY,OAAAvzB,EAAuB6F,EAAEC,OAAOtB,QACxD+G,gBAAgB,EAChB6E,OAAK,EACLzK,YAAY,2BCfTwwB,EAA2B,SAACn2B,GAEtC,MAA4B6B,mBAAiB,IAA7C,mBAAOgL,EAAP,KAAeupB,EAAf,KAEM/8B,EAAQ8F,YAAS,CACpBF,UAAU,EACVC,sBAAsB,IAGzB,EAAkC2C,qBAAlC,mBAAOmC,EAAP,KAAkB0vB,EAAlB,KACA,EAAgC7xB,qBAAhC,mBAAOgV,EAAP,KAAiB8c,EAAjB,KAGM91B,EAASxE,EAAMyC,cAAgB,GAwBrC,OAEG,eAAC,MAAD,CACGuF,MAAO,CAAEwB,KAAM,EAAGqC,QAAS,OAAQC,cAAe,UADrD,UAGG,cAAC,EAAD,CACG7D,OAAQuL,EACR0mB,eAAgB,SAACjyB,GAAD,OAAY80B,EAAU90B,MAEzC,cAAC,MAAD,CACGuB,MAAI,EACJkN,MAAM,SACNzK,SAAS,SACTrF,WAAW,YAJd,SAMG,cAAC,YAAD,CACG0W,KAAG,EACHQ,OAAQ,YAA8B,IAA3BN,EAA0B,EAA1BA,SAAU7S,EAAgB,EAAhBA,UAClB2vB,EAAY9c,GACZ6c,EAAa1vB,IAEhB4S,QAAS,CACN,CACG5T,KAAM,QACN6T,SAAU,KACVvU,OAAQ,KACR4U,UAAU,GAEb,CACGL,SAAU,OACVvU,OAAQ,OACR4U,UAAU,IAGhBrP,KAAMhK,EAAOyD,QAnDJ,SAAC5E,GACnB,QAAImQ,EAAO1U,OAAS,IACVuE,EAAKL,KAAK4E,cAAcyI,SAASmD,EAAO5L,kBAiDP4J,MA5C3B,SAAClJ,EAAWwO,GAC5B,OAAI0G,GAAY7S,EACQ,OAAbA,EACJrC,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAC/ElV,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAEhF,aClCHwf,G,OAA2B,SAACr2B,GAAY,IAAD,QAElD,EAA8BsR,qBAAWogB,GAAjCl4B,EAAR,EAAQA,MAAOo4B,EAAf,EAAeA,WAEf,EAAgC/vB,mBAAmC,CACjE2F,MAAO,IAAI/I,KAAMwH,IAAO,IAAIxH,MAAQ6U,QAAQ,WAAWtK,WACvDtB,IAAK,IAAIjJ,KAAMwH,IAAO,IAAIxH,MAAQsP,IAAI,IAAK,QAAQ/E,aAFrD,mBAAQyrB,EAAR,KAAiB6B,EAAjB,KAOMj9B,GAFUgG,cAEFF,YAAS,CACrBF,UAAU,EACVC,sBAAsB,KAIxB,EAAgC2C,mBAAgB,IAAhD,mBAAOyG,EAAP,KAAiBiuB,EAAjB,KAEMhmB,GAAW,UAAAlX,EAAM2B,qBAAN,eAAqB4F,KAAI,SAACC,GAAD,sBAAYA,QAAQ,GACxDhD,GAAS,UAAAxE,EAAMyC,oBAAN,eAAoB8E,KAAI,SAACC,GAAD,sBAAYA,QAAQ,GACrD7C,GAAY,UAAA3E,EAAMqC,uBAAN,eAAuBkF,KAAI,SAACC,GAAD,sBAAYA,QAAQ,GAE3D2M,GAAQ,UAAAnU,EAAM+B,gBAAN,eAAgBwF,KAAI,SAACC,GAAD,sBAAYA,QAAQ,GAEtD,EAA2BpB,aAAY,SAAC1D,EAAUs5B,GAChD,IAAM5b,EAAS1d,EAASU,mBAAmB,CAACC,KAAM24B,EAAK34B,OACvD,MAAO,CACLA,KAAK,eACA+c,GAEL+P,MAAO,QAER,CACD8L,YADC,SACWztB,KACZ0tB,QAFC,SAEO/L,KACRgM,eAAgB,GAChBC,qBAAqB,EACrBx2B,UAAU,IAbZ,mBAAOu3B,EAAP,KAgBA,GAhBA,KAgB+B/2B,aAAY,SAAC1D,EAAUs5B,GACpD,IAAM5b,EAAS1d,EAASY,mBAAmB,CAAC5B,GAAIs6B,EAAKt6B,GAAI2B,KAAM24B,EAAK34B,OACpE,MAAO,CACLA,KAAK,eACA+c,GAEL+P,MAAO,QAER,CACD8L,YADC,SACWztB,KACZ0tB,QAFC,SAEO/L,KACRgM,eAAgB,CAACn8B,EAAMuC,aAAa,CAACV,UAAWu5B,EAAQjtB,MAAOrM,QAASs5B,EAAQ/sB,OAChF+tB,qBAAqB,EACrBx2B,UAAU,KAbZ,mBAAOw3B,EAAP,UAyBE,OATFz0B,qBAAU,WACR00B,EAAgBlC,iBAAiB,CAAChtB,MAAOitB,EAAQjtB,MAAOE,IAAK+sB,EAAQ/sB,KAAMlO,GAAS,IAAIk5B,MAAK,SAACpqB,GAC5FiuB,EAAYjuB,GACZzE,QAAQC,IAAI,WAAYwE,QAEzB,IAEHzE,QAAQC,IAAI,gBAAiBwE,GAGzB,cAAC,MAAD,CAAKzF,MAAI,EAACzC,UAAU,qBAApB,SACE,cAAC,IAAD,CACE5C,KAAMi3B,EAAQjtB,MACdyM,iBAAgB,uCAAE,WAAOzM,EAAOE,GAAd,SAAAnO,EAAA,sDAChBsK,QAAQC,IAAI,UAAW0D,EAAOE,GAC9B4uB,EAAW,CAAC9uB,QAAOE,QAEnBgvB,EAAgBlC,iBAAiB,CAAChtB,QAAOE,OAAMlO,GAAS,IAAIk5B,MAAK,SAACpqB,GAChEiuB,EAAYjuB,GACZzE,QAAQC,IAAI,WAAYwE,MANV,2CAAF,wDAchBuL,QAASvL,GAAY,IAAI1H,KAAI,SAACC,GAAD,0BAAQ,CACnC9F,IAAK,OAAD8F,QAAC,IAADA,OAAA,EAAAA,EAAG9F,KAAM,GACb8C,QAAS,OAADgD,QAAC,IAADA,OAAA,EAAAA,EAAGhD,SAAU,GACrBG,WAAY,OAAD6C,QAAC,IAADA,OAAA,EAAAA,EAAG7C,YAAa,GAC3B/B,QAAS,CAACI,MAAO,OAADwE,QAAC,IAADA,GAAA,UAAAA,EAAG5E,eAAH,mBAAYI,YAAZ,eAAkB9D,aAAc,GAAIwC,IAAK,OAAD8F,QAAC,IAADA,GAAA,UAAAA,EAAG5E,eAAH,mBAAYlB,UAAZ,eAAgBxC,aAAc,IACtFwF,OAAQ,OAAD8C,QAAC,IAADA,OAAA,EAAAA,EAAG9C,QAAS,GACnBD,UAAW,OAAD+C,QAAC,IAADA,OAAA,EAAAA,EAAG/C,WAAY,GACzBN,KAAI,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAGrD,KACTJ,MAAO,CAACrC,IAAK,OAAD8F,QAAC,IAADA,GAAA,UAAAA,EAAGzD,aAAH,mBAAUrC,UAAV,eAAcxC,aAAc,GAAI8D,MAAO,OAADwE,QAAC,IAADA,GAAA,UAAAA,EAAGzD,aAAH,mBAAUf,YAAV,eAAgB9D,aAAc,QAElF0W,aAAc,SAACvS,EAAMi6B,GACnBH,EAAW,CAACnB,KAAM,CAChB34B,KAAK,2BACFA,GADC,IAEJc,KAAM,IAAIiB,KAAKk4B,EAAG3tB,gBACf0pB,KAJL,uCAIU,WAAO7qB,GAAP,SAAAtO,EAAA,sDAERm9B,EAAgBlC,iBAAiB,CAAChtB,MAAOitB,EAAQjtB,MAAOE,IAAK+sB,EAAQ/sB,KAAMlO,GAAS,IAAIk5B,MAAK,SAACpqB,GAC5FiuB,EAAYjuB,GACZzE,QAAQC,IAAI,WAAYwE,MAJlB,2CAJV,wDAaF4G,WAAY,SAACxS,EAAMi6B,GACjBF,EAAW,CAACpB,KAAM,CAChBt6B,GAAI2B,EAAK3B,GACT2B,KAAM,CAACT,QAASS,EAAKT,QACrB4B,OAAQnB,EAAKmB,OACbG,UAAWtB,EAAKsB,UAChBD,MAAOrB,EAAKsB,cACV00B,MAAK,SAAC7qB,QAIZmH,YAAa,SAACtS,EAAMmM,EAAO+tB,KAE3B/oB,KAAM+jB,EACNpkB,MAAOA,EACP+C,SAAUA,GAAY,GACtB1S,OAAQA,EACRG,UAAWA,EACX6X,WAAW,QC7HN,G,OAAA,SAAC7V,GACd,MAAoC6B,mBAAgB,IAApD,mBACA,GADA,UAC8CA,mBAA0C,CAACg1B,OAAQ,GAAIC,MAAO,MAA5G,mBACA,GADA,UAC8Cj1B,oBAAkB,IAAhE,6BA2CE,OACE,sBAAKzB,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAKf,cAAC,MAAD,CAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,kCC3DZ22B,G,OAA2C,SAAC/2B,GACrD,OACI,cAAC,MAAD,CACAuL,gBAAgB,EAChBzI,MAAM,SACNrC,IAAK,CAACuP,WAAY,UAClBtO,OAAQ,CAACqD,OAAQ,UACjBgL,MAAM,SACNlL,OAAO,OACPb,UAAU,MACV/D,WAAW,WARX,SAUA,cAAC,MAAD,CACI4C,MAAI,EACJkN,MAAM,SACN9P,WAAY,YAHhB,SAIA,cAAC,YAAD,CAEImQ,OAAK,EACL5L,MAAOxE,EAAMsB,OACbsE,SAAU,SAACC,GAAD,uBAAY7F,EAAMuzB,sBAAlB,aAAY,OAAAvzB,EAAuB6F,EAAEC,OAAOtB,QACxD+G,gBAAgB,EAEhB5F,YAAY,8BClBTqxB,EAA2B,SAACh3B,GAEvC,MAA4B6B,mBAAiB,IAA7C,mBAAOgL,EAAP,KAAeupB,EAAf,KASM/8B,EAAQ8F,YAAS,CACrBF,UAAU,EACVC,sBAAsB,IAIxB,EAAoC2C,qBAApC,mBAAQmC,EAAR,KAAmB0vB,EAAnB,KACA,EAAkC7xB,qBAAlC,mBAAQgV,EAAR,KAAkB8c,EAAlB,KA+BMsD,GAAgB,OAAL59B,QAAK,IAALA,OAAA,EAAAA,EAAOqC,kBAAmB,GAoD3C,OACE,eAAC,MAAD,CACEmH,MAAI,EACJzC,UAAU,cAFZ,UAGE,cAAC,EAAD,CAAakB,OAAQuL,EAAQ0mB,eAAgB,SAAC1mB,GAAD,OAAYupB,EAAUvpB,MACnE,cAAC,MAAD,CACEkD,MAAM,SACNzK,SAAS,SACTzC,MAAI,EACJ5C,WAAW,YAJb,SAME,cAAC,YAAD,CACE0W,KAAG,EACHQ,OAAQ,YAA4B,IAA1BN,EAAyB,EAAzBA,SAAU7S,EAAe,EAAfA,UAClB2vB,EAAY9c,GACZ6c,EAAa1vB,IAEfsT,WApBY,SAAC5a,KAqBbka,QAnHS,CACf,CAAEC,SAAU,KAAMvU,OAAQ,KAAMU,KAAM,QAASkU,UAAU,GACzD,CAAEL,SAAU,OAAQvU,OAAQ,OAAQ4U,UAAU,GAC9C,CAAEL,SAAU,eAAgBvU,OAAQ,eAAgB4U,UAAU,GAC9D,CAAEL,SAAU,SAAUvU,OAAQ,SAAU4U,UAAU,IAgH5CrP,KAAMovB,EAAS31B,QAzFC,SAAC5E,GAEvB,GAAImQ,EAAO1U,OAAS,EAAG,CAAC,IAAD,IACfkE,GAAW,OAAJK,QAAI,IAAJA,GAAA,UAAAA,EAAML,YAAN,eAAY4E,gBAAiB,GACpCtD,GAAmB,OAAJjB,QAAI,IAAJA,GAAA,UAAAA,EAAMiB,oBAAN,eAAoBsD,gBAAiB,GACpDlG,EAAK,iBAAG2B,QAAH,IAAGA,OAAH,EAAGA,EAAM3B,IAAKkG,eAAiB,GAEpCi2B,EAAUrqB,EAAO5L,eAAiB,GAGtC,OAAOtD,EAAazF,QAAQg/B,IAAY,IAAS,OAAJ76B,QAAI,IAAJA,OAAA,EAAAA,EAAMnE,QAAQg/B,KAAY,IAAO,OAAFn8B,QAAE,IAAFA,OAAA,EAAAA,EAAI7C,QAAQg/B,KAAY,GAAK,UAAGn8B,EAAH,YAASsB,GAAOnE,QAAQg/B,IAAY,EAGjJ,OAAO,KA4EsCrsB,MAnGzB,SAAClJ,EAAWwO,GAChC,OAAG0G,GAAY7S,EACQ,OAAbA,EACHrC,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAC/ElV,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAEjF,aC/BAsgB,EAA2C,SAACn3B,GAAW,IAAD,MAC/D,OACI,eAAC,MAAD,CACAS,IAAK,CAACuP,WAAY,UAClBlN,MAAM,SACNpB,OAAQ,CAACqD,OAAQ,UACjBgL,MAAM,SACNlL,OAAO,OACPb,UAAU,MACV0B,IAAI,SACJzF,WAAW,WARX,UAUA,cAAC,MAAD,CACI4C,MAAI,EACJkN,MAAM,SACN9P,WAAW,YAHf,SAIN,cAAC,YAAD,CACUuE,MAAK,UAAExE,EAAMsB,cAAR,aAAE,EAAcuL,OACrBjH,SAAU,SAACC,GAAD,uBAAY7F,EAAMuzB,sBAAlB,aAAY,OAAAvzB,EAAuB,CAAC6M,OAAQhH,EAAEC,OAAOtB,SACjE+G,gBAAgB,EAChB6E,OAAK,EACLzK,YAAY,oBAEhB,cAAC,MAAD,CACEoK,MAAM,SACN9P,WAAW,YAFb,SAKE,cAAC,SAAD,CACIuE,MAAK,UAAExE,EAAMsB,cAAR,aAAE,EAAcrG,OACrB2K,SAAU,oBAAEG,EAAF,EAAEA,OAAF,iBAAc/F,EAAMuzB,sBAApB,aAAc,OAAAvzB,EAAuB,CAAC6M,OAAM,UAAE7M,EAAMsB,cAAR,aAAE,EAAcuL,OAAQ5R,OAAQ8K,KACxFqK,OAAK,EACLzK,YAAY,SACZK,QAAS,CAAC,OAAO4C,OAAO/Q,MAAMqR,KAAK,IAAIC,IAAJ,UAAQnJ,EAAMsG,cAAd,aAAQ,EAAchF,QAAO,SAAC/H,GAAD,YAAYM,GAALN,KAAgBqH,KAAI,SAACC,GAAD,OAAYA,EAAE5F,QAAU,iBChCzHm8B,G,OAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7Cj2B,MAAO,WACPk2B,SAAU,SAoIGC,GAhIe,SAACx3B,GAAW,IAAD,EACvC,EAA2B6B,mBAAc,IAAzC,mBAAOP,EAAP,KAAemyB,EAAf,KAEA,EAAkC5xB,qBAAlC,mBAAOmC,EAAP,KAAkB0vB,EAAlB,KACA,EAAgC7xB,qBAAhC,mBAAOgV,EAAP,KAAiB8c,EAAjB,KAIM8D,EAAkE,CACtE,CAAE5gB,SAAU,KAAMvU,OAAQ,WAAY4U,UAAU,EAAMlU,KAAM,QAASmD,SAAS,GAC9E,CAAE0Q,SAAU,OAAQvU,OAAQ,aAAc4U,UAAU,EAAMlU,KAAM,SAChE,CAAE6T,SAAU,SAAUvU,OAAQ,SAAU4U,UAAU,EAAMlU,KAAM,SAC9D,CAAE6T,SAAU,QAASvU,OAAQ,cAAgBwU,OAAQ,SAAC4gB,GAAD,OAASN,EAAUlxB,OAAOwxB,EAAIj6B,QAAQyZ,UAAU,EAAMlU,KAAM,QAASF,MAAO,UAQ7Hm0B,EAAQ,UALA93B,YAAS,CACrBF,UAAU,EACVC,sBAAsB,IAGD1D,mBAAT,aAAG,EAAmBoF,KAAI,SAACC,GAAD,mBAAC,eACpCA,GADmC,IAEtC9F,GAAIzC,UAAU,OAADuI,QAAC,IAADA,OAAA,EAAAA,EAAG9F,KAAM,UAGxBiH,qBAAU,cAIP,IAqEH,OACE,eAAC,MAAD,CACEgC,UAAU,SACVnB,MAAI,EAFN,UAGE,cAAC,EAAD,CACEyD,OAAQ2wB,GAAY,GACpB31B,OAAQA,EACRiyB,eAAgB,SAACjyB,GAAD,OAAYmyB,EAASnyB,MAEvC,cAAC,MAAD,CACEuB,MAAI,EACJyC,SAAU,CAAE5E,SAAU,QACtBqP,MAAM,SACN9P,WAAW,YAJb,SAME,cAAC,YAAD,CACE0W,KAAG,EACHQ,OAAQ,YAA8B,IAA3BN,EAA0B,EAA1BA,SAAU7S,EAAgB,EAAhBA,UACnB2vB,EAAY9c,GACZ6c,EAAa1vB,IAEf6G,KAAOgM,GAAY7S,EAAa,CAAC6S,WAAU8gB,UAAU,EAAM3zB,kBAAanK,EACxE+c,QAAS6gB,EACT5vB,KAAI,OAAEovB,QAAF,IAAEA,OAAF,EAAEA,EAAU31B,QAhFH,SAAC5E,GAyBnB,GAAG4E,EAAOrG,QAA2B,OAAjBqG,EAAOrG,OACzB,OAAOyB,EAAKzB,SAAWqG,EAAOrG,OAIjC,GAAIqG,EAAOuL,OAAQ,CAAC,IAAD,EACXxQ,GAAW,OAAJK,QAAI,IAAJA,GAAA,UAAAA,EAAML,YAAN,eAAY4E,gBAAiB,GACpClG,EAAK,iBAAG2B,QAAH,IAAGA,OAAH,EAAGA,EAAM3B,IAAKkG,eAAiB,GAEpC4L,EAASvL,EAAOuL,OAAO5L,eAAiB,GAG5C,OAAW,OAAJ5E,QAAI,IAAJA,OAAA,EAAAA,EAAMnE,QAAQ2U,KAAW,IAAO,OAAF9R,QAAE,IAAFA,OAAA,EAAAA,EAAI7C,QAAQ2U,KAAW,GAAK,UAAG9R,EAAH,YAASsB,GAAOnE,QAAQ2U,IAAW,EAGxG,OAAO,KAwCoChC,MA1F1B,SAAClJ,EAAWwO,GAC7B,OAAG0G,GAAY7S,EACQ,OAAbA,EACHrC,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAC/ElV,EAAKkV,IAAa1G,EAAM0G,GAAY,EAAKlV,EAAKkV,GAAY1G,EAAM0G,GAAY,GAAK,EAEjF,KAoFmDjW,KAnC1C,SAAClE,GACH,IAAI26B,KAAKC,aAAa,QAAS,CAC7Cj2B,MAAO,WACPk2B,SAAU,QAGZ,OAAO,2BACF76B,GADL,IAEEe,MAAOf,EAAKe,mBChFZ4uB,GAAWlrB,IAAMy2B,MAAK,kBAAM,iCAUrBC,GAA4B,SAAC73B,GAKxC,IAAM83B,EAAS,GACT/2B,EAAStH,OAAO4J,SAAS00B,SAASC,QAAQh4B,EAAM8zB,MAAM1wB,IAAK,IAoF7D,OAjBJS,QAAQC,IAAI9D,EAAM8zB,OAkBX,sBAAK1zB,UAAU,YAAf,UACK,cAAC,IAAD,CACEE,YAAa,WACT7G,OAAO4J,SAAS6J,KAAO,cAE3B1M,KAAM,cAACy3B,EAAD,CAAU52B,MAAO,CAACC,OAAQ,eAChCP,OAAQA,EACRJ,KA1FA,WACZ,IACIu3B,EAAQ,GA4DZ,OA1DEA,EAAQ,CAAC,CACG33B,KAAM,cAAC,EAAD,IACNS,MAAO,WACPsL,UAAW,0CAEb,CACE/L,KAAM,cAAC8rB,EAAD,IACNrrB,MAAO,WACPsL,UAAW,8BAEb,CACE/L,KAAM,cAAC43B,EAAD,IACNn3B,MAAO,SACPsL,UAAW,8BAEb,CACE/L,KAAM,cAAC63B,EAAD,IACNp3B,MAAO,WACPsL,UAAW,8BAEb,CACE/L,KAAM,cAACtC,EAAD,IACN+C,MAAO,SACPsL,UAAW,8BAEb,CACE/L,KAAM,cAAC7C,EAAD,IACNsD,MAAO,YACP82B,OAAQA,EAAO3/B,OACfmU,UAAW,+BA6BlB4rB,EA4BWA,GACNh3B,SAAU,SAACL,GACT,IAAIw3B,EAAOC,YAAa,GAAD,OAAIt4B,EAAM8zB,MAAM1wB,IAAhB,SAA4B,CAACi1B,KAAMx3B,EAAEI,gBAC5DjB,EAAM6zB,QAAQjqB,KAAKyuB,MAGzB,cAAC,MAAD,CACEp4B,WAAW,YACX4C,MAAI,EACJpC,IAAI,SAHN,SAIA,cAAC,IAAM83B,SAAP,CAAgBC,SACd,eAAC,MAAD,CACE11B,MAAM,SACNC,QAAQ,SACRF,MAAI,EAHN,UAIE,cAAC,UAAD,CAASG,KAAK,WACd,cAAC,OAAD,6BANJ,SASA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOq1B,KAAI,YAAe/rB,UAAW6G,IACrC,cAAC,IAAD,CAAOklB,KAAI,YAAeI,OAAK,EAACnsB,UAAWknB,IAC3C,cAAC,IAAD,CAAO6E,KAAI,gBAAmB/rB,UAAWqoB,IACzC,cAAC,IAAD,CAAO0D,KAAI,UAAaI,OAAK,EAACnsB,UAAWkrB,KACzC,cAAC,IAAD,CAAOa,KAAI,UAAaI,OAAK,EAACnsB,UAAW6pB,IACzC,cAAC,IAAD,CAAOkC,KAAI,cAAiB/rB,UAAWosB,IACvC,cAAC,IAAD,CAAOL,KAAI,aAAgBI,OAAK,EAACnsB,UAAW0qB,IAC5C,cAAC,IAAD,CAAOqB,KAAI,YAAe/rB,UAAW+f,gBCtKxCsM,GAAY,CACrBC,OAAQ,CACNC,OAAQ,CACN,MAAS,UACT,UAAW,UACX,SAAU,UACV,YAAa,UACb,YAAa,UACb,YAAa,UACb,YAAa,UACb,WAAY,UACZ,WAAY,UACZ,WAAY,GACZlzB,YAAa,YAGjB0G,KAAM,CACFysB,MAAO,CACHC,OAAO,2CAIfC,UAAW,CACP12B,OAAQ,CACJrC,WAAY,YAEhBg5B,OAAQ,CACJ32B,OAAQ,CACJrC,WAAY,cAIxBgJ,OAAQ,CACJjD,QAAS,CACLkzB,UAAW,CACPj5B,WAAY,eAIxBk5B,MAAO,CACHl5B,WAAY,cCRLm5B,OAvBf,WAEE,OADAv1B,QAAQC,IAAIhK,mBAEV,cAAC,EAAD,CACEm2B,oBAA4D,yBAC5DF,SAAS,aACTC,aAAa,SACbE,YAAoD,oCAJtD,SAKI,cAAC,UAAD,CACEmJ,UAAU,OACVjpB,OAAK,EACLkpB,MAAOX,GAHT,SAII,cAAC,IAAD,CAAQY,SAAUz/B,kBAAlB,SACI,qBAAKsG,UAAU,MAAf,SAEE,cAAC,IAAD,CAAOi4B,KAAI,IAAO/rB,UAAWurB,cCVhC2B,GAZS,SAACC,GACnBA,GAAeA,aAAuB3G,UACxC,8BAAqBJ,MAAK,YAAkD,IAA/CgH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCHdM,IAASjjB,OACP,cAAC,IAAMkjB,WAAP,UACE,cAAC,GAAD,MAEFre,SAASse,eAAe,SAM1BT,M","file":"static/js/main.3fce9872.chunk.js","sourcesContent":["\r\nconst hashCode = (str: string) => {\r\n    var hash = 0;\r\n    for(var i = 0; i < str.length; i++){\r\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    return hash;\r\n}\r\n\r\n\r\nconst intToRGB = (i: number) => {\r\n    var c = (i & 0x00FFFFFF)\r\n        .toString(16)\r\n        .toUpperCase();\r\n    var colorCode = \"00000\".substring(0, 6 - c.length) + c; \r\n        return \"#\"+ colorCode; \r\n}\r\n\r\nconst padZero = (str : string, len : number =2) => {\r\n    var zeros = new Array(len).join('0');\r\n    return (zeros + str).slice(-len);\r\n}\r\n\r\n\r\nexport const invertColor = (hex: string) => {\r\n    if (hex.indexOf('#') === 0) {\r\n        hex = hex.slice(1);\r\n    }\r\n    // convert 3-digit hex to 6-digits.\r\n    if (hex.length === 3) {\r\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n        throw new Error('Invalid HEX color.');\r\n    }\r\n    // invert color components\r\n    var r = (255 - parseInt(hex.slice(0, 2), 16)).toString(16),\r\n        g = (255 - parseInt(hex.slice(2, 4), 16)).toString(16),\r\n        b = (255 - parseInt(hex.slice(4, 6), 16)).toString(16);\r\n    // pad each with zeros and return\r\n    return '#' + padZero(r) + padZero(g) + padZero(b);\r\n}\r\n\r\nexport const stringToColor = (string: string) => intToRGB(hashCode(string))\r\n\r\n","/**\r\n * GQLESS: You can safely modify this file and Query Fetcher based on your needs\r\n */\r\n\r\nimport { createReactClient } from \"@gqless/react\";\r\n\r\nimport { createClient, QueryFetcher } from \"gqless\";\r\nimport {\r\n  generatedSchema,\r\n  scalarsEnumsHash,\r\n  GeneratedSchema,\r\n  SchemaObjectTypes,\r\n  SchemaObjectTypesNames,\r\n} from \"./schema.generated\";\r\n\r\nconst queryFetcher: QueryFetcher = async function (query, variables) {\r\n  // Modify \"http://localhost:80/graphql\" if needed\r\n  const token = window.sessionStorage.getItem('CREDENTIALS_TOKEN')\r\n\r\n  const response = await fetch(process.env.NODE_ENV == 'production' ? (process.env.REACT_APP_API != undefined ? `${process.env.REACT_APP_API}/graphql` : '/graphql') : \"http://localhost:8081/graphql\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      query,\r\n      variables,\r\n    }),\r\n    mode: \"cors\",\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  return json;\r\n};\r\n\r\nexport const client = createClient<\r\n  GeneratedSchema,\r\n  SchemaObjectTypesNames,\r\n  SchemaObjectTypes\r\n>({\r\n  schema: generatedSchema,\r\n  scalarsEnumsHash,\r\n  queryFetcher,\r\n});\r\n\r\nexport const { query, mutation, mutate, subscription, resolved, refetch } =\r\n  client;\r\n\r\nexport const {\r\n  graphql,\r\n  useQuery,\r\n  usePaginatedQuery,\r\n  useTransactionQuery,\r\n  useLazyQuery,\r\n  useRefetch,\r\n  useMutation,\r\n  useMetaState,\r\n  prepareReactRender,\r\n  useHydrateCache,\r\n  prepareQuery,\r\n} = createReactClient<GeneratedSchema>(client, {\r\n  defaults: {\r\n    // Set this flag as \"true\" if your usage involves React Suspense\r\n    // Keep in mind that you can overwrite it in a per-hook basis\r\n    suspense: false,\r\n\r\n    // Set this flag based on your needs\r\n    staleWhileRevalidate: false,\r\n  },\r\n});\r\n\r\nexport * from \"./schema.generated\";\r\n","/**\r\n * GQLESS AUTO-GENERATED CODE: PLEASE DO NOT MODIFY MANUALLY\r\n */\r\n\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: unknown }> = {\r\n  [K in keyof T]: T[K];\r\n};\r\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\r\n  { [SubKey in K]?: Maybe<T[SubKey]> };\r\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\r\n  { [SubKey in K]: Maybe<T[SubKey]> };\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport interface Scalars {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  Date: any;\r\n}\r\n\r\nexport interface ProjectInput {\r\n  _id?: Maybe<Scalars[\"ID\"]>;\r\n  id?: Maybe<Scalars[\"String\"]>;\r\n  name?: Maybe<Scalars[\"String\"]>;\r\n  files?: Maybe<Array<Maybe<FileInput>>>;\r\n  status?: Maybe<Scalars[\"String\"]>;\r\n  startDate?: Maybe<Scalars[\"Date\"]>;\r\n  endDate?: Maybe<Scalars[\"Date\"]>;\r\n}\r\n\r\nexport interface FileInput {\r\n  id?: Maybe<Scalars[\"ID\"]>;\r\n  name?: Maybe<Scalars[\"String\"]>;\r\n  extension?: Maybe<Scalars[\"String\"]>;\r\n  mimeType?: Maybe<Scalars[\"String\"]>;\r\n}\r\n\r\nexport interface ScheduleItemInput {\r\n  project?: Maybe<Scalars[\"String\"]>;\r\n  people?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\r\n  equipment?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\r\n  notes?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\r\n  managers?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\r\n  owner?: Maybe<Scalars[\"String\"]>;\r\n  date?: Maybe<Scalars[\"Date\"]>;\r\n}\r\n\r\nexport const scalarsEnumsHash: import(\"gqless\").ScalarsEnumsHash = {\r\n  ID: true,\r\n  String: true,\r\n  Date: true,\r\n  Float: true,\r\n  Boolean: true,\r\n};\r\nexport const generatedSchema = {\r\n  query: {\r\n    __typename: { __type: \"String!\" },\r\n    ProjectById: { __type: \"Project\", __args: { id: \"ID\" } },\r\n    ProjectMany: {\r\n      __type: \"[Project]\",\r\n      __args: { status: \"String\", startDate: \"Date\", endDate: \"Date\" },\r\n    },\r\n    UserMany: { __type: \"[User]\" },\r\n    FileMany: { __type: \"[File]\" },\r\n    FileByProject: { __type: \"[File]\", __args: { id: \"String\" } },\r\n    QuoteById: { __type: \"Quote\", __args: { id: \"ID\" } },\r\n    QuoteMany: {\r\n      __type: \"[Quote]\",\r\n      __args: { status: \"String\", startDate: \"Date\", endDate: \"Date\" },\r\n    },\r\n    EquipmentById: { __type: \"Equipment\", __args: { id: \"ID\" } },\r\n    EquipmentMany: { __type: \"[Equipment]\", __args: { status: \"String\" } },\r\n    ScheduleById: { __type: \"ScheduleItem\", __args: { id: \"ID\" } },\r\n    ScheduleMany: {\r\n      __type: \"[ScheduleItem]\",\r\n      __args: { status: \"String\", startDate: \"Date\", endDate: \"Date\" },\r\n    },\r\n    PeopleById: { __type: \"People\", __args: { id: \"ID\" } },\r\n    PeopleMany: { __type: \"[People]\", __args: { status: \"String\" } },\r\n  },\r\n  mutation: {\r\n    __typename: { __type: \"String!\" },\r\n    addProject: { __type: \"Project\", __args: { project: \"ProjectInput\" } },\r\n    updateProject: {\r\n      __type: \"Project\",\r\n      __args: { id: \"String\", project: \"ProjectInput\" },\r\n    },\r\n    removeFileFromProject: {\r\n      __type: \"Boolean\",\r\n      __args: { project: \"String\", id: \"String\" },\r\n    },\r\n    updateFile: {\r\n      __type: \"File\",\r\n      __args: { id: \"String\", name: \"String\", status: \"String\" },\r\n    },\r\n    updateFiles: {\r\n      __type: \"[File]\",\r\n      __args: { ids: \"[String]\", status: \"String\" },\r\n    },\r\n    removeProject: { __type: \"Boolean\" },\r\n    createScheduleItem: {\r\n      __type: \"ScheduleItem\",\r\n      __args: { item: \"ScheduleItemInput\" },\r\n    },\r\n    updateScheduleItem: {\r\n      __type: \"ScheduleItem\",\r\n      __args: { id: \"String\", item: \"ScheduleItemInput\" },\r\n    },\r\n  },\r\n  subscription: {},\r\n  Project: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n    files: { __type: \"[File]\" },\r\n    status: { __type: \"String\" },\r\n    startDate: { __type: \"Date\" },\r\n    endDate: { __type: \"Date\" },\r\n  },\r\n  File: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    cid: { __type: \"String\" },\r\n    name: { __type: \"String\" },\r\n    extension: { __type: \"String\" },\r\n    mimeType: { __type: \"String\" },\r\n    timestamp: { __type: \"Date\" },\r\n    status: { __type: \"String\" },\r\n    owner: { __type: \"User\" },\r\n  },\r\n  User: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n  },\r\n  Quote: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n    customer: { __type: \"String\" },\r\n    date: { __type: \"Date\" },\r\n    status: { __type: \"String\" },\r\n    price: { __type: \"Float\" },\r\n  },\r\n  Equipment: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n    registration: { __type: \"String\" },\r\n    status: { __type: \"String\" },\r\n  },\r\n  ScheduleItem: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    date: { __type: \"Date\" },\r\n    project: { __type: \"Project\" },\r\n    people: { __type: \"[String]\" },\r\n    managers: { __type: \"[String]\" },\r\n    owner: { __type: \"User\" },\r\n    notes: { __type: \"[String]\" },\r\n    equipment: { __type: \"[String]\" },\r\n  },\r\n  People: {\r\n    __typename: { __type: \"String!\" },\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n  },\r\n  ProjectInput: {\r\n    _id: { __type: \"ID\" },\r\n    id: { __type: \"String\" },\r\n    name: { __type: \"String\" },\r\n    files: { __type: \"[FileInput]\" },\r\n    status: { __type: \"String\" },\r\n    startDate: { __type: \"Date\" },\r\n    endDate: { __type: \"Date\" },\r\n  },\r\n  FileInput: {\r\n    id: { __type: \"ID\" },\r\n    name: { __type: \"String\" },\r\n    extension: { __type: \"String\" },\r\n    mimeType: { __type: \"String\" },\r\n  },\r\n  ScheduleItemInput: {\r\n    project: { __type: \"String\" },\r\n    people: { __type: \"[String]\" },\r\n    equipment: { __type: \"[String]\" },\r\n    notes: { __type: \"[String]\" },\r\n    managers: { __type: \"[String]\" },\r\n    owner: { __type: \"String\" },\r\n    date: { __type: \"Date\" },\r\n  },\r\n} as const;\r\n\r\nexport interface Query {\r\n  __typename: \"Query\" | undefined;\r\n  ProjectById: (args?: { id?: Maybe<Scalars[\"ID\"]> }) => Maybe<Project>;\r\n  ProjectMany: (args?: {\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n    startDate?: Maybe<Scalars[\"Date\"]>;\r\n    endDate?: Maybe<Scalars[\"Date\"]>;\r\n  }) => Maybe<Array<Maybe<Project>>>;\r\n  UserMany?: Maybe<Array<Maybe<User>>>;\r\n  FileMany?: Maybe<Array<Maybe<File>>>;\r\n  FileByProject: (args?: {\r\n    id?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<Array<Maybe<File>>>;\r\n  QuoteById: (args?: { id?: Maybe<Scalars[\"ID\"]> }) => Maybe<Quote>;\r\n  QuoteMany: (args?: {\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n    startDate?: Maybe<Scalars[\"Date\"]>;\r\n    endDate?: Maybe<Scalars[\"Date\"]>;\r\n  }) => Maybe<Array<Maybe<Quote>>>;\r\n  EquipmentById: (args?: { id?: Maybe<Scalars[\"ID\"]> }) => Maybe<Equipment>;\r\n  EquipmentMany: (args?: {\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<Array<Maybe<Equipment>>>;\r\n  ScheduleById: (args?: { id?: Maybe<Scalars[\"ID\"]> }) => Maybe<ScheduleItem>;\r\n  ScheduleMany: (args?: {\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n    startDate?: Maybe<Scalars[\"Date\"]>;\r\n    endDate?: Maybe<Scalars[\"Date\"]>;\r\n  }) => Maybe<Array<Maybe<ScheduleItem>>>;\r\n  PeopleById: (args?: { id?: Maybe<Scalars[\"ID\"]> }) => Maybe<People>;\r\n  PeopleMany: (args?: {\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<Array<Maybe<People>>>;\r\n}\r\n\r\nexport interface Mutation {\r\n  __typename: \"Mutation\" | undefined;\r\n  addProject: (args?: { project?: Maybe<ProjectInput> }) => Maybe<Project>;\r\n  updateProject: (args?: {\r\n    id?: Maybe<Scalars[\"String\"]>;\r\n    project?: Maybe<ProjectInput>;\r\n  }) => Maybe<Project>;\r\n  removeFileFromProject: (args?: {\r\n    project?: Maybe<Scalars[\"String\"]>;\r\n    id?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<ScalarsEnums[\"Boolean\"]>;\r\n  updateFile: (args?: {\r\n    id?: Maybe<Scalars[\"String\"]>;\r\n    name?: Maybe<Scalars[\"String\"]>;\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<File>;\r\n  updateFiles: (args?: {\r\n    ids?: Maybe<Array<Maybe<Scalars[\"String\"]>>>;\r\n    status?: Maybe<Scalars[\"String\"]>;\r\n  }) => Maybe<Array<Maybe<File>>>;\r\n  removeProject?: Maybe<ScalarsEnums[\"Boolean\"]>;\r\n  createScheduleItem: (args?: {\r\n    item?: Maybe<ScheduleItemInput>;\r\n  }) => Maybe<ScheduleItem>;\r\n  updateScheduleItem: (args?: {\r\n    id?: Maybe<Scalars[\"String\"]>;\r\n    item?: Maybe<ScheduleItemInput>;\r\n  }) => Maybe<ScheduleItem>;\r\n}\r\n\r\nexport interface Subscription {\r\n  __typename: \"Subscription\" | undefined;\r\n}\r\n\r\nexport interface Project {\r\n  __typename: \"Project\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n  files?: Maybe<Array<Maybe<File>>>;\r\n  status?: Maybe<ScalarsEnums[\"String\"]>;\r\n  startDate?: Maybe<ScalarsEnums[\"Date\"]>;\r\n  endDate?: Maybe<ScalarsEnums[\"Date\"]>;\r\n}\r\n\r\nexport interface File {\r\n  __typename: \"File\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  cid?: Maybe<ScalarsEnums[\"String\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n  extension?: Maybe<ScalarsEnums[\"String\"]>;\r\n  mimeType?: Maybe<ScalarsEnums[\"String\"]>;\r\n  timestamp?: Maybe<ScalarsEnums[\"Date\"]>;\r\n  status?: Maybe<ScalarsEnums[\"String\"]>;\r\n  owner?: Maybe<User>;\r\n}\r\n\r\nexport interface User {\r\n  __typename: \"User\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n}\r\n\r\nexport interface Quote {\r\n  __typename: \"Quote\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n  customer?: Maybe<ScalarsEnums[\"String\"]>;\r\n  date?: Maybe<ScalarsEnums[\"Date\"]>;\r\n  status?: Maybe<ScalarsEnums[\"String\"]>;\r\n  price?: Maybe<ScalarsEnums[\"Float\"]>;\r\n}\r\n\r\nexport interface Equipment {\r\n  __typename: \"Equipment\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n  registration?: Maybe<ScalarsEnums[\"String\"]>;\r\n  status?: Maybe<ScalarsEnums[\"String\"]>;\r\n}\r\n\r\nexport interface ScheduleItem {\r\n  __typename: \"ScheduleItem\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  date?: Maybe<ScalarsEnums[\"Date\"]>;\r\n  project?: Maybe<Project>;\r\n  people?: Maybe<Array<Maybe<ScalarsEnums[\"String\"]>>>;\r\n  managers?: Maybe<Array<Maybe<ScalarsEnums[\"String\"]>>>;\r\n  owner?: Maybe<User>;\r\n  notes?: Maybe<Array<Maybe<ScalarsEnums[\"String\"]>>>;\r\n  equipment?: Maybe<Array<Maybe<ScalarsEnums[\"String\"]>>>;\r\n}\r\n\r\nexport interface People {\r\n  __typename: \"People\" | undefined;\r\n  id?: Maybe<ScalarsEnums[\"ID\"]>;\r\n  name?: Maybe<ScalarsEnums[\"String\"]>;\r\n}\r\n\r\nexport interface SchemaObjectTypes {\r\n  Query: Query;\r\n  Mutation: Mutation;\r\n  Subscription: Subscription;\r\n  Project: Project;\r\n  File: File;\r\n  User: User;\r\n  Quote: Quote;\r\n  Equipment: Equipment;\r\n  ScheduleItem: ScheduleItem;\r\n  People: People;\r\n}\r\nexport type SchemaObjectTypesNames =\r\n  | \"Query\"\r\n  | \"Mutation\"\r\n  | \"Subscription\"\r\n  | \"Project\"\r\n  | \"File\"\r\n  | \"User\"\r\n  | \"Quote\"\r\n  | \"Equipment\"\r\n  | \"ScheduleItem\"\r\n  | \"People\";\r\n\r\nexport interface GeneratedSchema {\r\n  query: Query;\r\n  mutation: Mutation;\r\n  subscription: Subscription;\r\n}\r\n\r\nexport type MakeNullable<T> = {\r\n  [K in keyof T]: T[K] | undefined;\r\n};\r\n\r\nexport interface ScalarsEnums extends MakeNullable<Scalars> {}\r\n","import React from 'react';\r\n\r\nimport { Box, Button, Text } from 'grommet';\r\n\r\nimport { User } from 'grommet-icons'\r\n\r\nimport styled from 'styled-components'\r\n\r\nexport interface SidebarProps {\r\n  logo: any\r\n\r\n  className?: string;\r\n  user?: {\r\n    name: string;\r\n    email: string;\r\n  }\r\n  menu: any[];\r\n  active: any;\r\n  onLogoClick?: () => void;\r\n  onSelect: any;\r\n}\r\n\r\nconst BaseSidebar: React.FC<SidebarProps> = (props) => {\r\n\r\n  // _logout(){\r\n  //   this.props.logout()\r\n  //   this.props.history.push('/')\r\n  // }\r\n\r\n  // _settings(){\r\n  //   this.props.history.push(`${props.match.url}settings`);\r\n  // }\r\n\r\n  // _profile(){\r\n  //   this.props.history.push(`${props.match.url}profile`);\r\n  // }\r\n\r\n  // const { active, user, menu, logo } = props;\r\n\r\n  return (\r\n    <Box\r\n      background={{color: \"brand\"}}\r\n      elevation=\"small\"\r\n      className={`${props.className} sidebar`}>\r\n      <Button \r\n        onClick={props.onLogoClick}\r\n        icon={props.logo}\r\n        className=\"sidebar-header-image\" >\r\n      </Button>\r\n      <Box pad={{vertical: 'xsmall'}} className=\"sidebar-menu\">\r\n        {props.menu?.map((x, ix) => (\r\n          <li\r\n            key={`sidebar-${ix}`}\r\n            className={`sidebar-menu-opt ${props.active == \"/\" + x.label.toLowerCase() ? \"active\" : ''} ${ix == 0 && props.active == \"\" ? 'active' : ''}`}\r\n            onClick={() => props.onSelect(x.label)}>\r\n\r\n            {React.cloneElement(x.icon, {style: {filter: 'invert(1)', fill: '#F3E6DC', minWidth: '30px', maxWidth: '30px'}})}\r\n            <Text color={'neutral-1'} margin={{left: 'small'}}>{x.label}</Text>\r\n\r\n\r\n          </li>\r\n        ))}\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const Sidebar = styled(BaseSidebar)`\r\n@media print{\r\n  .sidebar{\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n@media (max-width: 600px){\r\n  .sidebar-header-image, .sidebar-admin-option, .sidebar-footer{\r\n    display: none !important;\r\n  }\r\n\r\n  .sidebar{\r\n    width: 100% !important;\r\n  }\r\n\r\n  .sidebar-menu{\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 0;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n@media (min-width: 601px) and (max-width:1024px){\r\n  .sidebar{\r\n    width: 52px !important;\r\n  }\r\n}\r\n\r\n@media (max-width: 1025px){\r\n\r\n  .sidebar > .sidebar-footer > .sidebar-footer__action{\r\n    flex: 1;\r\n    justify-content: center;\r\n  }\r\n  .sidebar > .sidebar-footer > .sidebar-footer__info{\r\n    display: none;\r\n  }\r\n\r\n  .sidebar > .sidebar-menu {\r\n    margin-top: 0px;\r\n  }\r\n\r\n  .sidebar-menu > .sidebar-menu-opt{\r\n    font-size: 0px;\r\n  }\r\n\r\n  .sidebar > .sidebar-header-image{\r\n    display: none !important;\r\n  }\r\n\r\n  .sidebar-admin-option p{\r\n    font-size: 0px;\r\n  }\r\n}\r\n\r\n.sidebar-admin-option:hover{ \r\n background: rgb(230, 230, 230, 0.2); \r\n}\r\n\r\n.sidebar-admin-option{\r\n  cursor: pointer;\r\n  display: flex;\r\n  color: white;\r\n  align-items: center;\r\n  height: 45px;\r\n  font-size: 18px;\r\n  padding-left: 15px;\r\n}\r\n\r\n.sidebar-header-image{\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n\r\n.sidebar-footer{\r\n  display: flex;\r\n  color: white;\r\n  padding: 8px;\r\n  border-top: 1px solid #e6e6e6;\r\n}\r\n\r\n.sidebar-footer__info{\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.sidebar-footer__action{\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.sidebar-footer__email > p{\r\n  font-size: 11px;\r\n  color: #e6e6e6;\r\n}\r\n\r\n&.sidebar{\r\n  user-select: none;\r\n  border-radius-top-left: 0px !important;\r\n  border-radius-bottom-left: 0px !important;\r\n  display: flex;\r\n  width: 155px;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-header-image{\r\n  height: 60px;\r\n  margin-top: 16px;\r\n  filter: invert(1);\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.sidebar-menu{\r\n  padding: 0;\r\n  flex: 1;\r\n  list-style: none;\r\n}\r\n\r\n.sidebar-menu > li{\r\n  cursor: pointer;\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  color: #e6e6e6;\r\n  padding-left: 15px;\r\n}\r\n\r\n.sidebar-menu > li > span {\r\n  margin-right: 15px;\r\n}\r\n\r\n.sidebar-menu > li:hover{\r\n background: rgb(230, 230, 230, 0.2); \r\n}\r\n\r\n.sidebar-menu > li.active{\r\n  background: rgb(230, 230, 230, 0.2);;\r\n}\r\n\r\n`\r\n\r\n/*\r\n {user.user_type == \"admin\" ? (\r\n          <div className=\"sidebar-admin-option\" onClick={this._settings.bind(this)}>\r\n            <Icon style={{marginRight: '15px'}}>supervised_user_circle</Icon>\r\n            <Typography className=\"sidebar-admin-option__text\">Admin</Typography>\r\n          </div>\r\n        ) : null}\r\n*/\r\n\r\n//   export default connect((state) => {\r\n//     return {\r\n//       user: state.auth.user,\r\n//       token: state.auth.token\r\n//     }\r\n//   }, (dispatch) => ({\r\n//     logout: () => dispatch(logout())\r\n//   }))(withRouter(styled(Sidebar)`\r\n//     .sidebar-header-image{\r\n//       background-image: url(${Logo});\r\n//     }\r\n//   `));\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDocViewer, { IDocument, DocViewerRenderers } from 'react-doc-viewer'\r\n\r\nexport interface FileViewerProps {\r\n    documents?: IDocument[];\r\n\r\n    documentUrl?: string;\r\n\r\n    documentType?: string;\r\n}\r\n\r\nexport const DocViewer : React.FC<FileViewerProps> = (props) => {\r\n\r\n    const [ documents, setDocuments ] = useState<IDocument[]>([])\r\n\r\n    useEffect(() => {\r\n        if(props.documents){\r\n            setDocuments(props.documents)\r\n        }\r\n    }, [props.documents])\r\n\r\n    useEffect(() => {\r\n        if(props.documentUrl){\r\n            setDocuments([{uri: props.documentUrl, fileType: props.documentType}])\r\n        }\r\n    }, [props.documentUrl, props.documentUrl])\r\n\r\n    return (props.documents || props.documentUrl) ? (\r\n        <ReactDocViewer\r\n            config={{\r\n                header: {\r\n                    disableFileName: true,\r\n                    disableHeader: true,\r\n                    overrideComponent: () => <></>\r\n                }\r\n            }}\r\n            documents={documents}\r\n            pluginRenderers={DocViewerRenderers} />\r\n    ) : null\r\n}\r\n\r\nexport interface FileThumbnailProps {\r\n\r\n}\r\n\r\nexport const FileThumbnail : React.FC<FileViewerProps> = (props) => {\r\n    return (\r\n        <ReactDocViewer\r\n            config={{\r\n                header: {\r\n                    disableHeader: true,\r\n                    disableFileName: true,\r\n                    overrideComponent: () => <></>\r\n                   }\r\n            }}\r\n            documents={props.documents || []}\r\n            pluginRenderers={DocViewerRenderers} />\r\n    )\r\n}","import { Box, Text } from 'grommet';\r\nimport * as Icons from 'grommet-icons'\r\nimport React from 'react';\r\nimport { DocViewer } from './DocViewer';\r\n\r\n\r\nexport interface FileViewerProps {\r\n    files: any[]\r\n\r\n    token?: string;\r\n}\r\n\r\nexport const FileViewer: React.FC<FileViewerProps> = ({\r\n    files = [],\r\n    token\r\n}) => {\r\n\r\n    if (files && files.length == 1) {\r\n        let file = files[0]\r\n        let mimetype = file.mimeType ? file.mimeType : 'text/plain'\r\n\r\n        let url = `${process.env.REACT_APP_API && process.env.REACT_APP_API.length > 0 ? process.env.REACT_APP_API : window.location.origin}/api/files/${file._id}${file?.extension ? file?.extension : ''}?access_token=${token}`;\r\n\r\n        let main = mimetype.split('/')[0];\r\n        let sub = mimetype.split('/')[1];\r\n\r\n        switch (main) {\r\n            case \"video\":\r\n                return (\r\n                    <video autoPlay={false} src={url} />\r\n                );\r\n            case \"image\":\r\n                return (<img style={{ width: '100%' }} src={url} />)\r\n            case \"application\":\r\n                switch (sub) {\r\n                    case \"pdf\":\r\n                    case \"vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n                    case \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n                        console.log(url, `${main}/${sub}`)\r\n                        return (\r\n                            <DocViewer\r\n                                documentUrl={url}\r\n                                documentType={`${main}/${sub}`} />\r\n\r\n                        )\r\n                    case \"zip\":\r\n                    case \"octet-stream\":\r\n                    case \"x-zip-compressed\":\r\n                    case \"x-rar-compressed\":\r\n                        return (\r\n                        <Box flex align=\"center\" justify=\"center\">\r\n                            <Icons.DocumentZip size=\"large\" />\r\n                        </Box>\r\n                        );\r\n                    default:\r\n                        return null;\r\n                }\r\n\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    } else {\r\n        return (\r\n            <Box\r\n                flex\r\n                align=\"center\"\r\n                justify=\"center\">\r\n                <Icons.Multiple size=\"large\" />\r\n                <Text margin={{ top: 'small' }} size=\"medium\">{files.length} files</Text>\r\n            </Box>\r\n        )\r\n        //TODO render multi file placeholder\r\n        return null;\r\n    }\r\n}","import { Box } from 'grommet';\r\nimport React from 'react';\r\nimport { FileViewer } from '../../file-viewer';\r\nimport styled from 'styled-components'\r\n\r\nexport interface FileContentProps {\r\n    files?: any[];\r\n    token?: string;\r\n    className?: string;\r\n}\r\n\r\nexport const BaseFileContent : React.FC<FileContentProps> = ({className, files = [], token}) => {\r\n    return (\r\n        <Box className={className} direction=\"column\" flex>\r\n            <FileViewer files={files} token={token} />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport const FileContent = styled(BaseFileContent)`\r\n    & > * {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`","import React, {\r\n  useEffect, useState\r\n} from 'react';\r\n\r\nimport {\r\n  CloudDownload, Expand\r\n} from 'grommet-icons'\r\nimport moment from 'moment';\r\n\r\nimport { Button, Text, Select, Heading,  Box, Layer, TextInput} from 'grommet'\r\n// import './file-dialog.css';\r\nimport { IFile as HexFile } from '@hexhive/types'\r\nimport { FileViewer } from '../../file-viewer';\r\nimport { FileContent } from './FileContent';\r\nimport { isEqual } from 'lodash';\r\n\r\n\r\nexport interface FileDialogProps {\r\n  open: boolean;\r\n  onClose?: any;\r\n  onSubmit?: (files: HexFile[]) => void;\r\n\r\n  job?: any;\r\n  files?: HexFile[];\r\n\r\n  token?: string;\r\n\r\n}\r\n\r\nexport const FileDialog : React.FC<FileDialogProps> = (props) =>{\r\n\r\n  const [ expanded, setExpanded ] = useState<boolean>(true);\r\n\r\n  const [ files, setFiles ] = useState<HexFile[]>([])\r\n\r\n  useEffect(() => {\r\n    if(props.files && !isEqual(files, props.files)){\r\n      setFiles(props.files)\r\n    }\r\n  }, [props.files])\r\n\r\n  /*\r\n   * Make this handle all files properly\r\n   */\r\n  const downloadFile = () => {\r\n    let files = props.files;\r\n    if(files && files.length == 1){\r\n      let file = files[0]\r\n      // utils.job.getFile(props.job, `${file?._id}${file?.extension ? file.extension : ''}`).then((r) => {\r\n      //   if(r){\r\n      //     download(r, `${file?.name}${file?.extension ? file.extension : ''}`, file?.mimeType);\r\n      //   }\r\n      // })\r\n    }else{\r\n      //TODO download batch\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if(files){\r\n      //console.log(props.file)\r\n      props.onSubmit?.(files)\r\n    }\r\n\r\n    onClose()\r\n  /*()\r\n    let update: any = {\r\n      ...file\r\n    }\r\n    utils.job.updateFile(props.job, props.file.id, update).then((resp) => {\r\n      console.log(\"Updated\", resp)\r\n    })\r\n    onClose()*/\r\n  }\r\n\r\n  const onClose = () => {\r\n    if(props.onClose){\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  \r\n  const updateFile = (key: string, value: any) => {\r\n    let f = files.slice()\r\n\r\n    if(f.length == 1){\r\n      f[0] = {\r\n        ...f[0],\r\n        [key]: value\r\n      }\r\n    }else if(f.length > 1){\r\n      if(key == 'status'){\r\n        f = f.map((x) => ({...x, [key]: value}))\r\n      }\r\n    }\r\n\r\n    setFiles(f)\r\n  }\r\n\r\n\r\n  const file = files.length == 1 ? files[0] : {\r\n    id: ' ',\r\n    name: \"Multiple files\",\r\n    mimeType: \"Mutliple\",\r\n    owner: {name: \"Multiple uploaders\"},\r\n    status: files[0] ? files[0].status : '',\r\n    timestamp: 0\r\n  }\r\n    return props.open ? (\r\n      <Layer\r\n        onEsc={onClose}\r\n        onClickOutside={onClose}\r\n        >\r\n        <Box \r\n          height=\"80vh\"\r\n          width=\"xlarge\" \r\n          pad=\"small\">\r\n        <Box direction=\"row\" justify=\"between\">\r\n          <Heading level='4' margin={{bottom: 'small', top: 'none'}}>File Details</Heading>\r\n          <Button\r\n            icon={<Expand />}\r\n            onClick={() => setExpanded(!expanded)}\r\n            label=\"View file\" />\r\n        </Box>\r\n        <Box \r\n          flex\r\n          direction=\"row\">\r\n          <div style={{flex: 1, marginRight: 5, display: 'flex', flexDirection: 'column'}}>\r\n            <FileContent files={files} token={props.token} />\r\n            {files?.length == 1 && expanded ? (\r\n            <Button icon={<CloudDownload />} label=\"Download\" style={{marginTop: '8px'}}  onClick={downloadFile} />\r\n          ) : null}\r\n          </div>\r\n          <div style={{\r\n              overflow: 'hidden',\r\n              width: !expanded ? '0px' : 'auto',\r\n              transition: 'flex 250ms ease-in',\r\n              flex: !expanded ? 0 : 1, \r\n              marginLeft: 5, \r\n              display: 'flex', \r\n              flexDirection: 'column', \r\n              justifyContent: 'space-between'\r\n            }}>\r\n\r\n            <Box \r\n              gap=\"small\"\r\n              direction=\"column\">\r\n              <TextInput \r\n                placeholder=\"File title\"\r\n                onChange={(e) => updateFile('name', e.target.value)}\r\n                value={file?.name} />\r\n\r\n              <Text margin='none' size='small'>Status</Text>\r\n              <Select                \r\n                value={file?.status || ''}\r\n                onChange={({value, option}) => updateFile('status', value)}\r\n                options={['Issued', 'Workshop', 'Finished']}\r\n                />\r\n            </Box>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}> \r\n              <Text style={{color: 'gray'}}>File type: {file && file.mimeType}</Text>\r\n              <Text style={{color: 'gray'}}>Uploaded By: {file && file.owner && file.owner?.name}</Text>\r\n              {file.id && <Text style={{color: 'gray'}}>Upload Date: {file && moment(/*dateFromObjectID(file._id)*/).format(\"hh:mma DD/MM/YYYY\")}</Text>}\r\n            </div>\r\n          </div>\r\n\r\n        </Box>\r\n        <Box margin={{top: 'small'}} direction=\"row\" justify=\"end\">\r\n          <Button label=\"Cancel\" onClick={onClose} />\r\n          <Button primary label=\"Save\" onClick={onSubmit} />\r\n        </Box>\r\n        </Box>\r\n      </Layer>\r\n    ) : null;\r\n}\r\n\r\n// export const FileDialog = connect((state: StoreState) => {\r\n//   console.log(state)\r\n//   return {\r\n//   token: state.auth.token\r\n//   }\r\n// })(BaseFileDialog)\r\n","import React, {\r\n    Component, useState\r\n  } from 'react';\r\n  \r\n  import {\r\n      Box,\r\n      Select\r\n  } from 'grommet'\r\n\r\n  import styled from 'styled-components'\r\n  // import Chip from '@material-ui/core/Chip';\r\n  //import './search-field.css';\r\n  \r\n  export interface SearchFieldProps {\r\n    options?: any[];\r\n    value?: any;\r\n    onChange?: any;\r\n    className?: string;\r\n  }\r\n  \r\n  export const BaseSearchField : React.FC<SearchFieldProps> = (props) => {\r\n    const [ quotes, setQuotes ] = useState<boolean>(true)\r\n    const [ jobs, setJobs ] = useState<boolean>(true);\r\n \r\n  \r\n    const toggleFilter = (key: string) => {\r\n        if(key == 'quotes'){\r\n            setQuotes(!quotes)\r\n        }else if(key == 'jobs'){\r\n            setJobs(!jobs)\r\n        }\r\n    }\r\n  \r\n    const mapTypes = (type: {\r\n        type: string,\r\n        QuoteID?: string,\r\n        Name?: string,\r\n        JobID?: string,\r\n        JobName?: string\r\n    }) => {\r\n\r\n      switch(type.type){\r\n        case 'quote':\r\n          return{\r\n            label: `${type.QuoteID} - ${type.Name}`.substring(0, 40),\r\n            value: \"quote:\"+type.QuoteID\r\n          }\r\n        case 'job':\r\n          return {\r\n            label: `${type.JobID} - ${type.JobName}`.substring(0, 40),\r\n            value: \"job:\" + type.JobID\r\n          }\r\n        default:\r\n          return {};\r\n      }\r\n    } \r\n  \r\n    const filterTypes = (a: {type: string}) => {\r\n      switch(a.type){\r\n        case 'quote':\r\n          return quotes;\r\n        case 'job':\r\n          return jobs;\r\n        default:\r\n          return true;\r\n      }\r\n    }\r\n  \r\n      const { options, value, onChange} = props;\r\n      return (\r\n        <Box \r\n            direction=\"column\"\r\n            className={props.className}>\r\n          <Box \r\n            width=\"100%\"\r\n            className=\"search-field__input\">\r\n            <Select \r\n                labelKey={'label'}\r\n                valueKey={'value'}\r\n                options={options?.filter(filterTypes).map(mapTypes) || []} \r\n                value={value} \r\n                onChange={({option})=> onChange(option)}/>\r\n          </Box>\r\n          <Box \r\n            margin={{top: 'small'}}\r\n            direction=\"row\"\r\n            className=\"search-field__options\">\r\n          \r\n            \r\n          </Box>\r\n        </Box>\r\n      );\r\n    \r\n  }\r\n\r\n  export const SearchField = styled(BaseSearchField)`\r\n  .search-field__input{\r\n      position: relative;\r\n  }\r\n  .job-option.selected:hover{\r\n    background:  #3f51b59e !important;\r\n  }\r\n  \r\n  .quote-option.selected:hover{\r\n    background: #b5b13fad !important;\r\n  }\r\n  \r\n  .job-option.selected,job-option.selected:focus{\r\n    background: #3f51b5 !important;\r\n    color: white;\r\n  }\r\n  \r\n  .quote-option.selected,quote-option.selected:focus{\r\n    background:  #b5b13f !important;\r\n    color: white;\r\n  }\r\n  \r\n  .job-option {\r\n    margin-right: 8px;\r\n  }\r\n  `\r\n\r\n  /*\r\n<Chip \r\n              className={!jobs ? \"job-option\" : \"job-option selected\"}\r\n              clickable\r\n              label=\"Jobs\" \r\n              onClick={() => toggleFilter('jobs')} />\r\n        <Chip \r\n              className={!quotes ? \"quote-option\" : \"quote-option selected\"}\r\n              label=\"Quotes\"\r\n              clickable\r\n              onClick={() => toggleFilter('quotes')}/>\r\n  */","import React, {\r\n  Component\r\n} from 'react';\r\n\r\nexport default class ColorDot extends Component<any, any> {\r\n  render(){\r\n    const { size, color } = this.props;\r\n    return (\r\n      <div style={{\r\n        marginRight: 8,\r\n        background: color,\r\n        borderRadius: size * 2,\r\n        height: size,\r\n        width: size\r\n      }}/>\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n    Component, useEffect, useState\r\n} from 'react';\r\n\r\nimport {SearchField} from './search-field';\r\nimport { Layer, Button, Text, Heading, Box, Select } from 'grommet'\r\n\r\nimport ColorDot from '../../color-dot';\r\n\r\n// import DateRange from '../../material-date-range';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    Calendar as Event\r\n} from 'grommet-icons'\r\n//import './schedule-modal.css';\r\nimport styled from 'styled-components';\r\n\r\n//var DatePicker = require('react-bootstrap-date-picker');\r\n\r\nexport interface PlanningModalProps {\r\n    open: boolean;\r\n    onClose?: any;\r\n\r\n    event?: {\r\n        id?: string;\r\n        type?: string;\r\n        start?: Date;\r\n        end?: Date;\r\n        data?: {\r\n            type?: string;\r\n            id?: string;\r\n        }\r\n    };\r\n\r\n    className?: string;\r\n}\r\n\r\nexport const BasePlanningModal : React.FC<PlanningModalProps> = (props) => {\r\n    const [ planType, setPlanType ] = useState<string>('')\r\n\r\n    const [ quotes, setQuotes ] = useState<any[]>([]);\r\n    const [ quote, setQuote ] = useState<any>()\r\n    \r\n    const [ mode, setMode ] = useState<string>('create')\r\n    const [ start, setStart ] = useState<Date>()\r\n    const [ end, setEnd ] = useState<Date>()\r\n\r\n    useEffect(() => {\r\n        // (async () => {\r\n        // let result = await Promise.all([\r\n        //     (async () => {\r\n        //         let quotes = await utils.quote.getAll()\r\n        //         return quotes.map((x: any) => ({...x, type: 'quote'}))\r\n        //     })(), \r\n        //     (async () => {\r\n        //         let jobs = await utils.job.getAll()\r\n        //         return jobs.map((x: any) => ({...x, type: 'job'}))\r\n        //     })()\r\n        // ])\r\n        // setQuotes(result[0].concat(result[1]))\r\n        // })()\r\n    }, [])\r\n\r\n   \r\n    useEffect(() => {\r\n        if(props.event){\r\n            if(props.event.id){\r\n                setQuote((props.event?.data?.type) ? props.event.data.type + \":\" : \"quote:\" + props.event?.data?.id)\r\n                setPlanType(props.event.type ? props.event.type : 'quotes')\r\n                setStart(props.event?.start)\r\n                setEnd(props.event?.end)\r\n                setMode('edit')\r\n            }else{\r\n                setStart(props.event?.start)\r\n                setEnd(props.event?.end)\r\n                setMode('create')\r\n            }\r\n        }else{\r\n            setQuote(null)\r\n            setStart(undefined)\r\n            setEnd(undefined)\r\n            setMode('create')\r\n        }\r\n    }, [props.event])\r\n\r\n    const createQuote = () => {\r\n        let schedule_quote : any;\r\n        var startDate = start?.getTime();\r\n        var endDate = end?.getTime();\r\n      console.log(quotes, quote)\r\n      for(var i = 0; i < quotes?.length; i++){\r\n          let prefix = quotes?.[i].type;\r\n            if(prefix +\":\"+ quotes?.[i][prefix == 'quote' ? 'QuoteID' : 'JobID'] == quote?.value){\r\n    \r\n                schedule_quote = {\r\n                    id: quotes?.[i][prefix == 'quote' ? 'QuoteID' : 'JobID'],\r\n                  name: quotes?.[i][prefix == 'quote' ? 'Name' : 'JobName'],\r\n                  type: prefix\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        var schedule = {\r\n          quote: quote,\r\n          start: startDate,\r\n          end: endDate,\r\n          type: planType\r\n        };\r\n      console.log(\"Planning\", schedule);\r\n      \r\n        // if(mode == 'edit'){\r\n        //     if(!props.event?.id) return;\r\n        //     utils.planner.update(props.event?.id, {\r\n        //         ...schedule,\r\n        //         id: props.event?.id\r\n        //     }).then((r: any)=> {\r\n        //         props.onClose();\r\n        //     });        \r\n        //     //Upsert schedule\r\n        // }else{\r\n        //   schedule.end = moment(schedule.end).add(12, 'hours').valueOf();\r\n        //     utils.planner.create(schedule).then((r : any) => {\r\n        //         props.onClose();\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    const deleteQuote = () => {\r\n        if(!props.event?.id) return;\r\n        // utils.planner.remove(props.event?.id).then((r: any) => {\r\n        //     props.onClose();\r\n        // });\r\n    }\r\n\r\n\r\n  const filledIn = () => {\r\n      return !(\r\n          planType != null && \r\n          quote != null && \r\n          start != null && \r\n          end != null) \r\n  }\r\n\r\n  const updateSearch = (item: any) => {\r\n      console.log(item)\r\n      setQuote(item)\r\n  }\r\n\r\n  const updateDate = (key: string, value : Date) => {\r\n    if(key == 'start'){\r\n        setStart(value)\r\n    }else if(key == 'end'){\r\n        setEnd(value)\r\n    }\r\n  }   \r\n\r\n  const onClose = () => {\r\n      props.onClose?.();\r\n  }\r\n\r\n        return props.open ? (\r\n            <Layer \r\n                onClickOutside={onClose}\r\n                onEsc={onClose}>\r\n                <Box className={props.className} pad=\"small\">\r\n              <Heading margin={{vertical: 'xsmall'}} level='3'>{mode == 'edit' ? 'Edit' : 'Make'} Plans</Heading>\r\n\r\n                <Box \r\n                    width=\"medium\"\r\n                    style={{\r\n                        overflowY: 'visible', \r\n                        display: 'flex', \r\n                        flexDirection: 'column', \r\n                        paddingBottom: '24px'}}> \r\n                <Box style={{flex: 1, display: 'flex', flexDirection:'column'}}>\r\n                    <Box style={{display: 'flex',  marginBottom: '16px'}}>\r\n                      <SearchField \r\n                        options={quotes} \r\n                        onChange={updateSearch} \r\n                        value={quote || {}}/>\r\n                    </Box>\r\n                  </Box>\r\n                     {/* <DateRange \r\n                        start={start || new Date()}\r\n                        end={end || new Date()}\r\n                        onChange={updateDate}\r\n                      />\r\n                      */}\r\n                      <div style={{marginTop: 8, display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                      <Event style={{marginRight: 8}}/>\r\n                      <Select \r\n                        value={planType} \r\n                        options={[\r\n                            {color: '#3f51b5', label: 'Job Planning'}, \r\n                            {color: '#b5b13f', label: 'Quote Planning'}, \r\n                            {color: '#b53f49', label: \"Design Planning\"}]}\r\n                        onChange={(e) => setPlanType(`${e.target.value}`)}>\r\n                            {({datum})=> (\r\n                                <Box>\r\n                                    <ColorDot color={datum.color} size={12}/>\r\n                                    <Text>{datum.label}</Text>\r\n                                </Box>\r\n                            )}\r\n                        </Select>\r\n                    </div>\r\n                </Box>\r\n                <Box direction=\"row\" justify=\"end\">\r\n                    {(mode == 'edit') ? (\r\n                        <Button  onClick={deleteQuote} label=\"Delete\" />\r\n                    ) : null}\r\n                    <Button  onClick={onClose} label=\"Close\" />\r\n                    <Button primary disabled={filledIn()} onClick={createQuote} label={(mode == 'edit') ? \"Save\" : \"Create\" } />\r\n                </Box>\r\n                </Box>\r\n            </Layer>\r\n        ) : null;\r\n    \r\n}\r\n\r\nexport const PlanningModal = styled(BasePlanningModal)`\r\n\r\n.MuiSelect-select{\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 8px;\r\n}\r\n`","import { Box } from 'grommet';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport {Calendar} from \"react-multi-date-picker\";\r\n\r\nimport moment from 'moment';\r\n\r\n\r\nexport interface CloneTabProps {\r\n    selected?: Date[]; //Already selected\r\n    onSelect?: (dates: Date[]) => void; //Select state is items changed\r\n\r\n    className?: string;\r\n}\r\n\r\nconst BaseCloneTab : React.FC<CloneTabProps> = ({\r\n    selected = [],\r\n    onSelect,\r\n    className\r\n}) => {\r\n    const [ cloneSelected, setCloneSelected ] = useState<Date[]>([]);\r\n\r\n    useEffect(()=> {\r\n        if(selected){\r\n            setCloneSelected(selected)\r\n        }\r\n    }, [selected])\r\n\r\n    const onCloneSelect = (select: Date[]) => {\r\n        \r\n/*\r\n        select = moment(select).add(2, 'hours').toDate(); \r\n\r\n        var selectedTimes = cloneSelected?.slice();\r\n        var exists = false;\r\n\r\n        for(var i = 0; i < selectedTimes.length; i++){\r\n          if(select.getTime() == selectedTimes[i].getTime()){\r\n            selectedTimes.splice(i, 1);\r\n            exists = true;\r\n          }\r\n        }\r\n\r\n        if(!exists){\r\n            selectedTimes.push(select);\r\n        }\r\n        setCloneSelected(selectedTimes)\r\n        */\r\n        onSelect?.(select)\r\n\r\n        console.log(select)\r\n    }\r\n\r\n    return (\r\n    <Box \r\n        direction=\"column\"\r\n        className={className}>\r\n        <Calendar\r\n            className=\"calendar-contained\"\r\n            multiple\r\n            value={selected.concat(cloneSelected)}\r\n            onChange={(dates) => {\r\n                if(Array.isArray(dates)){\r\n                    let d = dates.map((x) => x.valueOf())\r\n                     onCloneSelect(Array.from(new Set(d)).map((x) => new Date(x)))\r\n                }\r\n            }}\r\n        />\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport const CloneTab = styled(BaseCloneTab)`\r\n    .calendar-contained{\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n    }\r\n\r\n    .calendar-contained .rmdp-calendar{\r\n        flex: 1;\r\n    }\r\n\r\n    .calendar-contained .rmdp-calendar > div:last-child{\r\n        flex: 1;\r\n        display: flex;\r\n    }\r\n\r\n    .calendar-contained .rmdp-calendar .rmdp-day-picker{\r\n        flex: 1;\r\n        flex-direction: column;\r\n        display: flex;\r\n        padding-left: 8px;\r\n        padding-right: 8px;\r\n        border: none;\r\n    }\r\n\r\n    .calendar-contained .rmdp-calendar .rmdp-day-picker > div{\r\n        flex: 1;\r\n    }\r\n\r\n    .calendar-contained .rmdp-top-class {\r\n        flex: 1;\r\n    }\r\n\r\n    .calendar-contained .rmdp-week-day {\r\n        font-size: 18px;\r\n    }\r\n\r\n    .calendar-contained .rmdp-day{\r\n        height: 45px;\r\n        width: 45px;\r\n\r\n        & > span{\r\n            font-size: 18px;\r\n\r\n        }\r\n    }\r\n`\r\n/*\r\n  showHeader={false}\r\n          Component={MultipleDateCalendar}\r\n          interpolateSection={defaultMultipleDateInterpolation}\r\n          displayOptions={{\r\n            showOverlay: false\r\n          }}\r\n          selected={selected.concat(cloneSelected)}\r\n          onSelect={onCloneSelect}\r\n*/","import React, {\r\n  Component, useState\r\n} from 'react';\r\n\r\nimport { Button, List, Text, CheckBox, Box } from 'grommet'\r\nimport { Next, Previous } from 'grommet-icons'\r\nimport { useMemo } from 'react';\r\n\r\nexport interface TransferListProps {\r\n  onAdd?: any;\r\n  onRemove?: any;\r\n\r\n  assignedKey: any;\r\n  assignedList: any[][];\r\n\r\n  labelKey?: string;\r\n\r\n  options: any;\r\n  selected: any[];\r\n}\r\n\r\n// import './index.css';\r\nexport const TransferList : React.FC<TransferListProps> = (props) => {  \r\n  const [ selectedLeft, setLeft ] = useState<any[]>([])\r\n  const [ selectedRight, setRight ] = useState<any[]>([])\r\n\r\n\r\n\r\n  const _addToDeselection = (item: any) => {\r\n    let selected = selectedRight.slice();\r\n    if(!selected.includes(item)){\r\n      selected.push(item)\r\n    }else{\r\n      var ix = selected.indexOf(item);\r\n      selected.splice(ix, 1);\r\n    }\r\n    setRight(selected)\r\n  }\r\n\r\n  const _addToSelection = (item: any) => {\r\n    let selected = selectedLeft.slice();\r\n    if(!selected.includes(item)){\r\n      selected.push(item)\r\n    }else{\r\n      var ix = selected.indexOf(item);\r\n      selected.splice(ix, 1);\r\n    }\r\n    setLeft(selected)\r\n  } \r\n\r\n  const checkAssigned = (item: any) => { \r\n    var num = 0;\r\n\r\n    props.assignedList.forEach((x) => {\r\n      x.forEach((y) => {\r\n        if(y[props.assignedKey] == item[props.assignedKey])\r\n          num ++;\r\n      });\r\n    });\r\n\r\n    if(num > 0){\r\n      return (\r\n      <Box>\r\n        <div className=\"number-badge\">\r\n          {num}\r\n        </div>\r\n      </Box>\r\n      );\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const _renderOptions = () => {\r\n    return not(props.options, props.selected).map((x, ix) => [(\r\n      <Box\r\n        direction=\"row\"\r\n        key={'options' + ix}\r\n        onClick={() => _addToSelection(x)}\r\n        >\r\n        <CheckBox \r\n          checked={selectedLeft.includes(x)}\r\n          tabIndex={-1}\r\n           />\r\n        <Text>\r\n          {x[props.labelKey || '']}\r\n        </Text>\r\n        {(props.assignedList) ? checkAssigned(x) : null}\r\n      </Box>\r\n    ), (<Box />)])\r\n  }\r\n\r\n  const _renderSelection = () => {\r\n    return props.selected.map((x, ix) => (\r\n      <Box\r\n        direction=\"row\"\r\n        key={'selection' + ix}\r\n        onClick={() => _addToDeselection(x)}>\r\n        <CheckBox\r\n          checked={selectedRight.includes(x)}\r\n          tabIndex={-1}\r\n           />\r\n        <Text>{x[props.labelKey || '']}</Text>\r\n      </Box>\r\n    ))\r\n  }\r\n  \r\n\r\n  const _addToOutput = () => {\r\n    props.onAdd?.(selectedLeft);\r\n    setLeft([])\r\n  }\r\n\r\n  const _addToInput = () => {\r\n    props.onRemove?.(selectedRight);\r\n    setRight([])\r\n  }\r\n\r\n  const not = (a: any[], b: any[]) => {\r\n    return a.slice().filter(value => {\r\n      return b.indexOf(value.id) === -1\r\n    });\r\n  }\r\n\r\n\r\n    return (\r\n      <Box \r\n        direction=\"row\">\r\n        <Box flex overflow=\"scroll\">\r\n          <List\r\n            onClickItem={({item}: any) => _addToSelection(item.id)}\r\n            data={not(props.options, props.selected)}\r\n            primaryKey=\"name\"\r\n            >\r\n            {(item: any) => (\r\n              <Box direction=\"row\" align=\"center\">\r\n                <CheckBox checked={selectedLeft.indexOf(item.id) > -1} onChange={(e) => _addToSelection(item.id)} />\r\n                <Text margin={{left: 'small'}}>{item.name}</Text>\r\n              </Box>\r\n            )}\r\n          </List>\r\n        </Box>\r\n        <Box \r\n          justify=\"center\"\r\n          direction=\"column\">\r\n          <Button \r\n            icon={<Next />}\r\n            disabled={selectedLeft.length <= 0} \r\n            size=\"small\"\r\n            onClick={_addToOutput} />\r\n          <Button \r\n            icon={<Previous />}\r\n            disabled={selectedRight.length <= 0} \r\n            size=\"small\"\r\n            onClick={_addToInput} />\r\n        </Box>\r\n        <Box flex overflow=\"scroll\">\r\n          <List\r\n            primaryKey=\"name\"\r\n            onClickItem={({item}: any) => _addToDeselection(item.id)}\r\n            data={props.selected.map((x) => ({\r\n              id: x,\r\n              ...props.options.find((a: any) => a.id == x)\r\n            }))}>\r\n            {(item: any) => (\r\n              <Box direction=\"row\" align=\"center\">\r\n                <CheckBox checked={selectedRight.indexOf(item.id) > -1} onChange={(e) => _addToDeselection(item.id)}/>\r\n                <Text margin={{left: 'small'}}>{item.name}</Text>\r\n              </Box>\r\n            )}\r\n          </List>\r\n        </Box>\r\n      </Box>  \r\n    );\r\n  \r\n}\r\n","import { Box } from 'grommet';\r\nimport React, {\r\n  Component\r\n} from 'react';\r\n\r\nimport {TransferList} from '../../../transfer-list';\r\n\r\nexport default class PlantTab extends Component<any, any> {\r\n\r\n\r\n  not(a: any[], b: any[]){\r\n    return a.filter(value => b.indexOf(value) === -1);\r\n  }\r\n  \r\n  onAdd(items: any[]){\r\n    let selected = this.props.selected;\r\n    this.props.onChange(selected.concat(items));\r\n  }\r\n\r\n  onRemove(items: any[]){\r\n    let selected = this.props.selected;\r\n    this.props.onChange(this.not(selected, items));\r\n  }\r\n\r\n  render(){\r\n    const { inputData, selected } = this.props;\r\n    return (\r\n      <Box height=\"100%\">\r\n        <TransferList\r\n          assignedKey={inputData.assigned.key}\r\n          assignedList={inputData.assigned.data}\r\n          labelKey={inputData.labelKey}\r\n          options={inputData.data.filter((x: any) => x.name).sort((a: any, b: any) => {\r\n             return a.name.localeCompare(b.name, 'en', { numeric: true }) \r\n          })}\r\n          selected={selected} \r\n          onAdd={this.onAdd.bind(this)}\r\n          onRemove={this.onRemove.bind(this)}/>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport { Box } from 'grommet'\r\nimport {TransferList} from '../../../transfer-list';\r\n\r\nexport default class StaffTab extends Component<any, any> {\r\n\r\n  not(a: any[], b: any[]){\r\n    return a.filter(value => b.indexOf(value) === -1);\r\n  }\r\n  \r\n  onAdd(items: any[]){\r\n    let selected = this.props.selected.slice();\r\n    this.props.onChange(selected.concat(items));\r\n  }\r\n\r\n  onRemove(items: any[]){\r\n    let selected = this.props.selected.slice();\r\n    this.props.onChange(this.not(selected, items));\r\n  }\r\n\r\n  render(){\r\n    const { inputData, selected } = this.props;\r\n\r\n    return (\r\n      <Box height=\"100%\">\r\n        <TransferList\r\n          assignedKey={inputData.assigned.key}\r\n          assignedList={inputData.assigned.data}\r\n          labelKey={inputData.labelKey}\r\n          options={inputData.data}\r\n          selected={selected}\r\n          onAdd={this.onAdd.bind(this)}\r\n          onRemove={this.onRemove.bind(this)} />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { List, Box, Button, TextInput } from 'grommet';\r\n\r\nimport { Close, Add } from 'grommet-icons'\r\n\r\nexport interface NoteTabProps {\r\n  data?: any[];\r\n  onChange?: Function;\r\n}\r\n\r\nconst NoteTab: React.FC<NoteTabProps> = (props) => {\r\n\r\n  const _onChange = (ix: number, val: string) => {\r\n    let data = props.data?.slice() || []\r\n    data[ix] = val;\r\n    props.onChange?.(data);\r\n  }\r\n\r\n\r\n  const _insertEmpty = () => {\r\n    let data = props.data?.slice() || [];\r\n    data.push('')\r\n    props.onChange?.(data)\r\n  }\r\n\r\n  const _removeItem = (index: number) => {\r\n    let data = props.data?.slice() || [];\r\n    data.splice(index, 1);\r\n    props.onChange?.(data);\r\n  }\r\n\r\n  return (\r\n    <Box overflow={\"scroll\"} height={{min: '50vh'}} className=\"note-tab\">\r\n      <List\r\n        pad={{vertical: 'xsmall'}}\r\n        data={props.data}>\r\n        {(item: any, index: number) => (\r\n          <Box direction=\"row\" align=\"center\">\r\n            <TextInput\r\n              autoFocus\r\n              focusIndicator={false}\r\n              value={item}\r\n              placeholder=\"Enter note here...\"\r\n              onKeyDown={(e) => { if (e.key == 'Enter') { _insertEmpty() } }}\r\n              onChange={(e) => _onChange(index, e.target.value)}\r\n            />\r\n            <Button hoverIndicator icon={<Close />} onClick={() => _removeItem(index)} />\r\n          </Box>\r\n        )}\r\n      </List>\r\n      <Button onClick={_insertEmpty}\r\n        icon={<Add />} label=\"Add Note\" />\r\n    </Box>\r\n  );\r\n\r\n}\r\n\r\nexport default NoteTab;","import { Anchor, Box, Button, Select, Tab, Tabs } from 'grommet';\r\nimport { Logout } from 'grommet-icons';\r\nimport React, { useMemo, useState } from 'react';\r\nimport PlantTab from './plant-tab';\r\nimport StaffTab from './staff-tab';\r\nimport NoteTab from './note-tab';\r\nimport { ISchedule } from '..';\r\nimport _ from 'lodash';\r\n\r\nexport interface AddTabProps {\r\n    item?: ISchedule;\r\n    onChange?: (item: any) => void;\r\n    \r\n    scheduledJobs?: any[];\r\n    todaysSchedule?: any[];\r\n\r\n    jobs?: any[];\r\n    plants?: any;\r\n    people?: any;\r\n}\r\n\r\nexport const AddTab : React.FC<AddTabProps> = ({\r\n    jobs = [],\r\n    plants = [],\r\n    people = [],\r\n    item,\r\n    onChange,\r\n    scheduledJobs,\r\n    todaysSchedule,\r\n\r\n}) => {\r\n    const [ jobSearch, setJobSearch ] = useState<string>('')\r\n    \r\n    const [selectedTab, setSelectedTab] = useState<string>('People')\r\n\r\n    const tabs = [\r\n        {\r\n            label: \"People\",\r\n            component: ( \r\n            <StaffTab\r\n              onChange={(e: any) => onChange?.({...item, people: e})}\r\n              inputData={{\r\n                assigned: {key: 'id', data: scheduledJobs?.map((x: any) => x.people)},\r\n                labelKey: 'name',\r\n                data: people\r\n              }}\r\n              selected={item?.people || []}/>\r\n            )\r\n        },\r\n        {\r\n            label: \"Equipment\",\r\n            component: (\r\n                <PlantTab\r\n                  onChange={(e: any) => onChange?.({...item, equipment: e})}\r\n                  inputData={{\r\n                    assigned: {key: 'id', data: todaysSchedule?.map((x) => x.equipment)},\r\n                    labelKey: 'name',\r\n                    data: plants || []\r\n                  }}\r\n                  selected={item?.equipment || []}/>\r\n            )\r\n        },\r\n        {\r\n            label: \"Notes\",\r\n            component: (\r\n                <NoteTab \r\n                  data={item?.notes || []}\r\n                  onChange={(e: any) => onChange?.({...item, notes: e})}/>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const memoJobs = useMemo(() => {\r\n        let j = _.map(jobs, _.partialRight(_.pick, ['id', 'name']))\r\n        return j.map((x: any) => ({...x, id: `${x.id}`}))\r\n    }, [JSON.stringify(jobs)])\r\n\r\n    return (\r\n        <Box flex direction=\"column\">\r\n         <Box\r\n          align=\"center\"\r\n          direction=\"row\">\r\n  \r\n        <Box flex>\r\n          <Select\r\n            onSearch={(search) => setJobSearch(search)}\r\n            placeholder=\"Select Job...\"\r\n            labelKey={(opt) => `${opt.id} - ${opt.name}`.substring(0, 42 + 7)}\r\n            options={memoJobs.filter((a: any) => `${a.id} - ${a.name}`.indexOf(jobSearch) > -1)}\r\n            value={item?.project.id || item?.project}\r\n            valueKey={{key: 'id', reduce: true}}\r\n            onChange={({option}) => {\r\n                console.log(option)\r\n                onChange?.({...item, project: option.id})\r\n            }} />\r\n        </Box>\r\n        {(item && item?.project) && \r\n        <Box\r\n          direction=\"column\"\r\n          justify='center'>\r\n          <Button  \r\n            margin={\"none\"}\r\n            hoverIndicator={true}\r\n            a11yTitle=\"Go to Job\"\r\n            icon={<Logout />}\r\n            href={`/dashboard/flow/projects/${item?.project.id}`}/>\r\n        </Box>}\r\n        </Box>\r\n\r\n          <Box height={{max: '50vh'}}>\r\n            <Tabs \r\n              alignControls=\"start\">\r\n              {tabs.map((tab) => (\r\n                <Tab title={tab.label}>\r\n                  {tab.component}\r\n                </Tab>\r\n              ))} \r\n            </Tabs>\r\n          </Box>\r\n        </Box>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport {Avatar, Text} from 'grommet';\r\nimport { invertColor } from 'shared/hexhive-utils/src/color';\r\n\r\nexport interface AvatarListProps {\r\n  users?: Array<{name?: string, color?: string}>;\r\n\r\n  size?: number\r\n}\r\n\r\nexport const AvatarList : React.FC<AvatarListProps> =  ({\r\n  users = [],\r\n  size = 32\r\n}) => {\r\n  return (\r\n    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n        {users.map((x, ix) => {\r\n          let style : any = {\r\n            width: size,\r\n            height: size,\r\n            fontSize: size / 2,\r\n            backgroundColor: x.color\r\n          }\r\n\r\n          if(ix > 0){\r\n            style['transform'] = 'translateX(-' +(size /2) * ix +'px)'\r\n          }\r\n\r\n          return(\r\n            <Avatar style={style}>\r\n              <Text size={`${size * (5/8)}px`} color={invertColor(x.color || '')}>\r\n                {x.name?.split(' ').map((x) => x[0]).join('')}\r\n              </Text>\r\n            </Avatar>\r\n          )\r\n        })\r\n        }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {AvatarList} from '../avatar-list';\r\n\r\nimport { stringToColor } from '@hexhive/utils'\r\n\r\nexport interface ManagerListProps {\r\n    managers?: any[];\r\n    users?: any[]\r\n}\r\n\r\nexport const ManagerList : React.FC<ManagerListProps> = ({\r\n    managers = [],\r\n    users = []\r\n}) => {\r\n\r\n  console.log(managers, users)\r\n\r\n    const avatars = managers.map((x, ix) => {\r\n          let user = users.find((a) => a.id == x) || {}\r\n            return {\r\n                name: user.name,\r\n                color: stringToColor(user.id || '')\r\n            }\r\n          \r\n        })\r\n    \r\n    return (<AvatarList users={avatars} />);\r\n    \r\n}\r\n\r\n\r\n/*\r\n  let tempManagers = this.state.temporaryManagers.filter((a) =>\r\n          {\r\n            let filterOutRemoved = !(this.state.temporaryRemovedManagers.indexOf(a) > -1)\r\n            let filtersOutManagers = !(this.props.jobData.managers.indexOf(a) > 1);\r\n            return filterOutManagers && filterOutRemoved \r\n          })\r\n        let projectManagers = ([this.props.jobData.owner]).concat(tempManagers.concat(managers))\r\n    \r\n    \r\n*/","import { IUser } from \"@hexhive/types\"\r\nimport { ISchedule } from \"..\"\r\n\r\nexport const getManagers = (owner?: string, managers?: Array<string| undefined | null>, add?: string[], remove?: string[]) => {\r\n    console.log(\"managers\", managers, remove, add)\r\n      let temp = add?.filter((a) => {\r\n          let _removed = !((remove || []).indexOf(a) > -1)\r\n          let _manager = !((managers || []).indexOf(a) > -1)\r\n          return _manager && _removed\r\n      })\r\n      console.log(temp)\r\n  \r\n      let output = ([owner]).concat(managers?.map((a) => `${a}`) || [])\r\n      if(temp){\r\n          output = output.concat(temp)\r\n      }\r\n      return output.filter((a) => a && !((remove || []).indexOf(a) > -1))\r\n  }\r\n\r\n  export const isJoined = (me: IUser, jobData: ISchedule | null, newList: string[], removeList: string[]) => {\r\n      if(!jobData) return;\r\n    let isManager = jobData && jobData.managers && jobData.managers.indexOf(me.id) > -1;\r\n    let isTemp = newList.indexOf(me.id) > -1\r\n    let isOwner = jobData && jobData.owner?.id == me.id\r\n    let notRemoved = removeList.indexOf(me?.id) < 0; \r\n    \r\n    return (isManager || isTemp || isOwner) && notRemoved\r\n  }","import React, { Component, useEffect, useMemo, useState } from 'react';\r\n\r\nimport {AvatarList} from '../../avatar-list'; \r\n\r\nimport { CloneTab } from './tabs/clone-tab'\r\nimport { AddTab } from './tabs/add-tab'\r\n\r\nimport { Layer, Button, Anchor, Box, Heading } from 'grommet';\r\nimport { ManagerList } from '../../manager-list';\r\nimport { getManagers, isJoined } from './utils';\r\n\r\nimport { stat } from 'fs';\r\n\r\n// import './index.css';\r\n// import { cloneSchedule, getScheduledDates, isJoined, joinCard, leaveCard, removeSchedule, saveSchedule } from './utils';\r\n// import { getManagers } from './utils';\r\n\r\n// import { ManagerList } from '../../manager-list';\r\n\r\nvar moment = require('moment');\r\nvar closeCallback;\r\n\r\n\r\nexport interface ScheduleModalProps {\r\n\r\n  timestamp?: Date;\r\n\r\n  projects: any[];\r\n  people: any[];\r\n  equipment: any[];\r\n\r\n  scheduledJobs?: any[];\r\n\r\n  open: boolean;\r\n  onClose?: () => void; \r\n\r\n  user?: any;\r\n  users?: any;\r\n\r\n  item?: ISchedule\r\n\r\n  onSaveItem: (item: any, ts: Date) => void;\r\n  onCloneItem: (item: any, currentDates: Date[], cloneDates: Date[]) => void;\r\n  onCreateItem: (item: any, ts: Date) => void;\r\n}\r\n\r\nexport interface ISchedule {\r\n  id?: string;\r\n  people?: Array<string | undefined | null>\r\n  equipment?: Array<string | undefined | null>\r\n\r\n  project: {name: string, id: string};\r\n  notes: Array<string | undefined | null>,\r\n  managers?: Array<string | undefined | null>;\r\n  owner?: {id: string, name: string};\r\n  date?: Date;\r\n}\r\n\r\nconst ScheduleModal : React.FC<ScheduleModalProps> = (props) => {\r\n\r\n  const [ mode, setMode ]= useState<string>('create')\r\n\r\n  const stateMode : \"Clone\" | \"Edit\" | \"Create\" = useMemo(() => {\r\n    return (mode === 'clone') ? 'Clone': (mode === 'edit') ? 'Edit' :  'Create';\r\n  }, [mode])\r\n\r\n  const [ dialogOpen, setDialogOpen ] = useState<boolean>(false)\r\n\r\n  const [ tab, setTab ] = useState<number>(0)\r\n  const [ date, setDate ] = useState<Date>(new Date())\r\n  \r\n  const [ timestamp, setTimestamp ] = useState<Date>(props.timestamp || new Date())\r\n\r\n  const [item, setItem] = useState<ISchedule>()\r\n\r\n  const [ managerList, setManagerList ] = useState<{\r\n    add?: string[];\r\n    remove?: string[];\r\n  }>({})\r\n\r\n  const [ existingDates, setExistingDates ] = useState<Date[]>([])\r\n  const [ cloneSelection, setCloneSelection ] = useState<Date[]>([])\r\n\r\n  useEffect(() => {\r\n    if(props.timestamp){\r\n      setTimestamp(props.timestamp)\r\n    }\r\n  }, [props.timestamp])\r\n\r\n  useEffect(() => {\r\n    if(props.item){\r\n      setItem(props.item)\r\n    }\r\n  }, [props.item])\r\n\r\n  useEffect(() => {\r\n    console.log(props.item)\r\n    if(props.item && props.item.id){\r\n      setMode('edit')\r\n    }\r\n    if(props.item && props.item.id && item?.id !== props.item?.id){\r\n      console.log(\"SCHEDULe\")\r\n      // getScheduledDates(props.item.job.id || '').then((dates) => {\r\n      //   console.log(\"DATES\", dates)\r\n      //   setExistingDates(dates)\r\n      //   setCloneSelection(dates)\r\n      // })\r\n    }\r\n  }, [props.item?.id])\r\n  \r\n /* constructor(props){ \r\n    super(props);\r\n    closeCallback = props.closeCallback;\r\n    /*One of the props I pass in is an array of the already scheduled jobs\r\n     * for the day called scheduledJobs\r\n    this.state = {\r\n      activeTab: 0,\r\n      mode: 'create',\r\n      date: new Date(),\r\n      jobs : [],\r\n      jobEmployees : [],\r\n      jobPlants : [],\r\n      notes : [],\r\n      jobId : null,\r\n      todaysSchedule : [],\r\n      ...props,\r\n      startDateRange : moment(props.timestamp).toISOString(),\r\n      endDateRange : moment(props.timestamp).toISOString(),\r\n      cloneSelected: [],\r\n      currentItems: [],\r\n      temporaryManagers: [],\r\n      temporaryRemovedManagers: []\r\n    };\r\n  }*/\r\n\r\n/*\r\n  componentDidMount(){\r\n       utils.staff.getAll().then((res) => {\r\n      this.setState({ employees: res });\r\n    });*/\r\n    /*    utils.plant.getAll().then((res) => {\r\n      this.setState({ plants: res });\r\n    });\r\n\r\n*/\r\n\r\n\r\n  /*\r\n\r\n  componentWillMount(){\r\n    utils.job.fetchJobs(this.state.timestamp, 7).then((res) => {\r\n      for(var i = 0; i < res.length; i++){\r\n        this.state.scheduledJobs.forEach((x) => {\r\n          if(typeof res[i] != 'undefined' && x.job === res[i].JobID){\r\n            res.splice(i, 1);\r\n          }\r\n        });\r\n      }\r\n      this.setState({ \r\n        jobs: res \r\n      });\r\n    });\r\n  }*/\r\n\r\n /* componentWillReceiveProps(newProps){\r\n    if(this.props !== newProps){\r\n      this.setState({\r\n        ...newProps,\r\n        endDateRange : moment(newProps.timestamp).toISOString()\r\n      });\r\n    }\r\n\r\n\r\n    if (newProps.jobData && newProps.jobData !== {}){\r\n      let j = newProps.jobData;\r\n      this.setState({\r\n        _id : j._id,\r\n      temporaryManagers: [],\r\n      temporaryRemovedManagers: [],\r\n        itemId: j.id,\r\n        jobId: (j.job && j.job.id) ? j.job.id: {},\r\n        jobEmployees: j.employees,\r\n        jobPlants: j.plant,\r\n        notes: j.notes,\r\n        timestamp: j.date,\r\n        mode: 'edit'\r\n      });\r\n      if(newProps.jobData.job){\r\n        utils.job.getDates(newProps.jobData.job.id).then((dates) => {\r\n          var ObjDates = [];\r\n          var Obj = [];\r\n          dates.forEach((x) =>{\r\n            ObjDates.push(new Date(x));\r\n            Obj.push(new Date(x));\r\n          });\r\n          this.setState({\r\n            cloneSelected : ObjDates,\r\n            currentItems : Obj\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      this.componentWillMount()\r\n    }\r\n  }\r\n*/\r\n\r\n\r\n\r\n  const renderClone = (stateMode : string) => {\r\n    if(stateMode === 'Edit'){\r\n      return (\t\r\n        <Button label=\"Clone\" onClick = {()=> {setMode('clone')}} />\r\n      ); \r\n    }\r\n    else if(stateMode === 'Clone'){\r\n      return (\r\n        <Button label=\"Edit\" onClick = {()=> {setMode('edit')}} />\r\n      );\r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const renderRemove = (stateMode: string) => {\r\n    if(stateMode === 'Edit'){\r\n      return (\r\n        <Button color=\"secondary\" onClick={() => {\r\n          if(item?.id){\r\n            //  removeSchedule(item?.id)\r\n          }\r\n          onClose()\r\n        }}>Delete</Button>\r\n      );\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const onSave = async () => {\r\n    console.log(item, mode)\r\n    if(item){\r\n    \r\n      if(mode === 'clone'){\r\n        props.onCloneItem(item, existingDates, cloneSelection)\r\n        // await cloneSchedule(item, existingDates, cloneSelection)\r\n      }else{\r\n        if(stateMode == 'Create'){\r\n          props.onCreateItem(item, timestamp)\r\n        }else{\r\n          props.onSaveItem(item, timestamp)\r\n        }\r\n        // await saveSchedule(stateMode, item, timestamp)\r\n      }\r\n      onClose()\r\n    }\r\n  }\r\n\r\n \r\n\r\n  const renderMemberButton = () => {\r\n    const toggle = async () => {\r\n      if(joined && item?.id){\r\n        // const {add, remove } = await leaveCard(item?.id, props.user, managerList.add, managerList.remove)\r\n        // setManagerList({\r\n        //   add,\r\n        //   remove\r\n        // })\r\n      }else if(!joined && item?.id){\r\n        // const { add, remove } = await joinCard(item?.id, props.user, managerList.add, managerList.remove)\r\n        // setManagerList({\r\n        //   add,\r\n        //   remove\r\n        // })\r\n      }\r\n    }\r\n    return (\r\n      <Button hoverIndicator style={{padding: '4px 8px 4px 8px'}} margin={{right: 'small'}} plain onClick={toggle} label={ joined ? \"Leave\" : \"Join\"} />\r\n    );\r\n  }\r\n\r\n  const onClose = () => {    \r\n    props.onClose?.()\r\n\r\n    setItem(undefined)\r\n    setExistingDates([])\r\n    setCloneSelection([])\r\n    setManagerList({})\r\n    setMode('create')\r\n  }\r\n\r\n  const joined = isJoined({id: props.user._id}, item || null, managerList?.add || [], managerList?.remove || [])\r\n\r\n  console.log(item?.owner, props.user._id)\r\n  \r\n  \r\n    return props.open ? (\r\n      <Layer \r\n        style={{zIndex: 99, boxShadow: '5px 5px 15px -5px #323a3c', overflow: 'hidden'}}\r\n        onClickOutside={onClose}\r\n        onEsc={onClose}> \r\n      <Box \r\n        round=\"xxsmall\"\r\n        overflow=\"hidden\"\r\n        background={\"neutral-1\"}\r\n        direction=\"column\"\r\n        width=\"large\">\r\n        \r\n        <Box\r\n          background=\"accent-2\"\r\n          justify=\"between\"\r\n          align=\"center\"\r\n          pad={{top: \"small\", bottom: 'small', horizontal: 'small'}}\r\n          direction=\"row\">\r\n          <Box\r\n            direction=\"row\"\r\n            align=\"center\">\r\n          <Heading level='4' margin='none'>\r\n              {stateMode} Schedule Item for {moment(timestamp).format('DD/MM/YYYY')}\r\n          </Heading>\r\n          \r\n          </Box>\r\n          <Box direction=\"row\" align=\"center\">\r\n            {stateMode == 'Edit' && item?.owner?.id !== props.user?._id && renderMemberButton() }\r\n\r\n            <ManagerList \r\n              users={props.users}\r\n              managers={getManagers(item?.owner?.id || props.user?._id || '', item?.managers || [], managerList.add, managerList.remove)}/>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box \r\n  \r\n          pad=\"small\" \r\n          height={{max: '60vh'}} margin={{bottom: 'small'}}>\r\n            { !(stateMode === 'Edit' || stateMode === 'Create') ? (\r\n                <CloneTab\r\n                   selected={cloneSelection}\r\n                   onSelect={(dates) => setCloneSelection(dates)} /> \r\n            ) : (\r\n                <AddTab\r\n                  item={item}\r\n                  onChange={(_item) => {\r\n                    console.log({...item, ..._item})\r\n                    setItem({...item, ..._item})\r\n                  }}\r\n                  jobs={props.projects}\r\n                  plants={props.equipment}\r\n                  people={props.people} /> \r\n            )}\r\n        </Box>\r\n        <Box gap=\"xsmall\" pad={'xsmall'} border={{side: 'top', color: 'light-3'}} direction=\"row\" justify=\"end\">\r\n          {joined && renderRemove(stateMode)}\r\n          {joined && renderClone(stateMode)}\r\n          <Button label=\"Close\" onClick = {onClose} />\r\n            {(joined || stateMode === \"Create\") && (<Button primary onClick={onSave} label= {\r\n              (stateMode === 'Edit' || stateMode === 'Clone') ? ((stateMode == 'Clone') ? \"Save Cloned Items\" : \"Save Changes\") : \"Create\"\r\n            } />)}\r\n        </Box>\r\n        </Box>   \r\n      </Layer>\r\n    ) : null;\r\n  \r\n\r\n\r\n}\r\n\r\nexport default ScheduleModal\r\n// export default connect((state : StoreState) => {\r\n//   console.log(state.schedule)\r\n// //  jobs: (state.schedule.jobs || {list: []}).list,\r\n\r\n// return {\r\n//   user: state.auth.user,\r\n//   users: state.schedule.users.list,\r\n//   people: state.schedule.employees.list,\r\n//   plants: state.schedule.plant.list\r\n// }\r\n// })(ScheduleModal);\r\n","import React, {\r\n  Component\r\n} from 'react';\r\n\r\nimport { Box, Button, Text } from 'grommet'\r\n\r\nimport {\r\n  Previous as ChevronLeft, Next as ChevronRight\r\n} from 'grommet-icons'\r\n\r\nimport moment from 'moment';\r\n// import './index.css';\r\n\r\nexport class DateSelector extends Component<any, any> {\r\n  \r\n  change(direction: number){\r\n    const { value, onChange, stepSize } = this.props;\r\n    var m = moment(value).add(direction, stepSize || 'months');\r\n    onChange(m);\r\n  }\r\n\r\n  render(){\r\n    const { value, displayFormat } = this.props;\r\n    return (\r\n      <Box direction=\"row\" align=\"center\" className=\"month-picker\">\r\n        <Button icon={<ChevronLeft />} onClick={this.change.bind(this, -1)} />\r\n   \r\n        <Text className=\"month-picker__display\">{moment(value).format(displayFormat)}</Text>\r\n        <Button icon={<ChevronRight />} onClick={this.change.bind(this, 1)} />\r\n\r\n      </Box>\r\n    );  \r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nfunction SvgFileHex(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 85.48 75.17\"\r\n      width=\"1em\"\r\n      height=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M84.87 35.22l-19.23-33a4.53 4.53 0 00-3.9-2.24H23.51a4.52 4.52 0 00-3.91 2.26L.6 35.17a4.51 4.51 0 000 4.48l18.73 33.17a4.52 4.52 0 003.93 2.29h38.65a4.49 4.49 0 003.91-2.26l19.07-33.17a4.53 4.53 0 00-.02-4.46zm-62.1-14.94c0-1.47.51-2.67 2-2.67h3.95a2.38 2.38 0 012 1.09 2.66 2.66 0 002.22 1.2h27.77c1.51 0 2.05 1.29 2.05 2.79v2.37a5.29 5.29 0 00-1.55-.24H24.32a5.29 5.29 0 00-1.55.24zM63.9 53.89a2.74 2.74 0 01-2.74 2.74H50.09v-9.78a2.13 2.13 0 10-2.14 0v9.78h-4.29v-17a2.12 2.12 0 10-3.2-1.82 2.1 2.1 0 001 1.82v17h-4.24v-9.78a2.13 2.13 0 10-3.2-1.83 2.14 2.14 0 001 1.83v9.78h-10.7a2.73 2.73 0 01-2.73-2.74v-24a2.73 2.73 0 012.73-2.73h36.84a2.74 2.74 0 012.74 2.73z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgFileHex;\r\n","import React from 'react';\r\n\r\nexport interface IScheduleViewContext {\r\n    projects?: any[];\r\n    people?: any[];\r\n    equipment?: any[];\r\n}\r\n\r\nexport const ScheduleViewContext = React.createContext<IScheduleViewContext>({})","import { Box, Text } from 'grommet';\r\nimport React from 'react';\r\nimport { ISchedule } from '../../modals';\r\nimport {FileHex} from '../../../assets';\r\nimport { AvatarList } from '../../avatar-list';\r\nimport { stringToColor } from '@hexhive/utils';\r\nimport { useContext } from 'react';\r\nimport { ScheduleViewContext } from '../context';\r\n\r\ninterface ContentProps {\r\n    data: ISchedule;\r\n\r\n    users: any[];\r\n}\r\n\r\nexport const Content : React.FC<ContentProps> = ({data, users}) => {\r\n\r\n    const { people, equipment, projects } = useContext(ScheduleViewContext)\r\n\r\n    const staffNames = () => {\r\n        const names = (data?.people || []).map((x: any) => {\r\n          return people?.find((a) => a.id == x)\r\n        });\r\n        if(names?.length > 0){\r\n        return (\r\n           <Box direction=\"column\" className=\"staff-container\">\r\n              {names.map((item: any) => item && (\r\n                    <Text size='small'>{item.name}</Text>\r\n              ))}\r\n           </Box>);\r\n        }else{\r\n           return null;\r\n        } \r\n     }\r\n\r\n\r\n   const plantItems = () => {\r\n      const items = (data?.equipment || []).map((x: any) => {\r\n         return equipment?.find((a) => a.id == x);   \r\n  \r\n      });\r\n      \r\n      if(items.length > 0){\r\n      return (\r\n         <Box direction=\"column\" className=\"plant-container\">\r\n            <Text weight=\"bold\" size=\"small\" className=\"plant-container-header\">Plant required</Text>\r\n            {items.map((item: any) => (\r\n                  <Text size='small'>{item.name}</Text>\r\n            ))}\r\n         </Box>\r\n      );\r\n      }else{\r\n         return null;\r\n      }\r\n   }\r\n\r\n   const renderInfo = () => {\r\n    let content = [\r\n     <AvatarList size={24} users={([data?.owner?.id].concat(data?.managers?.map((x) => x || '') || [])).map((x) => {\r\n        if(users && users.length > 0){\r\n         let user = users.find((a: any) => a.id == x)\r\n         return {\r\n          color: stringToColor(user? user.id : x),\r\n           name: user? user.name : ''\r\n         }\r\n        }else{\r\n          return {\r\n            color: '',\r\n            name: ''\r\n          }\r\n        }\r\n       })} />\r\n     ]\r\n\r\n     let job = data?.project ? projects?.find((a) => a?.id == data?.project.id) : {files: []}\r\n \r\n     if(job?.files && job?.files.length > 0){\r\n        content.push(<FileHex height={25} width={25} />)\r\n     }\r\n     return content;\r\n }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\r\n            {staffNames()}\r\n            {plantItems()}\r\n\r\n            <Box\r\n                direction=\"row\"\r\n                align=\"center\"\r\n                justify=\"between\">\r\n                {renderInfo()}\r\n            </Box>\r\n        </div>\r\n    );\r\n}","import { Box, Text} from 'grommet';\r\nimport React from 'react'\r\nimport { ISchedule } from '../../modals';\r\n\r\ninterface FooterProps {\r\n    data?: ISchedule;\r\n}\r\n\r\nexport const Footer : React.FC<FooterProps> = ({data}) => {\r\n    return (data?.notes || []).length > 0 ?  (\r\n        <Box background={\"#F2726B\"}>\r\n            <Text color=\"white\" className=\"notes-indicator\">Notes: {data?.notes?.length}</Text>\r\n        </Box>\r\n    ) : null;\r\n}","import React from 'react';\r\nimport { invertColor, stringToColor } from '@hexhive/utils';\r\nimport { ISchedule } from '../../modals';\r\nimport { Box, Text, Button } from 'grommet';\r\nimport { Down as ArrowDown, Up as ArrowUp } from 'grommet-icons'\r\n\r\ninterface HeaderProps {\r\n    data: ISchedule\r\n    moveUp: () => void;\r\n    moveDown: () => void;\r\n}\r\n\r\nexport const Header : React.FC<HeaderProps> = ({data, moveUp, moveDown}) => {\r\n    let color = stringToColor(data?.owner?.name || '');\r\n    let arrowColor = invertColor(color); \r\n\r\n    return (\r\n        <Box \r\n            justify=\"center\"\r\n           direction=\"row\"\r\n           background={color}\r\n           style={{\r\n              height: '24px', \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              paddingLeft: '8px'\r\n           }}>\r\n          <Text size=\"small\" style={{color: arrowColor}}>{data.project.id}</Text>\r\n          {/* <Box direction=\"row\">\r\n           <Button plain icon={<ArrowUp size=\"small\" />} onClick={moveUp} />\r\n           <Button plain icon={<ArrowDown size=\"small\" />} onClick={moveDown} />\r\n            \r\n          </Box> */}\r\n        </Box>\r\n    );\r\n}","import { Box, Text } from \"grommet\";\r\nimport { useState } from \"react\";\r\nimport Popover from \"react-popover\";\r\nimport { ScheduleCardProps } from \"../schedule-card\";\r\nimport { Content } from \"./content\";\r\nimport { Footer } from \"./footer\";\r\nimport { Header } from \"./header\";\r\n\r\nexport const ScheduleCard: React.FC<ScheduleCardProps> = ({ data, onMove, users, onClick }) => {\r\n    const [hoverEl, setHoverEl] = useState<any>()\r\n\r\n    const moveDown = () => {\r\n        if (onMove) onMove(1)\r\n    }\r\n\r\n    const moveUp = () => {\r\n        if (onMove) onMove(-1);\r\n    }\r\n\r\n\r\n    const hoverStart = (e: any) => {\r\n        setHoverEl(e.currentTarget)\r\n\r\n        //      this.setState({hovering: state})\r\n    }\r\n\r\n    const hoverEnd = (e: any) => {\r\n        setHoverEl(null)\r\n    }\r\n\r\n    const isEmpty = () => {\r\n        return !((data?.people && data?.people.length > 0) || (data?.equipment && data?.equipment.length > 0))\r\n    }\r\n    return (\r\n        <Box\r\n            elevation=\"small\"\r\n            overflow=\"hidden\"\r\n            round=\"xsmall\"\r\n            background=\"accent-1\">\r\n\r\n            <Popover\r\n                enterExitTransitionDurationMs={300}\r\n                isOpen={(data?.notes || []).length > 0 && hoverEl != null}\r\n                target={hoverEl}\r\n                preferPlace={\"right\"}\r\n                body={(\r\n                    <div>\r\n                        <ul style={{ listStyle: 'none', paddingLeft: 0 }}>{data.notes.map((x) => (<li>{x}</li>))}</ul>\r\n                    </div>)} >\r\n\r\n                <Box\r\n                    aria-owns={hoverEl != null ? 'mouse-over-notes' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onMouseEnter={hoverStart}\r\n                    onMouseLeave={hoverEnd}\r\n                    className=\"schedule-card\" >\r\n\r\n                    <Header\r\n                        moveUp={moveUp}\r\n                        moveDown={moveDown}\r\n                        data={data} />\r\n\r\n                    <Box\r\n                        pad=\"xsmall\"\r\n                        style={{ paddingBottom: (isEmpty() ? '16px' : undefined), position: 'relative' }} onClick={onClick}>\r\n                        <Text size=\"small\" weight=\"bold\" className=\"card-title\" >{data?.project.name}</Text>\r\n                        <Content\r\n                            users={users || []}\r\n                            data={data} />\r\n                    </Box>\r\n                    <Footer\r\n                        data={data} />\r\n                </Box>\r\n            </Popover>\r\n        </Box>\r\n    );\r\n}","import { Box } from 'grommet';\r\nimport React from 'react';\r\n\r\nexport const ScheduleContainer : React.FC<any> = (props) => {\r\n    return (\r\n        <Box\r\n            flex\r\n            round=\"xsmall\"\r\n            background=\"neutral-1\"\r\n            direction=\"column\">\r\n        \r\n            <Box>\r\n                {props.header}\r\n            </Box>\r\n            <Box flex>\r\n                {props.children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React, {\r\n  Component, useEffect, useState\r\n} from 'react';\r\n\r\nimport { DateSelector } from '../date-selector'\r\n\r\nimport {ScheduleCard} from './card';\r\n\r\nimport ScheduleModal, { ISchedule } from '../modals/schedule-modal';\r\n// import './index.css';\r\n\r\nimport { Box, Text, Button, Spinner } from 'grommet';\r\nimport { ScheduleContainer } from './container';\r\nimport { ScheduleViewContext } from './context';\r\n\r\nvar moment = require('moment');\r\n\r\nexport interface ScheduleViewProps {\r\n  onCreateItem: (item: any, ts: Date) => void;\r\n  onSaveItem: (item: any, ts: Date) => void;\r\n  onCloneItem: (item: any, current: Date[], newDates: Date[]) => void;\r\n\r\n  events: ISchedule[];\r\n\r\n  users?: any[];\r\n  user?: any\r\n  token?: string;\r\n\r\n  projects: any[];\r\n  people: any[];\r\n  equipment: any[]\r\n\r\n  isLoading: boolean;\r\n\r\n  date: Date;\r\n  onHorizonChanged: (start: Date, end: Date) => void;\r\n}\r\n\r\n\r\nexport const ScheduleView: React.FC<ScheduleViewProps> = (props) => {\r\n  const [modalShow, showModal] = useState(false)\r\n  \r\n  const [date, setDate] = useState(moment(props.date).startOf('isoWeek'))\r\n\r\n  const [params, setParams] = useState<any[]>([moment().startOf('isoWeek'), moment().endOf('isoWeek')])\r\n\r\n  //const [scheduleData, setScheduleData] = useState<any[]>([])\r\n\r\n  const [scheduledJobs, setScheduledJobs] = useState<any[]>([]) //figure out where this goes\r\n\r\n  const [selected, setSelected] = useState<any>()\r\n\r\n  const [currentDay, setCurrentDay] = useState<any>()\r\n\r\n  const [timestamp, setTimestamp] = useState(new Date())\r\n\r\n  console.log(props.events)\r\n\r\n  useEffect(() => {\r\n    if(props.date){\r\n      setDate(moment(props.date).startOf('isoWeek'))\r\n    }\r\n  }, [props.date])\r\n\r\n  // const query = useQuery({\r\n  //   suspense: false,\r\n  //   staleWhileRevalidate: true\r\n  // })\r\n\r\n  // const jobs : Project[] = (query.ProjectMany() || []).map((x) => ({...x, __typename: 'Project'}))\r\n\r\n  // useEffect(() => {\r\n  //   utils.schedule.getScheduleByDate(params).then((schedule) => {\r\n  //     setScheduleData(schedule.map((day: any[]) => {\r\n  //       return day.map((x: any) => {\r\n  //         let job = jobs.find((a) => a?.id == x.job);\r\n  //         let files = job && job?.files?.length;\r\n  //         return {\r\n  //           ...x,\r\n  //           files: files\r\n  //         }\r\n\r\n  //       })\r\n  //     }))\r\n  //   })\r\n  // }, [params])\r\n\r\n  const changeWeek = (week: Date) => {\r\n    let params = [moment(week).startOf('isoWeek'), moment(week).clone().endOf('isoWeek')]\r\n    setDate(moment(week).startOf('isoWeek'))\r\n    setParams(params)\r\n\r\n    props.onHorizonChanged(new Date(params[0].valueOf()), new Date(params[1].valueOf()))\r\n  }\r\n\r\n  const renderHeader = () => {\r\n    let dayHeaders = renderDayHeaders();\r\n    return (\r\n      <Box\r\n        overflow=\"hidden\"\r\n        direction=\"column\"\r\n        className=\"week-header\">\r\n        <Box \r\n          round={{corner: 'top', size: 'xsmall'}}\r\n          background=\"accent-1\"\r\n          align=\"center\"\r\n          className=\"week-header__controls\">\r\n          <DateSelector\r\n            value={date}\r\n            displayFormat={\"MMMM YYYY\"}\r\n            stepSize={\"week\"}\r\n            onChange={changeWeek} />\r\n        </Box>\r\n        <Box \r\n          pad={{vertical: 'xsmall'}}\r\n          background={\"accent-2\"}\r\n          direction=\"row\" \r\n          className=\"week-header__days\">\r\n          {dayHeaders}\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  const renderTime = (i: number, format: string) => {\r\n    var m = moment(params[0]);\r\n    var d = m.add(i, 'day');\r\n    return d.format(format);\r\n  }\r\n\r\n  const updateOrder = (day: number) => {\r\n    // let order: any = {};\r\n    // let schedule = scheduleData[day] || [];\r\n\r\n    // for (var i = 0; i < schedule.length; i++) {\r\n    //   order[schedule[i].id] = i;\r\n    // }\r\n\r\n    // let ts = moment(params[0]).add(day, 'days').add(12, 'hours').valueOf();\r\n    // _updateOrder(ts, order).then((result) => {\r\n    //   console.log(result);\r\n    // })\r\n  }\r\n\r\n  const _updateOrder = (ts: number, order: any) => {\r\n    return fetch(process.env.PUBLIC_URL + \"/api/schedule/order\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + props.token,\r\n      },\r\n      body: JSON.stringify({\r\n        ts: ts,\r\n        order: order\r\n      })\r\n    })\r\n  }\r\n\r\n  const move = (pos: number, idx: number, day: number) => {\r\n    // if ((idx + pos) > -1 && (idx + pos) < scheduleData[day].length) {\r\n    //   let d = scheduleData[day];\r\n    //   d.splice(idx + pos, 0, d.splice(idx, 1)[0])\r\n    //   let schedule = scheduleData;\r\n    //   schedule[day] = d;\r\n    //   setScheduleData(schedule)\r\n    //   updateOrder(day);\r\n    // }\r\n  }\r\n\r\n  const renderSchedule = (i: number) => {\r\n    let scheduleDay = moment(date).clone().add(i, 'days')\r\n    console.log(\"RENDER SCHEDULE\", scheduleDay.format(\"DD/MM/yyyy\"))\r\n    return props.events?.filter((a) => {\r\n      //console.log(a.date)\r\n      return moment(a.date).isSame(scheduleDay, 'day')\r\n    }).map((x: any, ix: number) => {\r\n      return (\r\n        <li style={{ padding: 0, marginBottom: 4 }}>\r\n          <ScheduleCard\r\n            jobs={props.projects}\r\n            users={props.users}\r\n            onClick={() => {\r\n              if (!props.user.readonly) {\r\n\r\n            //    setScheduledJobs(scheduleData[i])\r\n                toggleEditorModal(true, x);\r\n\r\n              } else {\r\n            //    setScheduledJobs(scheduleData[i])\r\n                toggleEditorModal(true, x)\r\n              }\r\n\r\n            }}\r\n            onMove={(dir: number) => move(dir, ix, i)}\r\n            key={ix}\r\n            data={x} />\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  const toggleEditorModal = (truthy: boolean, job: any = null) => {\r\n    console.log(truthy, job);\r\n    if (truthy) {\r\n      let update = {\r\n        showModal: true,\r\n        selectedJob: job,\r\n      }\r\n\r\n      if (job && job.date) {\r\n        setTimestamp(job.date)\r\n        //update['timestamp'] = job.date;\r\n      }\r\n      showModal(true)\r\n      setSelected(job)\r\n\r\n    } else {\r\n      showModal(false)\r\n      // utils.schedule.getScheduleByDate(params).then((schedule) => {\r\n\r\n      //   setScheduleData(schedule)\r\n\r\n      //   setSelected(null)\r\n\r\n      // })\r\n      if (currentDay) updateOrder(currentDay);\r\n    }\r\n  }\r\n\r\n  const createScheduleItem = (item: any, ts: Date) => {\r\n    console.log(\"Create\", item, date)\r\n  }\r\n  const saveScheduleItem = (item: any, ts: Date) => {\r\n\r\n  }\r\n  const cloneScheduleItem = (item: any, current: Date[], clone: Date[]) => {\r\n\r\n  }\r\n\r\n  console.log(\"USER\", props.user);\r\n\r\n  const renderCreateScheduleModal = () => {\r\n    var schedJobs = scheduledJobs;\r\n    return (\r\n      <ScheduleModal\r\n\r\n        onCreateItem={props.onCreateItem}\r\n        onSaveItem={props.onSaveItem}\r\n        onCloneItem={props.onCloneItem}\r\n\r\n        projects={props.projects}\r\n        people={props.people}\r\n        equipment={props.equipment}\r\n\r\n        user={props.user}\r\n        users={props.users}\r\n        \r\n        onClose={() => toggleEditorModal(false)}\r\n        open={modalShow}\r\n        timestamp={timestamp}\r\n        scheduledJobs={schedJobs}\r\n        item={selected}\r\n      />\r\n    );\r\n  }\r\n\r\n  const renderAddScheduleButton = (dayIndex: number) => {\r\n\r\n    //if (!props.user.readonly) {\r\n      return (\r\n        <Button style={{background: \"#A3B696\"}} color=\"accent-2\" label=\"Create\" key={dayIndex} className=\"add-item-button\" onClick={() => {\r\n          var day = moment(params[0]).add(dayIndex, 'day')\r\n          setTimestamp(day)\r\n          setCurrentDay(dayIndex)\r\n       //   setScheduledJobs(scheduleData[dayIndex])\r\n\r\n\r\n          toggleEditorModal(true)\r\n        }\r\n        } />\r\n      );\r\n    // } else {\r\n    //   return null;\r\n    // }\r\n  }\r\n\r\n  const renderDayHeaders = () => {\r\n    let headers = []\r\n    for (var i = 0; i < 7; i++) {\r\n      var today = new Date();\r\n      var currentDay = today.getDate();\r\n      var currentMonth = today.getMonth() + 1;\r\n      headers.push((\r\n        <Box\r\n          direction=\"column\"\r\n          flex\r\n          className={(currentDay == renderTime(i, 'DD') && currentMonth == renderTime(i, 'MM')) ? ' week-day-header week-day-header-current' : 'week-day-header'}>\r\n          <Box>\r\n            {renderTime(i, 'ddd')}\r\n          </Box>\r\n          <Box>\r\n            {renderTime(i, 'DD/MM')}\r\n          </Box>\r\n        </Box>\r\n      ))\r\n    }\r\n    return headers;\r\n  }\r\n\r\n  const renderDays = () => {\r\n    var week = [];\r\n    for (var i = 0; i < 7; i++) {\r\n      const dayItems =  renderSchedule(i);\r\n      var today = new Date();\r\n      var currentDay = today.getDate();\r\n      var currentMonth = today.getMonth() + 1;\r\n      week.push((\r\n        <Box\r\n          pad={{horizontal: 'xsmall'}}\r\n          flex\r\n          className={(currentDay == renderTime(i, 'DD') && currentMonth == renderTime(i, 'MM')) ? ' week-day week-day-current' : 'week-day'}>\r\n          <ul style={{ flex: 1, listStyle: 'none', padding: 0 }} className='week-day-content'>\r\n            {dayItems}\r\n            {renderAddScheduleButton(i)}\r\n          </ul>\r\n        </Box>\r\n      ));\r\n    }\r\n    return week;\r\n  }\r\n\r\n  const renderedDays = renderDays()\r\n  const renderedModal = renderCreateScheduleModal()\r\n\r\n  return (\r\n    <ScheduleViewContext.Provider\r\n      value={{\r\n          projects: props.projects,\r\n          people: props.people,\r\n          equipment: props.equipment\r\n      }}>\r\n    <ScheduleContainer\r\n      header={renderHeader()}>\r\n      {props.isLoading ? (\r\n          <Box\r\n            flex\r\n            justify=\"center\"\r\n            align=\"center\">\r\n            <Spinner size=\"medium\" />\r\n            <Text>Loading schedule ...</Text>\r\n          </Box>\r\n        ) : (\r\n          <Box overflow={'scroll'} flex direction=\"row\" className=\"week-days\">\r\n            {renderedDays}\r\n            {renderedModal}\r\n          </Box>\r\n        )}\r\n    </ScheduleContainer>\r\n    </ScheduleViewContext.Provider>\r\n  );\r\n\r\n}\r\n\r\n// export default connect((state: StoreState) => ({\r\n//   users: state.schedule.users.list,\r\n//   user: state.auth.user,\r\n//   token: state.auth.token\r\n// }), (dispatch) => ({\r\n//   getJobs: () => dispatch(getJobs() as any),\r\n//   getPlant: () => dispatch(getPlant() as any),\r\n//   getUsers: () => dispatch( getUsers() as any),\r\n//   getEmployees: () => dispatch(getEmployees() as any)\r\n// }))(WeekView)\r\n","import React, {\r\n  Component\r\n} from 'react';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { File } from '../../../gqless';\r\n// import { StoreState } from '../../../reducers';\r\nimport { FileViewer } from '../file-viewer';\r\n\r\n\r\nexport interface FileCardProps {\r\n  token?: string;\r\n  file?: File;\r\n  jobId?: string;\r\n}\r\n\r\nconst FileCard: React.FC<FileCardProps> = (props) => {\r\n  // const renderContent = (file: any) => {\r\n  //   let url, mainType, subType;\r\n  //   if(!file || !file.mimeType) return;\r\n  //   console.log(\"FILE\", file, file.extension, file.id);\r\n  //   if(file.id){\r\n  //     url = `${process.env.REACT_APP_API && process.env.REACT_APP_API.length > 0 ? process.env.REACT_APP_API : window.location.origin}/api/files/${file.id}${file.extension || ''}?access_token=${props.token}`; \r\n  //     mainType = \"image\";\r\n  //     if(file.mimeType){\r\n  //       mainType = file.mimeType.split('/')[0]\r\n  //       subType = file.mimeType.split('/')[1]; \r\n  //     }\r\n      \r\n  //   }else{\r\n  //     let f = file.file;\r\n  //     console.log(f)\r\n  //     url = URL.createObjectURL(f)\r\n    \r\n  //     mainType = f.type.split('/')[0]\r\n  //     subType = f.type.split('/')[1]\r\n      \r\n  //   }\r\n\r\n  //   console.log(file.mimeType, mainType, subType)\r\n  \r\n  //   switch(mainType){\r\n  //     case \"video\":\r\n  //       return (\r\n  //         <img src={require('../../../assets/movie.png')} />\r\n  //       );\r\n  //     case \"image\":\r\n  //       return (\r\n  //         <img src={url} />\r\n  //       );\r\n  //     case \"application\":\r\n  //       const doc = {uri: url, fileType: `${mainType}/${subType}`}\r\n  //       switch(subType){\r\n  //         case \"pdf\":\r\n  //         case \"vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n  //         case \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n  //           console.log(url)\r\n  //           return (\r\n  //             <FileThumbnail documents={[doc]} />\r\n  //           );\r\n  //         case \"zip\":\r\n  //         case \"octet-stream\":\r\n  //         case \"x-zip-compressed\":\r\n  //         case \"x-rar-compressed\":\r\n  //           return (\r\n  //             <img src={require('../../../assets/zip.png')} />\r\n  //           );\r\n  //         default:\r\n  //           return null;\r\n  //       }\r\n  //     case \"multipart\":\r\n  //       switch(subType){\r\n  //         case \"x-zip\":\r\n  //           return (\r\n  //             <img src={require('../../../assets/zip.png')} />\r\n  //           );\r\n  //         default:\r\n  //           return null;\r\n  //       }\r\n  //     default:\r\n  //       return null;\r\n  //   }\r\n    \r\n  // }\r\n\r\n  \r\n    return !props.file ? null : ( \r\n      <div className=\"file-contents\">\r\n        <FileViewer files={[props.file]} token={props.token} />\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default FileCard;\r\n// export default connect((state: StoreState) => ({\r\n//   token: state.auth.token\r\n// }))(FileCard)\r\n","import React from 'react';\r\nimport { Clear } from 'grommet-icons'\r\nimport FileCard from './file'\r\nimport { Box, Text, Spinner } from 'grommet'\r\n\r\nexport interface FileGridProps {\r\n  files?: {\r\n    cid?: string;\r\n    name?: string;\r\n  }[]\r\n  onDeleteClick?: any;\r\n  onClick?: any;\r\n}\r\n\r\nexport const FileGrid : React.FC<FileGridProps> = (props) => {\r\n    return (\r\n        <Box \r\n            direction=\"row\"\r\n            wrap\r\n            className=\"robust-file-list\">\r\n        {props.files?.map((x, ix) => (\r\n          <Box key={ix} className=\"file-tile\" onClick={() => (x.cid) ? props.onClick(x) : () => {}}>\r\n            {(x.cid) ? (<div className=\"file__delete-actions\" onClick={(e) => {\r\n              props.onDeleteClick(x)\r\n              e.stopPropagation();\r\n            }}>\r\n              <Clear />\r\n            </div>) : null}\r\n            {(!x.cid) ? (<div className=\"file__upload-indicator\"><Spinner /></div>) : null}\r\n            <FileCard file={x as any}/>\r\n            {(x.cid) ? <Text>{x.name}</Text> : null}\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    );\r\n}","import React, { useMemo, useState } from 'react';\r\nimport { DataTable, Text, CheckBox, Spinner } from 'grommet';\r\n\r\nexport interface FileListProps {\r\n    loading?: string[];\r\n    files?: any[];\r\n    onSelect?: any;\r\n    onClick: any;\r\n}\r\n\r\nexport const FileList: React.FC<FileListProps> = (props) => {\r\n    const [checked, setChecked] = useState<any[]>([])\r\n    const [sort, setSort] = useState<{ property: string, direction: \"asc\" | \"desc\" }>()\r\n\r\n    const _setChecked = (checked: string[]) => {\r\n        setChecked(checked)\r\n        props.onSelect?.(checked.map((x) => props.files?.find((a) => a.id == x)))\r\n    }\r\n\r\n    const onCheck = (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\r\n        if (event.target.checked) {\r\n            _setChecked([...checked, value]);\r\n        } else {\r\n            _setChecked(checked.filter(item => item !== value));\r\n        }\r\n    };\r\n\r\n    const onCheckAll = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        _setChecked(event.target.checked ? (props.files || []).map((datum) => datum.id) : []);\r\n    }\r\n    const sortFiles = (a: any, b: any) => {\r\n        if (!sort) return 0; //props.files || []\r\n        let first = a[sort.property] || ''\r\n        let next = b[sort.property] || ''\r\n        return sort.direction == 'asc' ?\r\n            first == next ? 0 : first > next ? 1 : -1\r\n            :\r\n            first == next ? 0 : first < next ? 1 : -1\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <DataTable\r\n            step={50}\r\n            paginate={true}\r\n            onMore={() => console.log(\"More\")}\r\n            pin\r\n            primaryKey={\"id\"}\r\n            columns={[\r\n                {\r\n                    property: 'checkbox',\r\n                    render: datum => (\r\n                        (props.loading || []).indexOf(datum.id) > -1 || !datum.cid ? (\r\n                            <Spinner />\r\n                        ) : (\r\n                            <CheckBox\r\n                                checked={checked.indexOf(datum.id) > -1}\r\n                                onChange={(e) => {\r\n                                    onCheck(e, datum.id)\r\n                                    e.preventDefault()\r\n                                    e.stopPropagation()\r\n                                }} />)\r\n                    ),\r\n                    header: (\r\n                        <CheckBox\r\n                            onChange={onCheckAll}\r\n                            checked={checked.length == props.files?.length}\r\n                            indeterminate={checked.length > 0 && checked.length < (props.files?.length || 0)} />\r\n                    ),\r\n                    sortable: false\r\n                },\r\n                {\r\n                    property: 'name',\r\n                    header: <Text>Name</Text>,\r\n                    sortable: true\r\n                },\r\n                {\r\n                    property: 'status',\r\n                    header: 'Status',\r\n                    sortable: true\r\n                }\r\n            ]}\r\n            onSort={({ property, direction }) => setSort({ property, direction })}\r\n            data={props.files?.sort(sortFiles)}\r\n            onClickRow={({ target, datum }) => {\r\n                let tag: any = target;\r\n                if (tag.tagName == \"INPUT\" && tag.type == \"checkbox\") {\r\n\r\n                } else if (tag.getElementsByTagName('input').length > 0) {\r\n\r\n                } else {\r\n                    console.log(tag.tagName)\r\n                    props.onClick(datum)\r\n                }\r\n            }}\r\n        />\r\n    );\r\n}","import React, {\r\n  Component, useMemo, useState \r\n} from 'react';\r\n\r\nimport {\r\n  Close as Clear\r\n} from 'grommet-icons'\r\n\r\nimport FileCard from './file';\r\n// import './index.css';\r\nimport { Box, DataTable, Text, Spinner, List, CheckBox } from 'grommet';\r\nimport { FileGrid } from './grid';\r\nimport { FileList } from './list'\r\n\r\nexport interface RobustFileListProps {\r\n  loading?: any[];\r\n  uploading?: any[];\r\n\r\n  files?: {\r\n    _id: string;\r\n    name: string;\r\n    cid: string\r\n  }[];\r\n  cols: any;\r\n\r\n  onSelect?: (selection: any[]) => void;\r\n  onClick?: any;\r\n  onDeleteClick?: any;\r\n\r\n  grid?: boolean;\r\n}\r\n\r\nexport const RobustFileList : React.FC<RobustFileListProps> = (props) => {\r\n  const [ sort, setSort ] = useState<{property: string, direction: \"asc\" | \"desc\"}>()\r\n\r\n  const [ checked, setChecked ] = useState<string[]>([])\r\n\r\n  const sortedFiles = useMemo(() => {\r\n    if(!sort) return props.files || []\r\n    \r\n    return (props.files || []).map((x) => ({...x})).sort((a: any, b : any) => {\r\n      let first = a[sort.property] || ''\r\n      let next = b[sort.property] || ''\r\n        return sort.direction == 'asc' ?\r\n          first == next ? 0 : first > next ? 1 : -1 \r\n          :\r\n          first == next ? 0 : first < next ? 1 : -1\r\n    })\r\n  \r\n  }, [JSON.stringify(props.files), sort])\r\n\r\n\r\n    return props.grid ? (\r\n      <FileGrid \r\n        onClick={props.onClick}\r\n        onDeleteClick={props.onDeleteClick}\r\n        files={props.files} />\r\n    ) : (\r\n      <FileList \r\n        onClick={props.onClick}\r\n        onSelect={props.onSelect}\r\n        files={props.files} />\r\n    )\r\n}\r\n\r\nexport default RobustFileList\r\n","import React, { Component } from 'react';\r\n\r\nimport FilterMenu from './filter-menu';\r\nimport { Box, Button } from 'grommet'\r\n\r\nimport { PlanningModal } from '../modals/planning-modal'\r\n\r\nimport { \r\n  Menu,\r\n  Add\r\n} from 'grommet-icons'\r\n\r\nimport {DateSelector} from '../date-selector';\r\n\r\nimport {Calendar as BigCalendar, momentLocalizer, SlotInfo} from 'react-big-calendar';\r\n\r\n// import './index.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport interface PlanningCalendarProps {\r\n\r\n}\r\n\r\nexport const PlanningCalendar : React.FC<PlanningCalendarProps> = (props) => {\r\n  \r\n  const [ time, setTime ] = useState<Date>(new Date())\r\n\r\n  const [ events, setEvents ] = useState<any[]>([])\r\n\r\n  const [ filters, setFilters ] = useState<{jobs: boolean, quotes: Boolean, designs: boolean}>({\r\n    jobs: true,\r\n    quotes: true,\r\n    designs: true\r\n  })\r\n\r\n  const [ selectedEvent, setSelected ] = useState<any>()\r\n  const [ showModal, openModal ] = useState<boolean>(false)\r\n  const [ showMenu, setShowMenu ] = useState<boolean>(false)\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     time: moment(),\r\n  //     events: [],\r\n  //     filters: {\r\n  //       jobs: true,\r\n  //       quotes: true,\r\n  //       designs: true\r\n  //     },\r\n  //     selectedEvent: null,\r\n  //     showModal: false,\r\n  //     showMenu: false\r\n  //   };\r\n  // }\r\n\r\n  useEffect(() => {\r\n    getQuoteSchedule(time)\r\n  }, [])\r\n\r\n  const getBackground = (type: string) => {\r\n    switch(type){\r\n      case 'jobs':\r\n        return '#3f51b5';\r\n      case 'quotes':\r\n        return '#b5b13f';\r\n      case 'designs':\r\n        return '#b53f49';\r\n      default:\r\n        return 'black'\r\n    }\r\n  }\r\n\r\n const getQuoteSchedule = (date: Date) => {\r\n    let m = moment(date)\r\n    var s = m.startOf('month').valueOf();\r\n    var e = m.endOf('month').valueOf();\r\n\r\n    // utils.planner.getPlanned(s, e).then((r) => {\r\n    //   console.log(r);\r\n    //   //Tagging\r\n    //   r.quotes = r.quotes.map((x) => ({\r\n    //     ...x,\r\n    //     type: (x.type) ? x.type : 'quotes',\r\n    //   }))\r\n    //   r.jobs = r.jobs.map((x) => ({\r\n    //     ...x,\r\n    //     type: 'jobs'\r\n    //   }))\r\n    //   let events = r.jobs.concat(r.quotes)\r\n    //   events = events.map((x) => {\r\n    //     return {\r\n    //       id: x.id,\r\n    //       type: x.type,\r\n    //       title: x.displayId + \" \" + x.displayName,\r\n    //       start: new Date(x.start),\r\n    //       end: new Date(x.end),\r\n    //       data: x.quote,\r\n    //       style: {backgroundColor: getBackground(x.type)},\r\n    //       allDay: true\r\n    //     }\r\n    //   });\r\n    //   setEvents(events)\r\n\r\n    // });\r\n\r\n  }\r\n\r\n  const fetchScheduleMonth = (m: Date) => {\r\n    // utils.planner.getSchedule(m).then((r) => {\r\n    //   var evts = [];\r\n\r\n    //   for(var i = 0; i < r.length; i++){\r\n    //     var ranges = [];\r\n    //     var diff = 0;\r\n    //     var range = {\r\n    //       start: r[i].schedule[0],    \r\n    //       end: 0\r\n    //     }\r\n    //     var last = 0;\r\n    //     for(var o = 0; o < r[i].schedule.length; o++){\r\n    //       diff = (r[i].schedule[o] - ((last > 0) ? last : range.start)) / 1000 / 60 / 60 / 24;\r\n\r\n    //       if(diff <= 1){\r\n    //         range.end = r[i].schedule[o] + (12 * 60 * 60 * 1000);\r\n    //       }\r\n    //       last = r[i].schedule[o];\r\n    //       if(diff > 1){\r\n    //         ranges.push(Object.assign({}, range));\r\n    //         range.start = r[i].schedule[o];\r\n    //         range.end = r[i].schedule[o];\r\n    //         last = 0;\r\n    //       }\r\n    //     }\r\n    //     ranges.push(range);\r\n    //     for(var o = 0; o < ranges.length; o++){\r\n    //       evts.push({\r\n    //         id: evts.length,\r\n    //         title: r[i].name,\r\n    //         start: new Date(ranges[o].start),\r\n    //         end: new Date(ranges[o].end),   \r\n    //         allDay: true\r\n    //       });\r\n    //     }\r\n    //   }\r\n    //   setEvents(evts)\r\n    // });      \r\n  }\r\n\r\n  const _changeMonth = (time: Date) => {\r\n    //      this.fetchScheduleMonth(m);\r\n    getQuoteSchedule(time);\r\n    setTime(time)\r\n  }\r\n\r\n\r\n  const _refresh = () => {\r\n    //        this.fetchScheduleMonth(m);\r\n    getQuoteSchedule(time);\r\n  }\r\n\r\n\r\n  const onNavigate = (date: Date) => {\r\n    //        this.fetchScheduleMonth(moment(date));\r\n    setTime(date)\r\n  }\r\n\r\n\r\n  const _toggleMenu = () => {\r\n    setShowMenu(!showMenu)\r\n  }\r\n\r\n  const filterEvents = (evts: any[]) => {\r\n\r\n    let _filters = Object.keys(filters).map((key) => (filters as any)[key])\r\n\r\n    return evts.filter((a) => _filters.indexOf(a.type) > -1);\r\n  }\r\n\r\n  const selectSpace = (event: SlotInfo) => {\r\n    setSelected({start: event.start, end: event.end})\r\n    openModal(true)\r\n  }\r\n\r\n    return (\r\n      <Box className=\"month-container\"> \r\n        <PlanningModal \r\n          open={showModal} \r\n          event={selectedEvent}\r\n          onClose={() => {openModal(false); setSelected(null)}}/>\r\n        <div style={{ \r\n          background: \"#f5f5f5\",\r\n          opacity: showMenu ? 1 : 0, \r\n          width: showMenu ? 180 :0, \r\n          transition: 'width 250ms, opacity 200ms', \r\n          height: '100%'}}>\r\n          <FilterMenu onFilterChange={(filters: any) => setFilters(filters)} filters={filters}/>\r\n        </div>\r\n        <div className=\"month-container__inner\">\r\n          <div className=\"month-header\">\r\n            <div className=\"month-header__main\">\r\n              <Button \r\n                icon={<Menu />}\r\n                className=\"month-header__menu\"\r\n                onClick={_toggleMenu}>\r\n              </Button>\r\n              <DateSelector\r\n                onChange={_changeMonth}\r\n                value={time}\r\n                displayFormat={\"MMMM YYYY\"} />\r\n\r\n              <Button\r\n                icon={<Add />} \r\n                className=\"month-header__action\"\r\n                onClick={() => openModal(true)}>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"month-scheduler\">\r\n            <BigCalendar\r\n              localizer={localizer}\r\n              selectable\r\n              onSelectSlot={selectSpace}\r\n              view=\"month\" \r\n              toolbar={false}\r\n              style={{flex: 1}}\r\n              popup={true}\r\n              date={time}\r\n              onNavigate={onNavigate}\r\n              onSelectEvent={(evt, e) => {\r\n                if(evt.type == \"quotes\" || evt.type == \"designs\"){\r\n                  setSelected(evt)\r\n                  openModal(true)\r\n                }\r\n                console.log(\"SELECT\", evt, e)\r\n              }\r\n              }\r\n              events={filterEvents(events)}\r\n\r\n            />\r\n      \r\n          </div> \r\n        </div>\r\n      </Box>\r\n    );\r\n  \r\n} \r\n","import { Box } from 'grommet';\r\nimport React from 'react';\r\nimport { Draggable, DraggableProvided, DraggableStateSnapshot, Droppable, DroppableProps, DroppableProvided } from 'react-beautiful-dnd';\r\nimport { KanbanListItem } from './KanbanListItem';\r\n\r\nexport interface KanbanListProps{ \r\n    items?: {id: string}[];\r\n    renderCard?: any;\r\n    droppableId?: string;\r\n}\r\n\r\nexport const KanbanList :  React.FC<KanbanListProps> = (props) => {\r\n    \r\n    return <Droppable\r\n            droppableId={props.droppableId || ''}\r\n            type=\"LIST\">\r\n            {(\r\n                dropProvided: DroppableProvided\r\n            ) => (\r\n        <Box \r\n            {...dropProvided.droppableProps}\r\n            ref={dropProvided.innerRef}\r\n            gap=\"small\"\r\n            style={{minHeight: 'min-content'}}\r\n            pad={{vertical: 'small'}}\r\n            direction=\"column\"\r\n            flex>\r\n        {props.items?.map((item, index) => \r\n            <Draggable key={item.id} draggableId={item.id} index={index}>\r\n              {(\r\n                dragProvided: DraggableProvided,\r\n                dragSnapshot: DraggableStateSnapshot,\r\n            ) => (\r\n                <Box\r\n                round=\"xsmall\"\r\n                border={{side: 'all', color: 'lightblue', size: dragSnapshot.isDragging ? '2px' : '0px'}}\r\n                ref={dragProvided.innerRef}\r\n                {...dragProvided.draggableProps}\r\n                {...dragProvided.dragHandleProps}\r\n                    >\r\n                    {props?.renderCard?.(item) || 'div'}\r\n                </Box>\r\n            )} \r\n            </Draggable>\r\n        )}\r\n        {dropProvided.placeholder}\r\n        </Box>\r\n            )}\r\n        </Droppable>\r\n\r\n}\r\n","import { Box, Text, Heading } from 'grommet';\r\nimport React from 'react';\r\nimport { Draggable, DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { KanbanList } from './KanbanList';\r\n\r\n\r\nexport interface KanbanColumnProps {\r\n    title?: string;\r\n    index?: number;\r\n    items?: any[];\r\n\r\n    isCombineEnabled?: boolean,\r\n    useClone?: boolean,\r\n    isScrollable?: boolean;\r\n    renderCard?: any;\r\n}\r\n\r\nexport const KanbanColumn : React.FC<KanbanColumnProps> = ({\r\n    title = '',\r\n    index = 0,\r\n    items = [{status: 'Issued', name: ''}],\r\n    isCombineEnabled,\r\n    useClone,\r\n    isScrollable,\r\n    renderCard\r\n}) => {\r\n    return (\r\n            <Box \r\n                background=\"accent-1\"\r\n                round=\"xsmall\"\r\n                direction=\"column\"\r\n                width=\"300px\"\r\n                pad={{horizontal: \"small\"}}\r\n              >\r\n                <Box \r\n                    align=\"center\"\r\n                    justify=\"between\"\r\n                    border={{side: 'bottom', color: 'dark-2'}}\r\n                    direction=\"row\" \r\n                    >\r\n                    <Heading \r\n                        margin=\"small\"\r\n                        level='4'>{title}</Heading>\r\n                    <Box\r\n                        style={{userSelect: 'none'}}\r\n                        align=\"center\"\r\n                        justify=\"center\"\r\n                        width=\"30px\"\r\n                        height=\"30px\"\r\n                        pad=\"xsmall\"\r\n                        background=\"dark-3\"\r\n                        round=\"large\">\r\n                        <Text size=\"small\">{items?.length}</Text>\r\n                    </Box>\r\n                </Box>\r\n                <Box \r\n                    overflow={{vertical: 'auto'}}\r\n                    flex>\r\n                 <KanbanList \r\n                    droppableId={`${index}`}\r\n                    renderCard={renderCard} \r\n                    items={items}/>\r\n\r\n                </Box>\r\n            </Box>\r\n      \r\n    )\r\n}","import React from 'react';\r\nimport { Box } from 'grommet';\r\nimport {\r\n    Droppable,\r\n    DroppableProvided,\r\n    DragDropContext,\r\n    DropResult\r\n} from 'react-beautiful-dnd';\r\nimport { KanbanColumn } from './KanbanColumn';\r\n\r\n export interface KColumn {\r\n    id?: any;\r\n    title?: string;\r\n    rows?: any[]\r\n }\r\n\r\n export interface BaseKanbanProps {\r\n    containerHeight?: number,\r\n    useClone?: boolean,\r\n    isCombineEnabled?: boolean,\r\n    withScrollableColumns?: boolean,\r\n\r\n    renderCard?: (item?: any) => any;\r\n    onDrag?: (result: DropResult) => void;\r\n    columns?: Array<KColumn>\r\n }\r\nexport const Kanban : React.FC<BaseKanbanProps> = ({\r\n    containerHeight,\r\n    useClone,\r\n    isCombineEnabled,\r\n    withScrollableColumns,\r\n    renderCard,\r\n    onDrag,\r\n    columns = []\r\n}) => {\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n        console.log(result)\r\n\r\n        let origin : number = parseInt(result.source.droppableId)\r\n        let dest = result.destination?.droppableId\r\n\r\n        if(dest){\r\n          let item_ix = columns[origin].rows?.map((x) => x.id).indexOf(result.draggableId)\r\n          if(item_ix && item_ix > -1){\r\n            let item = columns[origin].rows?.splice(item_ix, 1)\r\n            columns[parseInt(dest)].rows?.push(item)\r\n          }\r\n        }\r\n\r\n   //     onChange?.(columns)\r\n\r\n    }\r\n    \r\n      const board = (\r\n            <Droppable\r\n                droppableId=\"board\"\r\n                type=\"COLUMN\"\r\n                direction='horizontal'\r\n                ignoreContainerClipping={Boolean(containerHeight)}>\r\n                {(provided: DroppableProvided) => (\r\n                    <Box\r\n                      gap=\"small\"\r\n                      pad=\"small\"\r\n                      direction=\"row\"\r\n                      flex\r\n                       ref={provided.innerRef} \r\n                       {...provided.droppableProps}>\r\n                    {columns.map((key, index: number) => (\r\n                    <KanbanColumn\r\n                        key={key.id}\r\n                        index={index}\r\n                        title={key.title}\r\n                        items={key.rows}\r\n                        isScrollable={withScrollableColumns}\r\n                        isCombineEnabled={isCombineEnabled}\r\n                        useClone={useClone}\r\n                        renderCard={renderCard} />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                    </Box>\r\n                )}\r\n                \r\n                    \r\n            </Droppable>\r\n        )\r\n      \r\n       \r\n    return (\r\n        <DragDropContext onDragEnd={onDrag || onDragEnd}>\r\n            <Box flex>\r\n               {board}\r\n            </Box>\r\n        </DragDropContext>\r\n    )\r\n}","import React, {\r\n  Component, useEffect, useState\r\n} from 'react';\r\n\r\nimport { Add } from 'grommet-icons'\r\n\r\nimport RobustFileList from '../robust-file-list';\r\n\r\nimport Dropzone from 'react-dropzone';\r\nimport { CloudUpload } from 'grommet-icons'\r\nimport moment from 'moment';\r\n\r\nimport { Box, Button, Text } from 'grommet';\r\nimport * as Icons from 'grommet-icons'\r\n// import { useRefetch, query } from '../../../gqless';\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport interface SharedFileCardProps {\r\n\r\n  loading?: any[];\r\n  uploading?: any[];\r\n\r\n  jobId?: string;\r\n  style?: any;\r\n\r\n  files?: any[];\r\n  onChange?: (files: any[]) => void;\r\n  \r\n  onClick?: (item?: any) => void;\r\n\r\n  onView?: (items: any[]) => void;\r\n  onEdit?: (items: any[]) => void;\r\n  onDelete?: (items: any[]) => void;\r\n\r\n  onUpload: (files: File[]) => void;\r\n\r\n  prefs?: any;\r\n  updatePrefs?: (update: any) => void;\r\n}\r\n\r\nexport const SharedFiles : React.FC<SharedFileCardProps> = ({\r\n  files = [],\r\n  onChange,\r\n  onUpload,\r\n  jobId,\r\n  style,\r\n  onClick,\r\n  onDelete,\r\n  onEdit,\r\n  onView,\r\n  prefs = {isGrid: false},\r\n  updatePrefs,\r\n  loading,\r\n  uploading\r\n}) =>  {\r\n\r\n  const [ showFile, setShowFile ] = useState<any>(null)\r\n\r\n  const [ selectedFiles, setSelectedFiles ] = useState<any[]>([])\r\n\r\n  const [ dialogOpen, openDialog ] = useState<boolean>(false)\r\n\r\n  // const isGrid = prefs.isGrid;\r\n  // const setIsGrid = (val: boolean) => updatePrefs?.({isGrid: val})\r\n  const [ isGrid, setIsGrid ] = useState<boolean>(false)\r\n\r\n//  const refetch = useRefetch()\r\n\r\n\r\n  const filesDropped = (dropped_files: File[]) => {\r\n\r\n    let _files = dropped_files.map((x) => ({\r\n      _id: nanoid(),\r\n      file: x,\r\n      name: x.name,\r\n      uploaded: false\r\n    }))\r\n\r\n    onUpload?.(dropped_files)\r\n\r\n    if(!jobId) return;\r\n\r\n\r\n    // utils.job.uploadFiles(jobId, dropped_files).then((r) => {\r\n\r\n    //   if(r.success){\r\n      \r\n    //     let f = files.slice().filter((a) => _files.map((x) => x._id).indexOf(a._id) < 0)\r\n    \r\n    //     onChange?.(f.concat(r.file))\r\n\r\n    //   //refetch(() => query.ProjectById({id: jobId}))\r\n    //   }\r\n      \r\n    //   /*utils.job.getFiles(jobId).then((files) => {\r\n    //     onChange?.(files.map((x: any) => ({\r\n    //       ...x,\r\n    //       uploaded: true\r\n    //     })))\r\n        \r\n    //   })*/\r\n    // })\r\n\r\n\r\n   // onChange?.(files?.concat(_files))\r\n  }\r\n\r\n\r\n  const removeFile = (file : any) => {\r\n    if(!jobId) return;\r\n    // utils.job.removeFile(jobId, file.id).then((r) => {\r\n    //   refetch(() => query.ProjectById({id: jobId}))\r\n\r\n    // })\r\n  }\r\n\r\n  const _onView = () => {\r\n    onView?.(selectedFiles)\r\n  } \r\n\r\n  const _onEdit = () => {\r\n    onEdit?.(selectedFiles)\r\n\r\n  }\r\n  \r\n  const _onDelete = () => {\r\n    onDelete?.(selectedFiles)\r\n\r\n  }\r\n\r\n    return (\r\n      <Box \r\n        flex\r\n        round=\"xsmall\"\r\n        overflow=\"hidden\"\r\n        direction=\"column\" \r\n        style={{...style}}>\r\n        <Box \r\n          flex\r\n          style={{position: 'relative'}}>\r\n          <Box \r\n            background=\"accent-1\"\r\n            direction=\"row\"\r\n            justify=\"between\">\r\n              <Box\r\n                round={{corner: 'top', size: 'xsmall'}}\r\n                direction=\"row\">\r\n             {/*   <Button\r\n                  onClick={_onView}\r\n                  size=\"small\"\r\n                  disabled={selectedFiles.length == 0}\r\n             icon={<Icons.View />} />*/}\r\n                <Button\r\n                  onClick={_onEdit}\r\n                  size=\"small\"\r\n                  disabled={selectedFiles.length == 0}\r\n                  icon={<Icons.Edit />}/>\r\n                <Button \r\n                  onClick={_onDelete}\r\n                  size=\"small\"\r\n                  disabled={selectedFiles.length == 0}\r\n                  icon={<Icons.Trash  color=\"status-critical\"/>} />\r\n              </Box>\r\n              <Box\r\n                overflow=\"hidden\"\r\n                round={{corner: 'top', size: 'xsmall'}}\r\n                direction=\"row\"\r\n                elevation=\"3\"\r\n                gap=\"small\">\r\n              <Button\r\n                active={!isGrid}\r\n                icon={<Icons.List />}\r\n                onClick={() => setIsGrid(false)}\r\n                />\r\n              <Button\r\n                active={isGrid}\r\n                icon={<Icons.Grid />}\r\n                onClick={() => setIsGrid(true)}\r\n                />\r\n              </Box>\r\n          </Box>\r\n            <Dropzone noClick={true} noKeyboard={true} onDrop={filesDropped}>\r\n              {({getRootProps, getInputProps, isDragActive, open}) => (\r\n                <section style={{flex: 1, display: 'flex', flexDirection: 'column', outline: 'none', overflowY: 'scroll'}}>\r\n                  \r\n                  <Box flex className={`file-list ${files?.length > 0 ? '' : 'empty'}`} {...getRootProps()}>\r\n                    <input id=\"file-list__input\" {...getInputProps()} />\r\n                    \r\n                    {(files?.length > 0) ? (\r\n                      <RobustFileList \r\n                        grid={isGrid}\r\n                        cols={4}\r\n                        loading={loading}\r\n                        uploading={uploading}\r\n                        onSelect={(selection) => setSelectedFiles(selection)}\r\n                        onClick={onClick}\r\n                        onDeleteClick={removeFile}\r\n                        files={files || []} /> \r\n                    ) : (\r\n\r\n                      <Box \r\n               \r\n                        flex\r\n                        align=\"center\"\r\n                        justify=\"center\"\r\n                        direction=\"column\" \r\n                        className=\"upload-helper\">\r\n                        <CloudUpload /><Text color={isDragActive ? \"blue\" : ''}>{isDragActive ? 'Drop' : 'Drag'} files here to upload</Text>\r\n                      </Box>\r\n                    )}\r\n\r\n                  </Box>\r\n\r\n                    \r\n                    {/* {files.length > 0 && (<div className={`file-list__drop ${isDragActive ? 'active' : ''}`}>\r\n                      <CloudUpload style={{marginRight: '10px'}}/>\r\n                      <Text >Drop files to upload</Text> \r\n                    </div>)} */}\r\n                  <Button style={{position: 'absolute', right: 10, bottom: 10}} color=\"primary\" onClick={() => {\r\n                    let fileInput = document.createElement('input')\r\n                    fileInput.type = 'file'\r\n                    fileInput.multiple = true;\r\n                    fileInput.onchange = (e: any) => {\r\n                      let fileArray = []\r\n                      let files = e.target.files;\r\n                      for(var i = 0; i < files.length; i++){\r\n                        fileArray.push(files[i])\r\n                      }\r\n\r\n                      filesDropped(fileArray);\r\n                    }\r\n                    fileInput.click();\r\n                  }} >\r\n                    <Add style={{stroke: 'white'}} />\r\n                  </Button>\r\n                </section>\r\n              )} \r\n            </Dropzone>\r\n        \r\n        </Box>\r\n      </Box>\r\n    );\r\n  \r\n}\r\n\r\n\r\n// export default connect((state: StoreState) => {\r\n//   return {\r\n//     prefs: state?.preferences?.config\r\n//   }\r\n// }, (dispatch) => {\r\n//   return {\r\n//     updatePrefs: (update: any) => dispatch(prefActions.updatePrefs(update))\r\n//   }\r\n// })(SharedFileCard)","const defvalues = {\r\n  header: {\r\n    top: {\r\n      style: {\r\n        backgroundColor: '#333333',\r\n        fontSize: 10,\r\n        color: 'white',\r\n        textAlign: 'center'\r\n      }\r\n    },\r\n    middle: {\r\n      style: {\r\n        backgroundColor: 'chocolate'\r\n      },\r\n      selectedStyle: {\r\n        backgroundColor: '#b13525',\r\n        fontWeight: 'bold'\r\n      }\r\n    },\r\n    bottom: {\r\n      style: {\r\n        background: '#f3f4f5',\r\n        color: '#667280',\r\n        fontSize: '.9em'\r\n      },\r\n      selectedStyle: {\r\n        backgroundColor: '#b13525',\r\n        fontWeight: 'bold'\r\n      }\r\n    }\r\n  },\r\n  taskList: {\r\n    title: {\r\n      label: 'Projects',\r\n      style: {\r\n        backgroundColor: '#333333',\r\n        borderBottom: 'solid 1px silver',\r\n        color: 'white',\r\n        textAlign: 'center'\r\n      }\r\n    },\r\n    task: {\r\n      style: {\r\n        backgroundColor: '#fbf9f9'\r\n      }\r\n    },\r\n    verticalSeparator: {\r\n      style: {\r\n        backgroundColor: '#333333'\r\n      },\r\n      grip: {\r\n        style: {\r\n          backgroundColor: '#cfcfcd'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dataViewPort: {\r\n    rows: {\r\n      style: {\r\n      }\r\n    },\r\n    task: {\r\n      showLabel: false,\r\n\r\n      style: {\r\n        position: 'absolute',\r\n        borderRadius: 14,\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        backgroundColor: 'grey'\r\n      },\r\n      selectedStyle: {\r\n        position: 'absolute',\r\n        borderRadius: 14,\r\n        border: 'solid 1px #ff00fa',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        backgroundColor: 'grey'\r\n      }\r\n    }\r\n  },\r\n  links: {\r\n    color: 'black',\r\n    selectedColor: '#ff00fa'\r\n  }\r\n};\r\n\r\nclass Config {\r\n  private data: any;\r\n  constructor() {\r\n    this.data = defvalues;\r\n  }\r\n\r\n  load = (values?: any) => {\r\n    this.data = {};\r\n    if (values) this.populate(values, defvalues, this.data);\r\n    else this.data = defvalues;\r\n  };\r\n\r\n  populate(values: any, defvalues: any, final: any) {\r\n    if (!this.isObject(defvalues)) return;\r\n    for (let key in defvalues) {\r\n      if (!values[key]) {\r\n        //if not exits\r\n        final[key] = defvalues[key];\r\n      } else {\r\n        //if it does\r\n        final[key] = values[key];\r\n        this.populate(values[key], defvalues[key], final[key]);\r\n      }\r\n    }\r\n  }\r\n  isObject(value: any) {\r\n    if (typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number') return false;\r\n    return true;\r\n  }\r\n\r\n  get values() {\r\n    return this.data;\r\n  }\r\n}\r\n\r\nconst config = new Config();\r\nexport default config;\r\n","import React, { Component, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Config from '../../helpers/config/Config';\r\nimport { CaretLeftFill, CaretRightFill } from 'grommet-icons'\r\n\r\nexport interface VerticalSplitterProps {\r\n  className?: string;\r\n  enabled?: boolean;\r\n  onTaskListSizing?: (delta: number) => void;\r\n}\r\n\r\nconst VerticalSpliter : React.FC<VerticalSplitterProps> = (props) => {\r\n  const verticalRef = useRef<HTMLDivElement>(null)\r\n\r\n  const dragging = useRef<boolean>(false)\r\n\r\n  const [ isDragging, _setDragging ] = useState<boolean>(false)\r\n\r\n  const setDragging = (val: boolean) => {\r\n    dragging.current = val;\r\n    _setDragging(val)\r\n  }\r\n  const draggingPosition = useRef<any>(0);\r\n\r\n\r\n  const onMouseDown = (e: React.MouseEvent) => {\r\n    if (e.button === 0 && props.enabled) {\r\n      draggingPosition.current = e.clientX;\r\n      setDragging(true)\r\n\r\n      const cleanup = () => {\r\n        setDragging(false)\r\n        window.removeEventListener('mousemove', onMouseMove as EventListenerOrEventListenerObject)\r\n        window.removeEventListener('mouseup', cleanup)\r\n      }\r\n      window.addEventListener('mousemove', onMouseMove as EventListenerOrEventListenerObject)\r\n      window.addEventListener('mouseup', cleanup)\r\n    }\r\n  }\r\n\r\n\r\n  const onMouseMove = (e: MouseEvent) => {\r\n    if(dragging.current){ \r\n      e.stopPropagation();\r\n      let bounds = draggingPosition.current || 0\r\n      let delta = bounds - e.clientX;//\r\n      draggingPosition.current = e.clientX;\r\n\r\n    if(delta > 0) console.log(\"delta\", delta)\r\n      props.onTaskListSizing?.(e.clientX + 6);\r\n    }\r\n    \r\n  }\r\n\r\n\r\n    return (\r\n      <div \r\n        ref={verticalRef}\r\n        className={`${props.className} ${props.enabled ? 'enabled': ''} ${isDragging == true ? 'dragging': ''}`} \r\n        style={Config.values.taskList.verticalSeparator.style} \r\n        onMouseDown={onMouseDown}\r\n        >\r\n          <CaretLeftFill />\r\n          <CaretRightFill />\r\n      \r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\nexport default styled(VerticalSpliter)`\r\n  width: 5px;\r\n  transition: width 100ms ease-out;\r\n  cursor: ${p => p.enabled ? 'col-resize' : 'auto'};\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & svg{\r\n    transition opacity 100ms ease-out;\r\n  }\r\n\r\n  &:not(:hover) svg{\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover svg{\r\n    opacity: 1;\r\n  }\r\n\r\n  &.enabled:hover{\r\n    width: 13px;\r\n  }\r\n  &.dragging{\r\n    width: 13px;\r\n  }\r\n`","export const MODE_NONE = 0;\r\nexport const MODE_MOVE = 1;\r\nexport const MOVE_RESIZE_LEFT = 2;\r\nexport const MOVE_RESIZE_RIGHT = 3;\r\n\r\nexport const BUFFER_DAYS = 30;\r\n\r\nexport const DATA_CONTAINER_WIDTH = 5000;\r\n\r\nexport const VIEW_MODE_DAY = 'day';\r\nexport const VIEW_MODE_WEEK = 'week';\r\nexport const VIEW_MODE_MONTH = 'month';\r\nexport const VIEW_MODE_YEAR = 'year';\r\n\r\nexport const DAY_YEAR_MODE = 4;\r\nexport const DAY_MONTH_MODE = 28;\r\nexport const DAY_WEEK_MODE = 28; //each hour 20 px\r\nexport const HOUR_DAY_WEEK = 20;\r\nexport const DAY_DAY_MODE = 792; //each hour 60 px\r\nexport const HOUR_DAY_DAY = 60;\r\n\r\nexport const LINK_POS_RIGHT = 'LINK_POS_RIGHT';\r\nexport const LINK_POS_LEFT = 'LINK_POS_LEFT'","const MIL_IN_HOUR = 1000 * 3600;\r\nclass DateHelper {\r\n  dateToPixel(input: any, nowposition: number, daywidth: number) {\r\n    let nowDate = this.getToday(); //\r\n    let inputTime = new Date(input);\r\n\r\n    //Day light saving patch\r\n    let lightSavingDiff = (inputTime.getTimezoneOffset() - nowDate.getTimezoneOffset()) * 60 * 1000;\r\n    let timeDiff = inputTime.getTime() - nowDate.getTime() - lightSavingDiff;\r\n    let pixelWeight = daywidth / 24; //Value in pixels of one hour\r\n    return (timeDiff / MIL_IN_HOUR) * pixelWeight + nowposition;\r\n  }\r\n  pixelToDate(position: number, nowposition: number, daywidth: number) {\r\n    let hoursInPixel = 24 / daywidth;\r\n    let pixelsFromNow = position - nowposition;\r\n    let today = this.getToday();\r\n    let milisecondsFromNow = today.getTime() + pixelsFromNow * hoursInPixel * MIL_IN_HOUR;\r\n    let result = new Date(milisecondsFromNow);\r\n    let lightSavingDiff = (result.getTimezoneOffset() - today.getTimezoneOffset()) * 60 * 1000;\r\n    result.setTime(result.getTime() + lightSavingDiff);\r\n    return result;\r\n  }\r\n  getToday() {\r\n    let date = new Date();\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n  }\r\n  monthDiff(start: any, end: any) {\r\n    return Math.abs(end.getMonth() - start.getMonth() + 12 * (end.getFullYear() - start.getFullYear()));\r\n  }\r\n\r\n  daysInMonth(month: any, year: any) {\r\n    return new Date(year, month, 0).getDate();\r\n  }\r\n\r\n  dayToPosition = (day: any, now: number, dayWidth: number) => {\r\n    return day * dayWidth + now;\r\n  };\r\n\r\n  daysInYear = (year: number) => {\r\n    return this.isLeapYear(year) ? 366 : 365;\r\n  };\r\n\r\n  isLeapYear(year: number) {\r\n    return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n  }\r\n}\r\nconst helper = new DateHelper();\r\nexport default helper;\r\n","import React from \"react\";\r\nimport { PureComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface HeaderItemProps{\r\n    left?: number;\r\n    width: number;\r\n    label?: string | number;\r\n    mode?: string;\r\n\r\n    className?: string;\r\n  }\r\n  \r\n  export const BaseHeaderItem : React.FC<HeaderItemProps> = (props) => {\r\n\r\n      return (\r\n        <div\r\n            className={props.className}\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            borderLeft: 'solid 1px rgb(216, 217, 218)',\r\n            position: 'absolute',\r\n            height: 20,\r\n            left: props.left,\r\n            width: props.width,\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          <div>{props.label}</div>\r\n        </div>\r\n      );\r\n    \r\n  }\r\n  \r\n  export const HeaderItem = styled(BaseHeaderItem)`\r\n  \r\n    &:hover{\r\n        background: rgba(127, 127, 127, 0.3);\r\n    }\r\n  `","import React from \"react\";\r\nimport { Link, Task, TimelineStyle } from \"../types\";\r\n\r\nexport interface ITimelineContext {\r\n    moveTimeline?: (new_x: number) => void;\r\n    scrollLeft?: number;\r\n\r\n    style?: TimelineStyle\r\n\r\n    mode?: string;\r\n\r\n    links?: Link[];\r\n    data?: Task[];\r\n\r\n    dayWidth?: number;\r\n    itemHeight?: number;\r\n\r\n    changeMode?: (mode: string) => void;\r\n}   \r\n\r\nexport const TimelineContext = React.createContext<ITimelineContext>({})","import { Box } from \"grommet\"\r\nimport React from \"react\"\r\nexport const BackgroundStripe = (props: any) => {\r\n    return (\r\n        <Box \r\n            background={props.background}\r\n            style={{\r\n                position: 'absolute', \r\n                left: props.left, \r\n                height: '100%', \r\n                width: `${props.width}px`\r\n            }}></Box>\r\n    )\r\n}","import React, { PureComponent, useContext, useRef } from 'react';\r\nimport moment from 'moment';\r\nimport { BUFFER_DAYS, DATA_CONTAINER_WIDTH } from '../../Const';\r\nimport { VIEW_MODE_DAY, VIEW_MODE_WEEK, VIEW_MODE_MONTH, VIEW_MODE_YEAR } from '../../Const';\r\nimport { Box } from 'grommet'\r\nimport Config from '../../helpers/config/Config';\r\nimport DateHelper from '../../helpers/DateHelper';\r\nimport { HeaderItem } from './HeaderItem';\r\nimport { TimelineContext } from '../../context';\r\nimport { BackgroundStripe } from './BackgroundStripe'\r\nimport styled from 'styled-components'\r\n\r\nexport interface HeaderProps {\r\n  nowposition?: number;\r\n  scrollLeft?: number;\r\n  currentday?: number;\r\n  mode?: string;\r\n  dayWidth?: number;\r\n  currentDate?: Date;\r\n  numVisibleDays?: number;\r\n  headerData?: any;\r\n  currentPosition?: {x: number, y: number};\r\n  className?: string;\r\n}\r\n\r\nconst Header : React.FC<HeaderProps> = (props) => {\r\n  const headerRef = useRef<HTMLDivElement>(null)\r\n\r\n  const { mode, dayWidth } = useContext(TimelineContext)\r\n  \r\n  const getFormat = (mode: string, position?: string) => {\r\n    switch (mode) {\r\n      case 'year':\r\n        return 'YYYY';\r\n      case 'month':\r\n        if (position == 'top') return 'MMMM YYYY';\r\n        else return 'MMMM';\r\n      case 'week':\r\n        if (position == 'top') return 'ww MMMM YYYY';\r\n        else return 'ww';\r\n      case 'dayweek':\r\n        return 'dd';\r\n      case 'daymonth':\r\n        return 'D';\r\n    }\r\n  }\r\n\r\n  const getModeIncrement = (date : any, mode : string) => {\r\n    switch (mode) {\r\n      case 'year':\r\n        return DateHelper.daysInYear(date.year());\r\n      case 'month':\r\n        return date.daysInMonth();\r\n      case 'week':\r\n        return 7;\r\n      default:\r\n        return 1;\r\n    }\r\n  }\r\n\r\n  //TODO mode\r\n const getStartDate = (date: moment.Moment, mode: string) => {\r\n    let year = null;\r\n    switch (mode) {\r\n      case 'year':\r\n        year = date.year();\r\n        return moment([year, 0, 1]);\r\n      case 'month':\r\n        year = date.year();\r\n        let month = date.month();\r\n        return moment([year, month, 1]);\r\n      case 'week':\r\n        return date.clone().startOf('week');\r\n      default:\r\n        return date;\r\n    }\r\n  };\r\n\r\n  //TODO change mode type to timeline mode (also make timeline mode dynamic)\r\n  const renderTime = (left: number, width: number, mode: string, key: any ) => {\r\n    let result = [];\r\n    let hourWidth = width / 24;\r\n    let iterLeft = 0;\r\n    for (let i = 0; i < 24; i++) {\r\n      result.push(<HeaderItem key={i} left={iterLeft} width={hourWidth} label={mode == 'shorttime' ? i : `${i}:00`} />);\r\n      iterLeft = iterLeft + hourWidth;\r\n    }\r\n    return (\r\n      <div key={key} style={{ position: 'absolute', height: 20, left: left, width: width }}>\r\n        {' '}\r\n        {result}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //TODO make mode timelinemode\r\n  const getBox = (date: moment.Moment, mode: string, lastLeft: number = 0) => {\r\n    let increment = getModeIncrement(date, mode) * (dayWidth || 0);\r\n    if (!lastLeft) {\r\n      let starDate = getStartDate(date, mode);\r\n      starDate = starDate.startOf('day');\r\n      let now = moment().startOf('day');\r\n      let daysInBetween = starDate.diff(now, 'days');\r\n      lastLeft = DateHelper.dayToPosition(daysInBetween, (props.nowposition||0), (dayWidth|| 0));\r\n    }\r\n\r\n    return { left: lastLeft, width: increment };\r\n  }\r\n\r\n  //TODO change type to enum of options\r\n  const renderHeaderRows = (top : string, middle: string, bottom: string) => {\r\n    let result : any = { top: [], middle: [], bottom: [], background: [] };\r\n    let lastLeft : any = {};\r\n    let currentTop = '';\r\n    let currentMiddle = '';\r\n    let currentBottom = '';\r\n    let currentDate = null;\r\n    let box : any = null;\r\n\r\n    let start = props.currentday;\r\n    let end =( props.currentday || 0) + (props.numVisibleDays||0);\r\n\r\n    for (let i = (start||0) - BUFFER_DAYS; i < end + BUFFER_DAYS; i++) {\r\n      //The unit of iteration is day\r\n      currentDate = moment().add(i, 'days');\r\n      if (currentTop != currentDate.format(getFormat(top, 'top'))) {\r\n        currentTop = currentDate.format(getFormat(top, 'top'));\r\n        box = getBox(currentDate, top, lastLeft.top);\r\n        lastLeft.top = box.left + box.width;\r\n        result.top.push(<HeaderItem key={i} left={box.left} width={box.width} label={currentTop} />);\r\n      }\r\n\r\n      if (currentMiddle != currentDate.format(getFormat(middle))) {\r\n        currentMiddle = currentDate.format(getFormat(middle));\r\n        box = getBox(currentDate, middle, lastLeft.middle);\r\n        lastLeft.middle = box.left + box.width;\r\n        result.middle.push(<HeaderItem key={i} left={box.left} width={box.width} label={currentMiddle} />);\r\n      }\r\n\r\n      if (currentBottom != currentDate.format(getFormat(bottom))) {\r\n        currentBottom = currentDate.format(getFormat(bottom));\r\n        box = getBox(currentDate, bottom, lastLeft.bottom);\r\n        lastLeft.bottom = box.left + box.width;\r\n        if (bottom == 'shorttime' || bottom == 'fulltime') {\r\n          let stripes = Array.apply(null, Array(24)).map(function () {}).map((x, ix) => (\r\n            <BackgroundStripe key={`tile-${i}-${ix}`} background={ix % 2 == 0 ? 'light-1' : 'neutral-1'} left={box.left + ((box.width / 24) * ix)} width={box.width / 24} />\r\n          ))\r\n          result.background.push(stripes)\r\n          result.bottom.push(renderTime(box.left, box.width, bottom, i));\r\n        } else {\r\n          result.background.push(<BackgroundStripe key={`tile-${i}`} left={box.left} width={box.width} background={i % 2 == 0 ? 'light-1' : 'neutral-1'} />)\r\n          result.bottom.push(<HeaderItem key={i} left={box.left} width={box.width} label={currentBottom} />);\r\n        }\r\n\r\n        \r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"timeLine-main-header-container\" style={{ width: DATA_CONTAINER_WIDTH, maxWidth: DATA_CONTAINER_WIDTH }}>\r\n        <Box \r\n          background=\"neutral-4\"\r\n          className=\"header-top\">\r\n          {result.top}\r\n        </Box>\r\n        <Box\r\n          background=\"accent-2\"\r\n          className=\"header-middle\">\r\n          {result.middle}\r\n        </Box>\r\n        <Box\r\n          background=\"accent-1\"\r\n          className=\"header-bottom\" >\r\n          {result.bottom}\r\n        </Box>\r\n        <Box className=\"header-bottom\" style={{height: '100%', ...Config.values.header.bottom.style}}>\r\n          {result.background}\r\n        </Box>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    switch (mode || props.mode) {\r\n      case VIEW_MODE_DAY:\r\n        return renderHeaderRows('week', 'dayweek', 'fulltime');\r\n      case VIEW_MODE_WEEK:\r\n        return renderHeaderRows('month', 'week', 'dayweek');\r\n      case VIEW_MODE_MONTH:\r\n        return renderHeaderRows('month', 'dayweek', 'daymonth');\r\n      case VIEW_MODE_YEAR:\r\n        return renderHeaderRows('year', 'month', 'week');\r\n    }\r\n  };\r\n\r\n  /*\r\n  const setBoundaries = () => {\r\n    this.start = this.props.currentday - BUFFER_DAYS;\r\n    this.end = this.props.currentday + this.props.numVisibleDays + BUFFER_DAYS;\r\n  };\r\n\r\n  const needToRender = () => {\r\n    return this.props.currentday < this.start || this.props.currentday + this.props.numVisibleDays > this.end;\r\n  };*/\r\n\r\n    if (headerRef.current) headerRef.current.scrollLeft = (props.scrollLeft||0);\r\n    //Check boundaries to see if wee need to recalcualte header\r\n    // if (this.needToRender()|| !this.cache){\r\n    //     this.cache=this.renderHeader();\r\n    //     this.setBoundaries();\r\n    // }\r\n    return (\r\n      <div id=\"timeline-header\" ref={headerRef} className={`${props.className} timeLine-main-header-viewPort`}>\r\n        {renderHeader()}\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default styled(Header)`\r\n.header-top {\r\n  height: 20px;\r\n\r\n  border-bottom: solid 0.5px silver;\r\n}\r\n\r\n.header-middle {\r\n  height: 20px;\r\n  color: white;\r\n  font-size: 10px;\r\n  border-bottom: solid 0.5px silver;\r\n}\r\n.header-bottom {\r\n  height: 20px;\r\n  font-size: 10px;\r\n  border-bottom: solid 0.5px silver;\r\n}\r\n`;\r\n","import React, { Component } from 'react';\r\nimport DateHelper from '../../helpers/DateHelper';\r\nimport { MODE_NONE, MODE_MOVE, MOVE_RESIZE_LEFT, MOVE_RESIZE_RIGHT } from '../../Const';\r\nimport { LINK_POS_LEFT, LINK_POS_RIGHT } from '../../Const';\r\nimport Config from '../../helpers/config/Config';\r\nimport { debounce } from 'lodash';\r\nimport { Box } from 'grommet';\r\nimport { Task } from '../../types';\r\n\r\n\r\nexport interface DataTaskProps {\r\n  dayWidth?: number;\r\n  item?: Task;\r\n  label?: any;\r\n  left?: number;\r\n  width?: number;\r\n  onStartCreateLink?: (item: any, pos: any) => void;\r\n  onChildDrag?: any;\r\n  onTaskChanging?: any;\r\n  onFinishCreateLink?: any;\r\n  onUpdateTask?: any;\r\n  isSelected?: boolean;\r\n  color?: any;\r\n  onSelectItem?: any;\r\n  height?: any;\r\n  nowposition?: any;\r\n}\r\n\r\nexport interface DataTaskState {\r\n  dragging: boolean;\r\n  left: number;\r\n  width: number;\r\n  mode: any;\r\n}\r\n\r\nexport default class DataTask extends Component<DataTaskProps, DataTaskState> {\r\n  draggingPosition: any;\r\n  constructor(props: DataTaskProps) {\r\n    super(props);\r\n    this.calculateStyle = this.calculateStyle.bind(this);\r\n    this.state = { dragging: false, left: this.props.left || 0, width: this.props.width || 0, mode: MODE_NONE };\r\n  }\r\n\r\n  onCreateLinkMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, position: string) => {\r\n    if (e.button === 0) {\r\n      e.stopPropagation();\r\n      this.props.onStartCreateLink?.(this.props.item, position);\r\n    }\r\n  };\r\n  onCreateLinkMouseUp = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, position: any) => {\r\n    e.stopPropagation();\r\n    this.props.onFinishCreateLink(this.props.item, position);\r\n  };\r\n  onCreateLinkTouchStart = (e: React.TouchEvent<HTMLDivElement>, position: string) => {\r\n    e.stopPropagation();\r\n    this.props.onStartCreateLink?.(this.props.item, position);\r\n  };\r\n  onCreateLinkTouchEnd = (e: React.TouchEvent<HTMLDivElement>, position: any) => {\r\n    e.stopPropagation();\r\n    this.props.onFinishCreateLink(this.props.item, position);\r\n  };\r\n\r\n  componentDidUpdate(props: any, state: { dragging: any; }) {\r\n    if (this.state.dragging && !state.dragging) {\r\n      document.addEventListener('mousemove', this.doMouseMove);\r\n      document.addEventListener('mouseup', this.doMouseUp);\r\n      document.addEventListener('touchmove', this.doTouchMove);\r\n      document.addEventListener('touchend', this.doTouchEnd);\r\n    } else if (!this.state.dragging && state.dragging) {\r\n      document.removeEventListener('mousemove', this.doMouseMove);\r\n      document.removeEventListener('mouseup', this.doMouseUp);\r\n      document.removeEventListener('touchmove', this.doTouchMove);\r\n      document.removeEventListener('touchend', this.doTouchEnd);\r\n    }\r\n  }\r\n\r\n  updatePosition(){\r\n    let new_start_date = DateHelper.pixelToDate(this.state.left, this.props.nowposition, this.props.dayWidth || 0);\r\n    let new_end_date = DateHelper.pixelToDate(this.state.left + this.state.width, this.props.nowposition, this.props.dayWidth || 0);\r\n  \r\n    this.props.onUpdateTask(this.props.item, { start: new_start_date, end: new_end_date });\r\n  }\r\n\r\n  dragStart(x: any, mode: any) {\r\n    this.props.onChildDrag(true);\r\n    this.draggingPosition = x;\r\n    this.setState({\r\n      dragging: true,\r\n      mode: mode,\r\n      left: this.props.left || 0,\r\n      width: this.props.width || 0\r\n    });\r\n  }\r\n  dragProcess(x: number) {\r\n    let delta = this.draggingPosition - x;\r\n    let newLeft = this.state.left;\r\n    let newWidth = this.state.width;\r\n\r\n    switch (this.state.mode) {\r\n      case MODE_MOVE:\r\n        newLeft = this.state.left - delta;\r\n        break;\r\n      case MOVE_RESIZE_LEFT:\r\n        newLeft = this.state.left - delta;\r\n        newWidth = this.state.width + delta;\r\n        break;\r\n      case MOVE_RESIZE_RIGHT:\r\n        newWidth = this.state.width - delta;\r\n        break;\r\n    }\r\n    //the coordinates need to be global\r\n    let changeObj = {\r\n      item: this.props.item,\r\n      position: { start: newLeft - this.props.nowposition, end: newLeft + newWidth - this.props.nowposition }\r\n    };\r\n  \r\n    this.updatePosition()\r\n\r\n    this.props.onTaskChanging(changeObj);\r\n    this.setState({ left: newLeft, width: newWidth });\r\n    this.draggingPosition = x;\r\n  }\r\n  dragEnd() {\r\n    this.props.onChildDrag(false);\r\n    this.updatePosition()\r\n    this.setState({ dragging: false, mode: MODE_NONE });\r\n  }\r\n\r\n  doMouseDown = (e: React.MouseEvent<HTMLDivElement>, mode: number) => {\r\n    if (!this.props.onUpdateTask) return;\r\n    if (e.button === 0) {\r\n      e.stopPropagation();\r\n      this.dragStart(e.clientX, mode);\r\n    }\r\n  };\r\n  doMouseMove = (e: MouseEvent) => {\r\n    if (this.state.dragging) {\r\n      e.stopPropagation();\r\n      this.dragProcess(e.clientX);\r\n    }\r\n  };\r\n  doMouseUp = () => {\r\n    this.dragEnd();\r\n  };\r\n\r\n  doTouchStart = (e: React.TouchEvent<HTMLDivElement>, mode: number) => {\r\n    if (!this.props.onUpdateTask) return;\r\n    console.log('start');\r\n    e.stopPropagation();\r\n    this.dragStart(e.touches[0].clientX, mode);\r\n  };\r\n  doTouchMove = (e: any) => {\r\n    if (this.state.dragging) {\r\n      console.log('move');\r\n      e.stopPropagation();\r\n      this.dragProcess(e.changedTouches[0].clientX);\r\n    }\r\n  };\r\n  doTouchEnd = (e: any) => {\r\n    console.log('end');\r\n    this.dragEnd();\r\n  };\r\n\r\n  calculateStyle() {\r\n    let configStyle = this.props.isSelected ? Config.values.dataViewPort.task.selectedStyle : Config.values.dataViewPort.task.style;\r\n    let backgroundColor = this.props.color ? this.props.color : configStyle.backgroundColor;\r\n\r\n    if (this.state.dragging) {\r\n      return {\r\n        ...configStyle,\r\n        backgroundColor: backgroundColor,\r\n        left: this.state.left,\r\n        width: this.state.width,\r\n        height: this.props.height - 5,\r\n      };\r\n    } else {\r\n      return { ...configStyle, backgroundColor, left: this.props.left, width: this.props.width, height: this.props.height - 5 };\r\n    }\r\n  }\r\n  render() {\r\n    let style = this.calculateStyle();\r\n    return (\r\n      <Box\r\n        focusIndicator={false}\r\n        elevation={'medium' /*this.props.isSelected ? 'large': 'none'*/}\r\n        onMouseDown={(e) => this.doMouseDown(e, MODE_MOVE)}\r\n        onTouchStart={(e) => this.doTouchStart(e, MODE_MOVE)}\r\n        onClick={(e) => {\r\n          this.props.onSelectItem(this.props.item);\r\n        }}\r\n        style={{\r\n          ...style,\r\n          top: 3,\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <div\r\n          className=\"timeLine-main-data-task-side\"\r\n          style={{ top: 0, left: -4, height: style.height }}\r\n          onMouseDown={(e) => this.doMouseDown(e, MOVE_RESIZE_LEFT)}\r\n          onTouchStart={(e) => this.doTouchStart(e, MOVE_RESIZE_LEFT)}\r\n        >\r\n          <div\r\n            className=\"timeLine-main-data-task-side-linker\"\r\n            onMouseUp={(e) => this.onCreateLinkMouseUp(e, LINK_POS_LEFT)}\r\n            onTouchEnd={(e) => this.onCreateLinkTouchEnd(e, LINK_POS_LEFT)}\r\n          />\r\n        </div>\r\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center', overflow: 'hidden' }}>\r\n            {this.props.item?.showLabel ? ((typeof(this.props.item.showLabel) === 'string') ? this.props.item.showLabel : this.props.item.name) : ''}\r\n        </div>\r\n        <div\r\n          className=\"timeLine-main-data-task-side\"\r\n          style={{ top: 0, left: style.width - 3, height: style.height }}\r\n          onMouseDown={(e) => this.doMouseDown(e, MOVE_RESIZE_RIGHT)}\r\n          onTouchStart={(e) => this.doTouchStart(e, MOVE_RESIZE_RIGHT)}\r\n        >\r\n          <div\r\n            className=\"timeLine-main-data-task-side-linker\"\r\n            onMouseDown={(e) => this.onCreateLinkMouseDown(e, LINK_POS_RIGHT)}\r\n            onTouchStart={(e) => this.onCreateLinkTouchStart(e, LINK_POS_RIGHT)}\r\n          />\r\n        </div>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { Box } from \"grommet\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Config from '../../helpers/config/Config';\r\n\r\nexport default class DataRow extends Component<any, any> {\r\n    constructor(props: {} | Readonly<{}>) {\r\n      super(props);\r\n    }\r\n    render() {\r\n      return (\r\n        <Box\r\n          className=\"timeLine-main-data-row\"\r\n          style={{ \r\n              ...Config.values.dataViewPort.rows.style, \r\n              top: this.props.top, \r\n              height: this.props.itemheight, \r\n              borderBottom: '2px dashed #d3d3d350', \r\n              strokeDasharray: 1000, \r\n              strokeDashoffset: 1000 \r\n            }}\r\n        >\r\n          {this.props.children}\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n  ","import { DAY_DAY_MODE, DAY_MONTH_MODE, DAY_WEEK_MODE, DAY_YEAR_MODE, VIEW_MODE_DAY, VIEW_MODE_MONTH, VIEW_MODE_WEEK, VIEW_MODE_YEAR } from \"../Const\";\r\n\r\nexport const getBackgroundWidth = (mode: string) => {\r\n    switch(mode){\r\n        case 'year':\r\n            return 7;\r\n        case 'month':\r\n            return 1;\r\n        case 'week':\r\n            return 1;\r\n        case 'day':\r\n            return 1 / 24;\r\n        default:\r\n            return 1;\r\n    }\r\n}\r\n\r\nexport const getBackgroundPosition = (mode: string) => {\r\n    switch(mode){\r\n        case 'year':\r\n            return '12px'\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\n\r\nexport const getDayWidth = (mode: string) => {\r\n    switch (mode) {\r\n      case VIEW_MODE_DAY:\r\n        return DAY_DAY_MODE;\r\n      case VIEW_MODE_WEEK:\r\n        return DAY_WEEK_MODE;\r\n      case VIEW_MODE_MONTH:\r\n        return DAY_MONTH_MODE;\r\n      case VIEW_MODE_YEAR:\r\n        return DAY_YEAR_MODE;\r\n      default:\r\n        return DAY_MONTH_MODE;\r\n    }\r\n  }\r\n","import React, { createRef, useEffect, useRef, useState } from 'react';\r\nimport { DATA_CONTAINER_WIDTH } from '../../Const';\r\nimport DataTask from './DataTask';\r\nimport DataRow from './DataRow';\r\nimport DateHelper from '../../helpers/DateHelper';\r\nimport Config from '../../helpers/config/Config';\r\nimport { useContext } from 'react';\r\nimport { getBackgroundPosition, getBackgroundWidth } from '../../utils'\r\nimport { TimelineContext } from '../../context'\r\nimport styled from 'styled-components'\r\nimport useResizeAware from 'react-resize-aware'\r\n\r\nexport const BaseDataViewPort : React.FC<any> = (props) => {\r\n\r\n  const dataViewRef = useRef<HTMLDivElement>(null)\r\n\r\n  const { mode, style, dayWidth, moveTimeline, scrollLeft } = useContext(TimelineContext)\r\n\r\n  const [ childDragging, setChildDragging ] = useState<boolean>(false) \r\n  \r\n\r\n  const reporter = (target?: HTMLElement | null) => {\r\n    let dimensions = {width: target?.clientWidth || null, height: target?.clientHeight || null}\r\n    if(dimensions.width && dimensions.height) props.onSize?.(dimensions)\r\n    return dimensions\r\n  }\r\n\r\n  const [ resizeListener, sizes ] = useResizeAware(reporter)\r\n\r\n  const getContainerHeight = (rows: number) => {\r\n    let new_height = rows > 0 ? rows * props.itemheight : 10;\r\n    return new_height;\r\n  }\r\n  const onChildDrag = (dragging: boolean) => {\r\n    setChildDragging(dragging)\r\n  };\r\n\r\n  const renderRows = () => {\r\n    let result = [];\r\n    for (let i = props.startRow; i < props.endRow + 1; i++) {\r\n      let item = props.data[i];\r\n      if (!item) break;\r\n      //FIXME PAINT IN BOUNDARIES\r\n\r\n      let new_position = DateHelper.dateToPixel(item.start, props.nowposition, dayWidth || 0);\r\n      let new_width = DateHelper.dateToPixel(item.end, props.nowposition, dayWidth || 0) - new_position;\r\n      result.push(\r\n        <DataRow\r\n          isSelected={props.selectedItem == item}\r\n           key={i} \r\n           label={item.name} \r\n           top={i * (props.itemheight + 5)} \r\n           left={20} \r\n           itemheight={(props.itemheight + 5)}>\r\n          <DataTask\r\n            item={item}\r\n            label={item.name}\r\n            nowposition={props.nowposition}\r\n            dayWidth={dayWidth}\r\n            color={item.color}\r\n            left={new_position}\r\n            width={new_width}\r\n            height={props.itemheight}\r\n            onChildDrag={onChildDrag}\r\n            isSelected={props.selectedItem == item}\r\n            onSelectItem={props.onSelectItem}\r\n            onStartCreateLink={props.onStartCreateLink}\r\n            onFinishCreateLink={props.onFinishCreateLink}\r\n            onTaskChanging={props.onTaskChanging}\r\n            onUpdateTask={props.onUpdateTask}\r\n          >\r\n            {' '}\r\n          </DataTask>\r\n        </DataRow>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const doMouseDown = (e: { button: number; }) => {\r\n    if (e.button === 0 && !childDragging) {\r\n      props.onMouseDown(e);\r\n    }\r\n  };\r\n  const doMouseMove = (e: any) => {\r\n    props.onMouseMove(e, dataViewRef.current);\r\n  };\r\n\r\n  const doTouchStart = (e: any) => {\r\n    if (!childDragging) {\r\n      props.onTouchStart(e);\r\n    }\r\n  };\r\n  const doTouchMove = (e: any) => {\r\n    props.onTouchMove(e, dataViewRef.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(dataViewRef.current) dataViewRef.current.scrollLeft = 0;\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (dataViewRef.current) {\r\n      dataViewRef.current.scrollLeft = props.scrollLeft;\r\n      dataViewRef.current.scrollTop = props.scrollTop;\r\n    }\r\n  }, [props.scrollLeft, props.scrollTop])\r\n\r\n  const backgroundStyle : any = (mode && style?.background) ? style?.background?.(mode, dayWidth || 0) :  {\r\n    background: `linear-gradient(\r\n      to right,\r\n      #5d9634,\r\n      #5d9634 50%,\r\n      #538c2b 50%,\r\n      #538c2b\r\n    )`,\r\n    backgroundSize: `${(getBackgroundWidth(props.mode || 'month') * (dayWidth || 0)) * 2}px 100%`,\r\n    backgroundPositionX: getBackgroundPosition(props.mode || 'month'),\r\n  } \r\n\r\n  return (\r\n      <div\r\n        ref={dataViewRef}\r\n        id=\"timeLinedataViewPort\"\r\n        className={`${props.className} timeLine-main-data-viewPort`}\r\n        onWheel={(evt) => {\r\n          //\r\n          moveTimeline?.((scrollLeft || 0) + evt.deltaX)\r\n        }}\r\n        onMouseDown={doMouseDown}\r\n        onMouseMove={doMouseMove}\r\n        onMouseUp={props.onMouseUp}\r\n        onMouseLeave={props.onMouseLeave}\r\n        onTouchStart={doTouchStart}\r\n        onTouchMove={doTouchMove}\r\n        onTouchEnd={props.onTouchEnd}\r\n        onTouchCancel={props.onTouchCancel}\r\n      >\r\n        {resizeListener}\r\n        <div\r\n          className=\"timeLine-main-data-container\"\r\n          style={{ \r\n            background: 'transparent',\r\n            height: '100%', \r\n            width: DATA_CONTAINER_WIDTH,\r\n            maxWidth: DATA_CONTAINER_WIDTH }}\r\n        >\r\n          {renderRows()}\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport const DataViewPort = styled(BaseDataViewPort)`\r\n.timeLine-main-data-container{\r\n  background: ;\r\n  }\r\n\r\n`\r\n\r\nexport default DataViewPort; \r\n\r\n\r\n//sizeMe({ monitorWidth: true, monitorHeight: true })(DataViewPort);\r\n","import React, { Component } from 'react';\r\nimport Config from '../../helpers/config/Config';\r\n\r\nconst SSHAPE_SIDE_WIDTH = 20;\r\n\r\nclass Link extends Component<any, any>{\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  calcNormCoordinates = () => {\r\n    let cpt1 = { x: 0, y: 0 };\r\n    let cpt2 = { x: 0, y: 0 };\r\n    let middle = 0;\r\n    middle = this.props.start.x + (this.props.end.x - this.props.start.x) / 2;\r\n    cpt1 = { x: middle, y: this.props.start.y };\r\n    cpt2 = { x: middle, y: this.props.end.y };\r\n    return { cpt1: cpt1, cpt2: cpt2 };\r\n  };\r\n\r\n  calcSCoordinates = () => {\r\n    let cpt1 = { x: this.props.start.x + SSHAPE_SIDE_WIDTH, y: this.props.start.y };\r\n    let halfY = (this.props.end.y - this.props.start.y) / 2;\r\n    let cpt2 = { x: cpt1.x, y: cpt1.y + halfY };\r\n    let cpt3 = { x: this.props.end.x - SSHAPE_SIDE_WIDTH, y: cpt2.y };\r\n    let cpt4 = { x: cpt3.x, y: cpt3.y + halfY };\r\n    return { cpt1: cpt1, cpt2: cpt2, cpt3: cpt3, cpt4: cpt4 };\r\n  };\r\n\r\n  getPath = (coords?: any) => {\r\n    let coordinates = null;\r\n    if (this.props.start.x > this.props.end.x) {\r\n      coordinates = this.calcSCoordinates();\r\n      return `M${this.props.start.x} ${this.props.start.y}  ${coordinates.cpt1.x} ${coordinates.cpt1.y} ${coordinates.cpt2.x} ${coordinates.cpt2.y} ${coordinates.cpt3.x} ${coordinates.cpt3.y} ${coordinates.cpt4.x} ${coordinates.cpt4.y} ${this.props.end.x} ${this.props.end.y}`;\r\n    } else {\r\n      coordinates = this.calcNormCoordinates();\r\n      return `M${this.props.start.x} ${this.props.start.y}  ${coordinates.cpt1.x} ${coordinates.cpt1.y} ${coordinates.cpt2.x} ${coordinates.cpt2.y} ${this.props.end.x} ${this.props.end.y}`;\r\n    }\r\n  };\r\n\r\n  onSelect = (e: any) => {\r\n    if (this.props.onSelectItem) this.props.onSelectItem(this.props.item);\r\n  };\r\n\r\n  render() {\r\n    let pathColor = this.props.isSelected ? Config.values.links.selectedColor : Config.values.links.color;\r\n    return (\r\n      <g className=\"timeline-link\">\r\n        <path\r\n          pointerEvents=\"stroke\"\r\n          onMouseDown={this.onSelect}\r\n          stroke=\"white\"\r\n          d={this.getPath()}\r\n          strokeLinejoin=\"round\"\r\n          fill=\"transparent\"\r\n          strokeWidth=\"4\"\r\n          cursor=\"pointer\"\r\n        />\r\n\r\n        <path\r\n          pointerEvents=\"stroke\"\r\n          onMouseDown={this.onSelect}\r\n          stroke={pathColor}\r\n          d={this.getPath()}\r\n          strokeLinejoin=\"round\"\r\n          fill=\"transparent\"\r\n          strokeWidth=\"1\"\r\n          cursor=\"pointer\"\r\n          markerEnd=\"url(#arrow)\"\r\n        />\r\n\r\n        {/* <circle cx={this.props.start.x} \r\n                    cy={this.props.start.y} r=\"3\" fill='white'  \r\n                    stroke={pathColor} strokeWidth=\"1\" />     */}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Link;\r\n","import React, { Component } from 'react';\r\nimport Link from './Link';\r\n\r\nexport default class CreateLink extends Component<any, any> {\r\n  init: boolean;\r\n  lastX: number;\r\n  lastY: number;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { x: this.props.start.x, y: this.props.start.y };\r\n    this.init = false;\r\n    this.lastX = -1;\r\n    this.lastY = -1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousemove', this.doMouseMove);\r\n    document.addEventListener('mouseup', this.doMouseUp);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousemove', this.doMouseMove);\r\n    document.removeEventListener('mouseup', this.doMouseUp);\r\n  }\r\n\r\n  doMouseMove = (e: { clientX: number; clientY: number; }) => {\r\n    if (!this.init) {\r\n      this.lastX = e.clientX;\r\n      this.lastY = e.clientY;\r\n      this.init = true;\r\n    }\r\n    let newX = this.state.x + (e.clientX - this.lastX);\r\n    let newY = this.state.y + (e.clientY - this.lastY);\r\n    this.lastX = e.clientX;\r\n    this.lastY = e.clientY;\r\n    this.setState({ x: newX, y: newY });\r\n  };\r\n\r\n  doMouseUp = (e: any) => {\r\n    this.props.onFinishCreateLink();\r\n  };\r\n\r\n  render() {\r\n    return <Link key={-1} start={{ x: this.props.start.x, y: this.props.start.y }} end={{ x: this.state.x, y: this.state.y }} />;\r\n  }\r\n}\r\n","import React, { Component, useContext, useEffect } from 'react';\r\nimport {Link, Task} from '../../types/index';\r\nimport CreateLink from './CreateLink';\r\nimport DateHelper from '../../helpers/DateHelper';\r\nimport LinkComponent from './Link';\r\nimport { TimelineContext } from '../../context';\r\nimport { useState } from 'react';\r\nimport { useLink, useLinks, useTaskLinks } from '../../hooks/useLinks'\r\nimport { useData, useDataItem } from '../../hooks/useData'\r\n\r\nexport interface LinkViewPortProps {\r\n  selectedItem?: any;\r\n  onSelectItem?: (item: any) => void;\r\n\r\n  dayWidth?: number;\r\n  itemheight?: number;\r\n\r\n  scrollLeft?: number;\r\n  scrollTop?: number;\r\n\r\n  links?: Link[];\r\n  data?: Task[];\r\n\r\n  nowposition?: number;\r\n\r\n  startRow?: number;\r\n  endRow?: number;\r\n\r\n  interactiveMode?: any;\r\n  changingTask?: any;\r\n  taskToCreate?: {task: Task, position: any};\r\n  onFinishCreateLink?: any;\r\n}\r\n\r\nexport interface LinkViewPortState {\r\n  links: Link[];\r\n  data: Task[];\r\n  selectedItem: any\r\n  dayWidth?: number;\r\n  changingTask?: any;\r\n}\r\n\r\ntype LinkViewType = Component<LinkViewPortProps, LinkViewPortState>\r\n\r\n\r\n const LinkViewPort : React.FC<LinkViewPortProps> = (props) => {\r\n   \r\n  const taskToCreate = useDataItem(props.taskToCreate?.task?.id || '')\r\n  const link = useLink(props.taskToCreate?.task?.id)\r\n\r\n  const links = useLinks()\r\n  const { data, dayWidth } = useContext(TimelineContext)\r\n\r\n  const [ selectedItem, setSelectedItem ] = useState<any>(null)\r\n  const [ changingTask, setChangingTask ] = useState<any>()\r\n\r\n  const [ cache, setCache ] = useState<any[]>([])\r\n\r\n  const renderLink = (startItem: { index: any } & Task, endItem: { index?: any; } & Task, link: Link, key: React.Key | null | undefined) => {\r\n    if(!startItem.end || !endItem.start) return;\r\n\r\n    let startPosition = getItemPosition(startItem.index, startItem.end);\r\n    let endPosition = getItemPosition(endItem.index, endItem.start);\r\n    return (\r\n      <LinkComponent\r\n        key={link.id}\r\n        item={link}\r\n        start={{ x: startPosition.x, y: startPosition.y }}\r\n        end={{ x: endPosition.x, y: endPosition.y }}\r\n        isSelected={props.selectedItem == link}\r\n        onSelectItem={props.onSelectItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  const getItemPosition = (index: number, date: Date) => {\r\n    let itemHeight = (props.itemheight || 0 )+ 5\r\n\r\n    let x = DateHelper.dateToPixel(date, 0, dayWidth || 0);\r\n    let y = (index * (itemHeight)) + (itemHeight / 2);\r\n    return { x: x, y: y };\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    let ret : any[] = [];\r\n\r\n    let startItem: any = {}\r\n    let endItem: any = {};\r\n\r\n    if (data?.length == 0) return;\r\n    for (let i = 0; i < (links || []).length; i++) {\r\n      let link = links?.[i];\r\n      if (!link) return;\r\n     // if (renderLinks[link.id]) continue;\r\n\r\n      startItem = data?.find((a) => a.id == link?.source)\r\n    \r\n      if (!startItem) {\r\n        //ret.concat([null])\r\n        continue;\r\n      }\r\n      endItem = data?.find((a) => a.id == link?.target)\r\n\r\n      if (!endItem) {\r\n      //  setCache(cache.concat([null]))\r\n        continue;\r\n      }\r\n\r\n      ret = ret.concat([renderLink(startItem, endItem, link, i)])\r\n     // renderLinks[link.id] = '';\r\n    }\r\n    return ret;\r\n  }\r\n\r\n \r\n\r\n  const renderCreateLink = () => {\r\n    if (props.interactiveMode && props.taskToCreate?.task.id) {\r\n\r\n      if(!taskToCreate || !taskToCreate.end) return console.error(\"No link\")\r\n  \r\n      let position = getItemPosition(taskToCreate?.index, taskToCreate?.end);\r\n      return <CreateLink start={position} onFinishCreateLink={props.onFinishCreateLink} />;\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if(props.changingTask != changingTask){\r\n  //     let view_links = [];\r\n  //     const links = useTaskLinks(props.changingTask.id)\r\n  //     let startPosition : any = {};\r\n  //     let endPosition : any = {};\r\n     \r\n  //     for (let i = 0; i < links.length; i++) {\r\n  //       let link = links[i];\r\n  //       const startItem = useDataItem(link.source)\r\n  //       //startItem = Registry.getTask(link.start);\r\n  //       const endItem = useDataItem(link.target || '')\r\n  //       //  endItem = Registry.getTask(item.link.end);\r\n  //       if(!startItem?.end || !endItem?.end) return;\r\n  //       startPosition = getItemPosition(startItem?.index ||0 , startItem?.end);\r\n  //       if (changingTask.item.id == link.source) startPosition.x = changingTask.position.end;\r\n  //       endPosition = getItemPosition(endItem?.index ||0, endItem?.start);\r\n  //       if (changingTask.item.id == link.target) endPosition.x = changingTask.position.start;\r\n\r\n  //   }\r\n  // }, [props.changingTask])\r\n\r\n  // const renderChangingTaskLinks = () => {\r\n  //   let ret = [];\r\n  //   if (props.changingTask != changingTask) {\r\n      \r\n  //     setChangingTask(props.changingTask)\r\n  //     //Get Links from task\r\n      \r\n  //     const links = useTaskLinks(props.changingTask.id)\r\n  //     if (!links) return;\r\n  //     let item = null;\r\n  //     //let startItem = null;\r\n  //    // let endItem = null;\r\n  //     let startPosition : any = {};\r\n  //     let endPosition : any = {};\r\n     \r\n  //     for (let i = 0; i < links.length; i++) {\r\n  //       let link = links[i];\r\n  //       const startItem = useDataItem(link.source)\r\n  //       //startItem = Registry.getTask(link.start);\r\n  //       const endItem = useDataItem(link.target || '')\r\n  //       //  endItem = Registry.getTask(item.link.end);\r\n  //       if(!startItem?.end || !endItem?.end) return;\r\n  //       startPosition = getItemPosition(startItem?.index ||0 , startItem?.end);\r\n  //       if (changingTask.item.id == link.source) startPosition.x = changingTask.position.end;\r\n  //       endPosition = getItemPosition(endItem?.index ||0, endItem?.start);\r\n  //       if (changingTask.item.id == link.target) endPosition.x = changingTask.position.start;\r\n\r\n  //       ret[link.index] = (\r\n  //         <LinkComponent\r\n  //           key={`link`}\r\n  //           item={item}\r\n  //           start={{ x: startPosition.x, y: startPosition.y }}\r\n  //           end={{ x: endPosition.x, y: endPosition.y }}\r\n  //           isSelected={props.selectedItem == item}\r\n  //           onSelectItem={props.onSelectItem}\r\n  //         />\r\n  //       );\r\n       \r\n      \r\n  //   }\r\n  //   return ret;\r\n  // }\r\n  \r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n\r\n  //   renderChangingTaskLinks();\r\n    \r\n  // }, [props.changingTask])\r\n\r\n    return (\r\n      <svg x={0} y={0} width=\"100%\" pointerEvents=\"none\" style={{ position: 'absolute', top: 0, userSelect: 'none', height: '100%' }}>\r\n        <defs>\r\n          <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\" markerWidth=\"9\" markerHeight=\"9\" orient=\"auto-start-reverse\">\r\n            <path d=\"M 0 0 L 10 5 L 0 10 z\" strokeLinejoin=\"round\" />\r\n          </marker>\r\n        </defs>\r\n        <g transform={`matrix(1,0,0,1,${-((props.scrollLeft || 0) - (props.nowposition||0))},${-(props.scrollTop||0)})`}>\r\n          {renderLinks()}\r\n          {renderCreateLink()}\r\n        </g>\r\n      </svg>\r\n    );\r\n  \r\n}\r\nexport default LinkViewPort","import { useContext } from \"react\";\r\nimport { TimelineContext } from \"../context\";\r\n\r\nexport const useDataItem = (id: string | number) => {\r\n    const { data } = useContext(TimelineContext)\r\n\r\n    let item = data?.map((x, ix) => ({...x, index: ix})).find((a) => a.id == id)\r\n    return item //data?.map((x, ix) => ({...x, index: ix})).find((a) => a.id == id)\r\n}\r\n\r\nexport const useData = () => {\r\n    const { data } = useContext(TimelineContext)\r\n\r\n    return data?.map((x, ix) => ({...x, index: ix}));\r\n}\r\n","import { useContext } from \"react\";\r\nimport { TimelineContext } from \"../context\";\r\n\r\n\r\nexport const useTaskLinks = (task_id?: string | number) => {\r\n    const { links } = useContext(TimelineContext)\r\n    return links?.map((x, ix) => ({...x, index: ix})).filter((a) => a.source == task_id || a.target || task_id)\r\n}\r\nexport const useLink = (id?: string | number) => {\r\n    const { links } = useContext(TimelineContext)\r\n\r\n    if(!id) {\r\n     //  return addLink(id)\r\n    };\r\n    return links?.map((x, ix) => ({...x, index: ix})).find((a) => a.id == id)\r\n}\r\n\r\nexport const useLinks = () => {\r\n    const { links } = useContext(TimelineContext)\r\n\r\n    return links?.map((x, ix) => ({...x, index: ix}));\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class ContentEditable extends Component<any, any> {\r\n  private textInput = React.createRef<HTMLInputElement>()\r\n  isFocus: boolean;\r\n  \r\n  constructor(props: any) {\r\n    super(props);\r\n    this.isFocus = false;\r\n    this.state = {\r\n      editing: false,\r\n      value: this.props.value\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any, prevState: any) {\r\n    if (this.textInput.current && !this.isFocus) {\r\n      this.textInput.current.focus();\r\n      this.isFocus = true;\r\n    }\r\n  }\r\n\r\n  onFocus = () => {\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  onBlur = () => {\r\n    this.finishEditing();\r\n  };\r\n\r\n  handleKey = (e: { keyCode: any; which: any; }) => {\r\n    const keyCode = e.keyCode || e.which;\r\n    if (keyCode === 13) {\r\n      this.finishEditing();\r\n    }\r\n  };\r\n\r\n  finishEditing = () => {\r\n    this.isFocus = false;\r\n    this.setState({ editing: false });\r\n    if (this.props.onChange) this.props.onChange(this.state.value);\r\n  };\r\n\r\n  handleChange = (e: { target: { value: any; }; }) => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  renderDiv = () => {\r\n    return (\r\n      <div tabIndex={this.props.index} onClick={this.onFocus} onFocus={this.onFocus} style={{ width: '100%' }}>\r\n        {' '}\r\n        {this.state.value}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps: { value: any; }, nextState: any) {\r\n    if (nextProps.value != this.props.value) {\r\n      this.setState({value: nextProps.value})\r\n    }\r\n    return true;\r\n  }\r\n\r\n  renderEditor = () => {\r\n    return (\r\n      <input\r\n        ref={this.textInput}\r\n        onBlur={this.onBlur}\r\n        style={{ width: '100%', outlineColor: 'black', outlineStyle: 'oinset' }}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={this.state.value}\r\n        onKeyUp={this.handleKey}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.editing ? this.renderEditor() : this.renderDiv();\r\n  }\r\n}\r\n","import { Box } from \"grommet\";\r\nimport React, { Component } from \"react\";\r\nimport Config from \"../../helpers/config/Config\";\r\nimport ContentEditable from \"../common/ContentEditable\";\r\n\r\nexport class TaskRow extends Component<any, any> {\r\n    constructor(props: any) {\r\n      super(props);\r\n    }\r\n  \r\n    onChange = (value: any) => {\r\n      if (this.props.onUpdateTask) {\r\n        this.props.onUpdateTask(this.props.item, { name: value });\r\n      }\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <Box\r\n            direction=\"row\"\r\n            align=\"center\"\r\n            pad=\"small\"\r\n            justify=\"between\"\r\n          style={{\r\n            top: this.props.top,\r\n            height: this.props.itemheight + 5\r\n          }}\r\n          onClick={(e) => this.props.onSelectItem(this.props.item)}\r\n        >\r\n       \r\n        <div className=\"color-dot\" style={{\r\n            width: 12, \r\n            height: 12, \r\n            borderRadius: 12, \r\n            marginRight: 8,\r\n            background: this.props.item.color \r\n        }} />\r\n  \r\n          {this.props.nonEditable ? (\r\n            <Box tabIndex={this.props.index} >\r\n              {this.props.label}\r\n            </Box>\r\n          ) : (\r\n            <ContentEditable value={this.props.label} index={this.props.index} onChange={this.onChange} />\r\n          )}\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n  ","import { Box } from 'grommet';\r\nimport React, { Component } from 'react';\r\nimport { useContext } from 'react';\r\nimport { useRef } from 'react';\r\nimport { TimelineContext } from '../../context';\r\nimport Config from '../../helpers/config/Config';\r\nimport { Task } from '../../types';\r\nimport { TaskRow } from './TaskRow'\r\nexport class VerticalLine extends Component<any, any>{\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"timeLine-main-data-verticalLine\" style={{ left: this.props.left }} />;\r\n  }\r\n}\r\n\r\n//Task Lis\r\n\r\nconst TaskList : React.FC<any>  = (props) => {\r\n  const taskViewRef = useRef<HTMLDivElement>(null)\r\n\r\n  const { data, itemHeight } = useContext(TimelineContext)\r\n\r\n  const getContainerStyle = (rows: number) => {\r\n    let new_height = rows > 0 ? rows * ((itemHeight || 0) + 5 ): 10;\r\n    return { height: new_height };\r\n  }\r\n\r\n  const renderTaskRow = (data: Task[]) => {\r\n    let result = [];\r\n    for (let i = props.startRow; i < props.endRow + 1; i++) {\r\n      let item = data[i];\r\n      if (!item) break;\r\n      result.push(\r\n        <TaskRow\r\n          key={i}\r\n          index={i}\r\n          item={item}\r\n          label={item.name}\r\n          top={i * ((itemHeight || 0) + 5)}\r\n          itemheight={itemHeight}\r\n          isSelected={props.selectedItem == item}\r\n          onUpdateTask={props.onUpdateTask}\r\n          onSelectItem={props.onSelectItem}\r\n          nonEditable={props.nonEditable}\r\n        />\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const doScroll = () => {\r\n    if(taskViewRef.current) props.onScroll(taskViewRef.current.scrollTop);\r\n  };\r\n\r\n\r\n    const containerStyle = getContainerStyle((data || []).length);\r\n\r\n    return (\r\n      <Box className=\"timeLine-side\">\r\n        <Box  \r\n          height={'60px'}\r\n          background=\"neutral-4\"\r\n          elevation=\"small\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          pad=\"small\"\r\n          direction=\"row\">\r\n          <div>{Config.values.taskList.title.label}</div>\r\n        </Box>\r\n        <Box \r\n          background=\"accent-1\"\r\n          ref={taskViewRef} \r\n          className=\"timeLine-side-task-viewPort\" \r\n          onScroll={doScroll}>\r\n          <Box className=\"timeLine-side-task-container\" style={{\r\n            display: 'flex',\r\n          }}>\r\n            {renderTaskRow(data || [])}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  \r\n}\r\n\r\nexport default TaskList","import DateHelper from '../helpers/DateHelper';\r\nconst HORIZON_BUFFER = 30;\r\nconst HORIZON_BUFFER_ALERT = 15;\r\n\r\nexport default class DataController {\r\n  lower_limit: number;\r\n  upper_limit: number;\r\n  _dataToRender: never[];\r\n  nowposition: any;\r\n  daywidth: any;\r\n  lower_data_limit: any;\r\n  upper_data_limit: any;\r\n  onHorizonChange(lowerLimit: any, upLimit: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  \r\n  constructor() {\r\n    this.lower_limit = 0;\r\n    this.upper_limit = 0;\r\n    this._dataToRender = [];\r\n  }\r\n  initialise = (start: any, end: any, nowposition: any, daywidth: number) => {\r\n    this.nowposition = nowposition;\r\n    this.daywidth = daywidth;\r\n    this.setLimits(start, end);\r\n    this.loadDataHorizon();\r\n  };\r\n\r\n  //OnScroll\r\n  setStartEnd = (start: any, end: any, nowposition: any, daywidth: number) => {\r\n    this.nowposition = nowposition;\r\n    this.daywidth = daywidth;\r\n    if (this.needData(start, end)) {\r\n      this.setLimits(start, end);\r\n      this.loadDataHorizon();\r\n    }\r\n  };\r\n\r\n  needData = (start: any, end: any) => {\r\n    return start < this.lower_data_limit || end > this.upper_data_limit;\r\n  };\r\n\r\n  setLimits = (start: any, end: any) => {\r\n    this.lower_limit = start - HORIZON_BUFFER;\r\n    this.lower_data_limit = start - HORIZON_BUFFER_ALERT;\r\n    this.upper_limit = end + HORIZON_BUFFER;\r\n    this.upper_data_limit = end + HORIZON_BUFFER_ALERT;\r\n  };\r\n\r\n  //OnScroll\r\n  loadDataHorizon = () => {\r\n    let lowerLimit = DateHelper.pixelToDate(this.lower_limit, this.nowposition, this.daywidth);\r\n    let upLimit = DateHelper.pixelToDate(this.upper_limit, this.nowposition, this.daywidth);\r\n    this.onHorizonChange(lowerLimit, upLimit);\r\n  };\r\n}\r\n","import React, { Component, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport VerticalSpliter from './components/taskList/VerticalSpliter';\r\nimport Header from './components/header/Headers';\r\nimport DataViewPort from './components/viewport/DataViewPort';\r\nimport LinkViewPort from './components/links/LinkViewPort';\r\nimport TaskList from './components/taskList/TaskList';\r\nimport { BUFFER_DAYS, DATA_CONTAINER_WIDTH } from './Const';\r\nimport { VIEW_MODE_DAY, VIEW_MODE_WEEK, VIEW_MODE_MONTH, VIEW_MODE_YEAR } from './Const';\r\nimport { DAY_MONTH_MODE, DAY_WEEK_MODE, DAY_DAY_MODE, DAY_YEAR_MODE } from './Const';\r\nimport DataController from './controller/DataController';\r\nimport Config from './helpers/config/Config';\r\nimport DateHelper from './helpers/DateHelper';\r\nimport { TimelineContext } from './context'\r\nimport {nanoid} from 'nanoid'\r\nimport { Link, Config as _Config, Task, TimelineStyle } from './types';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { getDayWidth } from './utils';\r\nimport { Box } from 'grommet';\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nexport type TimelineProps = {\r\n  className?: string;\r\n  \r\n  resizable?: boolean;\r\n\r\n  nonEditableName?: any;\r\n  style?: TimelineStyle;\r\n  mode?: string;\r\n  itemheight?: number;\r\n  selectedItem?: any;\r\n  data?: Task[];\r\n  links?: Link[];\r\n  config?: _Config;\r\n\r\n  date?: Date;\r\n  onDateChange?: (date: Date) => void;\r\n\r\n  onUpdateTask?: (task: Task, props: object) => void;\r\n  onCreateLink?: (link: Link) => void;\r\n  onSelectItem?: (item: object) => void;\r\n  onHorizonChange?: (start: Date, end: Date) => void;\r\n  onNeedData?: any;\r\n};\r\n\r\nconst BaseTimeline : React.FC<TimelineProps> = (props) => {\r\n  const [ dragging, setDragging ] = useState<boolean>(false)\r\n  const [ draggingPosition, setDraggingPosition ] = useState<number>(0)\r\n  const [ pxToScroll, setPxToScroll ] = useState<number>(24000)\r\n\r\n  const [ scrollTop, setScrollTop ] = useState<number>(0)\r\n  const [ scrollLeft, setScrollLeft ] = useState<number>(0)\r\n\r\n  const [ startRow, setStartRow ] = useState<number>();\r\n  const [ endRow, setEndRow ] = useState<number>();\r\n\r\n  const [ numVisibleRows, setNumVisibleRows ] = useState<number>(40)\r\n  const [ numVisibleDays, setNumVisibleDays ] = useState<number>(60)\r\n\r\n  const [ nowposition, setNowPosition ] = useState<number>(0)\r\n\r\n  const [sideStyle, setSideStyle ] = useState<any>({ width: 200 })\r\n\r\n  const dayWidth = useRef<number>(getDayWidth(props.mode || 'month'))\r\n\r\n  const [currentday, setCurrentDay ] = useState<number>(0)\r\n\r\n  const [ interactiveMode, setInteractiveMode ] = useState<boolean>(false)\r\n\r\n  const [ mode, setMode ] = useState<string>(props.mode ? props.mode : VIEW_MODE_MONTH)\r\n\r\n  const [ size, setSize ] = useState<{ width: number, height: number }>({ width: 1, height: 1 })    \r\n\r\n  const [ taskToCreate, setTaskToCreate ] = useState<{task: Task, position: string}>()\r\n  const [ changingTask, setChangingTask ] = useState<any>()\r\n\r\n  const dc = useRef<DataController>(new DataController())\r\n  \r\n  const [ scrollData, setScrollData ] = useState<any>()\r\n  const [ headerData, setHeaderData ] = useState<any>()\r\n\r\n  const [ data, setData ] = useState<Task[]>([])\r\n  const [ links, setLinks ] = useState<Link[]>([])\r\n\r\n\r\n  useEffect(() => {\r\n    dc.current.onHorizonChange = onHorizonChange;\r\n    Config.load(props.config);\r\n\r\n    dc.current.initialise(\r\n      scrollLeft + nowposition,\r\n      scrollLeft + nowposition + size.width,\r\n      nowposition,\r\n      dayWidth.current\r\n    );\r\n\r\n  }, [])\r\n\r\n\r\n  ////////////////////\r\n  //     ON MODE    //\r\n  ////////////////////\r\n  \r\n\r\n\r\n  ////////////////////\r\n  //     ON SIZE    //\r\n  ////////////////////\r\n\r\n  const onSize = (size: { width: any; height: number; }) => {\r\n    //If size has changed\r\n\r\n    console.log(size, dayWidth)\r\n    calculateVerticalScrollVariables(size);\r\n    // if (!initialise) {\r\n    //   dc.current.initialise(\r\n    //     scrollLeft + nowposition,\r\n    //     scrollLeft + nowposition + size.width,\r\n    //     nowposition,\r\n    //     dayWidth\r\n    //   );\r\n    //   initialise = true;\r\n    // }\r\n    setStartEnd();\r\n    let newNumVisibleRows = Math.ceil(size.height / (props.itemheight||0));\r\n    let newNumVisibleDays = calcNumVisibleDays(size, dayWidth.current);\r\n    let rowInfo = calculateStartEndRows(newNumVisibleRows, props.data || [], scrollTop);\r\n\r\n    setNumVisibleDays(newNumVisibleDays)\r\n    console.log(\"DAYS\", newNumVisibleDays)\r\n    setNumVisibleRows(newNumVisibleRows)\r\n    setStartRow(rowInfo.start)\r\n    setEndRow(rowInfo.end)\r\n    setSize(size)\r\n\r\n\r\n  };\r\n\r\n  /////////////////////////\r\n  //   VIEWPORT CHANGES  //\r\n  /////////////////////////\r\n\r\n  const verticalChange = (scrollTop: any) => {\r\n    if (scrollTop == scrollTop) return;\r\n    //Check if we have scrolling rows\r\n    let rowInfo = calculateStartEndRows(numVisibleRows, props.data || [], scrollTop);\r\n    if (rowInfo.start !== startRow) {\r\n      setScrollTop(scrollTop)\r\n\r\n      setStartRow(rowInfo.start)\r\n      setEndRow(rowInfo.end)\r\n\r\n    }\r\n  };\r\n\r\n  const calculateStartEndRows = (numVisibleRows: number, data: Task[], scrollTop: number) => {\r\n    let new_start = Math.trunc(scrollTop / (props.itemheight||0));\r\n    let new_end = new_start + numVisibleRows >= data.length ? data.length : new_start + numVisibleRows;\r\n    return { start: new_start, end: new_end };\r\n  };\r\n\r\n  const setStartEnd = () => {\r\n    dc.current.setStartEnd(scrollLeft, scrollLeft + size.width, nowposition, dayWidth.current);\r\n  };\r\n\r\n const horizontalChange = (newScrollLeft: number) => {\r\n    let new_nowposition = nowposition;\r\n    let new_left = -1;\r\n    let new_startRow = startRow;\r\n    let new_endRow = endRow;\r\n\r\n    //Calculating if we need to roll up the scroll\r\n    if (newScrollLeft > pxToScroll) {\r\n      //ContenLegnth-viewportLengt\r\n      new_nowposition = nowposition - pxToScroll - 0 //((props.mode == 'month' || props.mode == 'week') ? 8 : 0)//- 1; //+\r\n      new_left = 0;\r\n    } else {\r\n      if (newScrollLeft <= 0) {\r\n        //ContenLegnth-viewportLengt\r\n        new_nowposition = nowposition + pxToScroll + 14//((props.mode == 'month' || props.mode == 'week') ? 8 : 0) //; //-\r\n        new_left = pxToScroll;\r\n      } else {\r\n        new_left = newScrollLeft;\r\n      }\r\n    }\r\n\r\n    //Get the day of the left position\r\n    let currentIndx = Math.trunc((newScrollLeft - nowposition) / dayWidth.current);\r\n\r\n    //Calculate rows to render\r\n    new_startRow = Math.trunc(scrollTop / (props.itemheight||0));\r\n    new_endRow =\r\n      new_startRow + numVisibleRows >= (props.data || []).length\r\n        ? (props.data || []).length - 1\r\n        : new_startRow + numVisibleRows;\r\n    //If we need updates then change the state and the scroll position\r\n    //Got you\r\n    setStartEnd();\r\n\r\n    setCurrentDay(currentIndx)\r\n\r\n    let date = new Date()\r\n    let currentDate = props.date;\r\n    date.setHours(0, 0, 0, 0)\r\n    currentDate?.setHours(0, 0,0,0)\r\n\r\n    date.setDate(date.getDate() + currentIndx)\r\n    if(props.date?.getTime() != date.getTime()){\r\n      props.onDateChange?.(date)\r\n    }\r\n\r\n    setNowPosition(new_nowposition)\r\n    setHeaderData(headerData)\r\n    setScrollLeft(new_left)\r\n    setStartRow(new_startRow)\r\n    setEndRow(new_endRow)\r\n\r\n  };\r\n\r\n  const calculateVerticalScrollVariables = (size: { width: number; }) => {\r\n    //The pixel to scroll verically is equal to the pecentage of what the viewport represent in the context multiply by the context width\r\n    setPxToScroll((1 - size.width / DATA_CONTAINER_WIDTH) * DATA_CONTAINER_WIDTH - 1);\r\n  };\r\n\r\n  const onHorizonChange = (lowerLimit: any, upLimit: any) => {\r\n    if (props.onHorizonChange) props.onHorizonChange(lowerLimit, upLimit);\r\n  };\r\n\r\n  /////////////////////\r\n  //   MOUSE EVENTS  //\r\n  /////////////////////\r\n\r\n  const doMouseDown = (e: { clientX: number; }) => {\r\n    setDragging(true)\r\n    setDraggingPosition(e.clientX)\r\n\r\n  };\r\n  const doMouseMove = (e: { clientX: number; }) => {\r\n    if (dragging) {\r\n      let delta = draggingPosition - e.clientX;\r\n\r\n      if (delta !== 0) {\r\n        setDraggingPosition(e.clientX)\r\n        horizontalChange(scrollLeft + delta);\r\n      }\r\n    }\r\n  };\r\n  const doMouseUp = (e: any) => {\r\n    setDragging(false)\r\n  };\r\n  const doMouseLeave = (e: any) => {\r\n    // if (!e.relatedTarget.nodeName)\r\n    //     dragging=false;\r\n    setDragging(false)\r\n  };\r\n\r\n  const doTouchStart = (e: { touches: { clientX: number; }[]; }) => {\r\n    setDragging(true)\r\n    setDraggingPosition(e.touches[0].clientX)\r\n\r\n  };\r\n  const doTouchEnd = (e: any) => {\r\n    setDragging(false)\r\n  };\r\n  const doTouchMove = (e: { touches: { clientX: number; }[]; }) => {\r\n    if (dragging) {\r\n      let delta = draggingPosition - e.touches[0].clientX;\r\n\r\n      if (delta !== 0) {\r\n        setDraggingPosition(e.touches[0].clientX)\r\n        \r\n        horizontalChange(scrollLeft + delta);\r\n      }\r\n    }\r\n  };\r\n  const doTouchCancel = (e: any) => {\r\n    setDragging(false)\r\n  };\r\n\r\n\r\n  //Child communicating states\r\n  const onTaskListSizing = (delta: number) => {\r\n    setSideStyle({ width: delta })\r\n    //sideStyle.width - delta \r\n  };\r\n\r\n  /////////////////////\r\n  //   ITEMS EVENTS  //\r\n  /////////////////////\r\n\r\n  const onSelectItem = (item: any) => {\r\n    if (props.onSelectItem && item != props.selectedItem) props.onSelectItem(item);\r\n  };\r\n\r\n  const onStartCreateLink = (task: Task, position: any) => {\r\n    console.log(`=> Start Link`, task, position);\r\n    setInteractiveMode(true)\r\n    setTaskToCreate({ task: task, position: position })\r\n   \r\n  };\r\n\r\n  const onFinishCreateLink = (task: Task, position: any) => {\r\n    console.log(`End Link`, task, taskToCreate, props.onCreateLink);\r\n    if (props.onCreateLink && task &&\r\n      taskToCreate && taskToCreate.task.id != task.id) {\r\n\r\n        if(!taskToCreate.task.id || !task.id) return;\r\n\r\n        let newLink = {\r\n          id: nanoid(),\r\n          source: taskToCreate.task.id,\r\n          sourceHandle: taskToCreate.position,\r\n          target: task.id, //{ task: task, position: position }\r\n          targetHandle: position\r\n        }\r\n        console.log(\"New link\", newLink)\r\n      props.onCreateLink(newLink);\r\n    }\r\n    setInteractiveMode(false)\r\n    setTaskToCreate(undefined)\r\n    \r\n  };\r\n\r\n  const onTaskChanging = (changingTask: any) => {\r\n    console.log(\"Changing task\", changingTask)\r\n    setChangingTask(changingTask)\r\n    \r\n  };\r\n\r\n  const calcNumVisibleDays = (size: { width: number; }, newDayWidth?: number) => {\r\n    console.log(size, (newDayWidth || dayWidth))\r\n    return Math.ceil(size.width /(newDayWidth || dayWidth.current)) + BUFFER_DAYS;\r\n  };\r\n\r\n  const changeMode = (newMode: string) => {\r\n    console.log(\"Change mode\", newMode)\r\n    if (newMode != mode) {\r\n      let newDayWidth = getDayWidth(newMode);\r\n      //to recalculate the now position we have to see how mwny scroll has happen\r\n      //to do so we calculate the diff of days between current day and now\r\n      //And we calculate how many times we have scroll\r\n\r\n      //Posible bug here now\r\n\r\n      let scrollTime = Math.ceil((-currentday * newDayWidth) / pxToScroll);\r\n      //We readjust now postion to the new number of scrolls\r\n      let scrollLeft = (currentday * newDayWidth + nowposition) % pxToScroll;\r\n      // we recalculate the new scroll Left value\r\n\r\n      console.log(newMode, newDayWidth)\r\n      setMode(newMode)\r\n      dayWidth.current = newDayWidth\r\n      setNumVisibleDays(calcNumVisibleDays(size, newDayWidth))\r\n      setNowPosition(scrollTime * pxToScroll)\r\n      setScrollLeft(scrollLeft)\r\n     \r\n    }\r\n  }\r\n\r\n  //USEFUL\r\n  // let rowInfo = calculateStartEndRows(numVisibleRows, props.data || [], scrollTop);\r\n\r\n  // const checkNeedData = () => {\r\n  //   if (props.data != data) {\r\n     \r\n  //     Registry.registerData(data);\r\n\r\n  //     setData(props.data || [])\r\n  //     setStartRow(rowInfo.start)\r\n  //     setEndRow(rowInfo.end)\r\n\r\n\r\n  //   }\r\n  //   if (props.links != links) {\r\n  //     setLinks(props.links || [])\r\n  //     Registry.registerLinks(props.links);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if(props.data){\r\n    setData(props.data)\r\n    }\r\n  }, [props.data])\r\n\r\n  useEffect(() => {\r\n    if(props.links){\r\n    setLinks(props.links)\r\n    }\r\n  }, [props.links])\r\n\r\n  useEffect(() => {\r\n    if(props.mode){\r\n      changeMode(props.mode)\r\n    }\r\n  }, [props.mode])\r\n  /*  checkMode();\r\n    checkNeeeData();\r\n    console.log('On render')\r\n    if(!size){\r\n      console.log(state)\r\n    }*/\r\n\r\n    console.log(data, props.data)\r\n    return (\r\n      <TimelineContext.Provider value={{\r\n        data,\r\n        links,\r\n        style: props.style,\r\n        mode: mode,\r\n        scrollLeft: scrollLeft,\r\n        moveTimeline: horizontalChange,\r\n        changeMode: changeMode,\r\n        dayWidth: dayWidth.current,\r\n        itemHeight: props.itemheight\r\n      }}>\r\n      <Box \r\n        overflow=\"hidden\"\r\n        round=\"small\" \r\n        className={`${props.className} timeLine`} style={{position: 'relative', flex: 1}}>\r\n        <div className=\"timeLine-side-main\" style={sideStyle}>\r\n          <TaskList\r\n            startRow={startRow}\r\n            endRow={endRow}\r\n            selectedItem={props.selectedItem}\r\n            onSelectItem={onSelectItem}\r\n            onUpdateTask={props.onUpdateTask}\r\n            onScroll={verticalChange}\r\n            nonEditable={props.nonEditableName}\r\n          />\r\n          <VerticalSpliter\r\n            enabled={props.resizable}\r\n            onTaskListSizing={onTaskListSizing} />\r\n        </div>\r\n\r\n        <div className=\"timeLine-main\">\r\n         \r\n        <Box style={{position: 'absolute', height: '100%', width: '100%', top: 0, left: 0}} className=\"header-container\">\r\n          <Header\r\n              headerData={headerData}\r\n              numVisibleDays={numVisibleDays}\r\n              currentday={currentday}\r\n              nowposition={nowposition}\r\n              scrollLeft={scrollLeft}\r\n            />\r\n        </Box>\r\n        <Box style={{position: 'absolute', width: '100%', height: 'calc(100% - 60px)', zIndex: 9, top: 60, left: 0}}>\r\n        <DataViewPort\r\n            scrollLeft={scrollLeft}\r\n            scrollTop={scrollTop}\r\n            itemheight={props.itemheight}\r\n            nowposition={nowposition}\r\n            startRow={startRow}\r\n            endRow={endRow}\r\n            data={props.data}\r\n            selectedItem={props.selectedItem}\r\n            onScroll={scrollData}\r\n            onMouseDown={doMouseDown}\r\n            onMouseMove={doMouseMove}\r\n            onMouseUp={doMouseUp}\r\n            onMouseLeave={doMouseLeave}\r\n            onTouchStart={doTouchStart}\r\n            onTouchMove={doTouchMove}\r\n            onTouchEnd={doTouchEnd}\r\n            onTouchCancel={doTouchCancel}\r\n            onSelectItem={onSelectItem}\r\n            onUpdateTask={props.onUpdateTask}\r\n            onTaskChanging={onTaskChanging}\r\n            onStartCreateLink={onStartCreateLink}\r\n            onFinishCreateLink={onFinishCreateLink}\r\n            boundaries={{\r\n              lower: scrollLeft,\r\n              upper: scrollLeft + size.width\r\n            }}\r\n            onSize={onSize}\r\n          />\r\n          <LinkViewPort\r\n            scrollLeft={scrollLeft}\r\n            scrollTop={scrollTop}\r\n            startRow={startRow}\r\n            endRow={endRow}\r\n            data={props.data || []}\r\n            nowposition={nowposition}\r\n            interactiveMode={interactiveMode}\r\n            taskToCreate={taskToCreate}\r\n            onFinishCreateLink={onFinishCreateLink}\r\n            changingTask={changingTask}\r\n            selectedItem={props.selectedItem}\r\n            onSelectItem={onSelectItem}\r\n            itemheight={props.itemheight}\r\n            links={props.links || []}\r\n          />\r\n        </Box>\r\n          \r\n        </div>\r\n      </Box>\r\n      </TimelineContext.Provider>\r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const Timeline = styled(BaseTimeline)`\r\n \r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n  border: solid 1px rgb(207, 207, 205);\r\n  font-size: 12px;\r\n  user-select: none;\r\n  -moz-user-select: none;\r\n  -webkit-user-select: none;\r\n  -ms-user-select: none;\r\n\r\n/* Main Area */\r\n\r\n.timeLine-main {\r\n  flex: 1 1 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: hidden;\r\n}\r\n/* Main Area Header*/\r\n\r\n.timeLine-main-header-viewPort {\r\n  flex: 1;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: rgb(112, 112, 112);\r\n  overflow: hidden;\r\n}\r\n\r\n.timeLine-main-header-container {\r\n  flex: 0 0 60px;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #333333;\r\n  overflow: hidden;\r\n  user-select: none;\r\n}\r\n\r\n.timeLine-main-header-day-item {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: rgb(112, 112, 112);\r\n  font-size: 10px;\r\n  text-align: center;\r\n  border-right: solid 1px;\r\n  border-top: solid 1px;\r\n  border-bottom: solid 1px;\r\n  top: 20px;\r\n  height: 40px;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.timeLine-main-header-top-item {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-right: solid 1px white;\r\n  height: 20px;\r\n  z-index: 91;\r\n}\r\n\r\n.timeLine-main-header-day-week {\r\n  flex: 0 0 12px;\r\n  padding: 4px;\r\n  z-index: 90;\r\n}\r\n\r\n.timeLine-main-header-day-month {\r\n  top: 0px;\r\n  position: sticky;\r\n  flex: 0 0 15px;\r\n  padding: 5px;\r\n  z-index: 90;\r\n}\r\n\r\n.timeLine-main-header-time {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: stretch;\r\n  height: 22px;\r\n  justify-content: stretch;\r\n}\r\n\r\n.timeLine-main-header-time-item {\r\n  border-left: solid 1px silver;\r\n  border-bottom: solid 1px silver;\r\n  border-top: solid 1px silver;\r\n  text-align: center;\r\n  padding-top: 5px;\r\n}\r\n/* Main Area Data*/\r\n\r\n.timeLine-main-data-viewPort {\r\n  flex: 1 1 auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.timeLine-main-data-container {\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  background-color: rgb(255, 255, 255);\r\n}\r\n\r\n.timeLine-main-data-row {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 50px;\r\n}\r\n\r\n.timeLine-main-data-task {\r\n  position: absolute;\r\n  background-color: darkorchid;\r\n  border-radius: 14px;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.timeLine-main-data-task-side {\r\n  position: absolute;\r\n  width: 10px;\r\n  cursor: col-resize;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n.timeLine-main-data-task-side-linker {\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 4px;\r\n  cursor: default;\r\n  z-index: 100;\r\n}\r\n.timeLine-main-data-task-side-linker:hover {\r\n  background-color: black;\r\n  border: solid 0.5px grey;\r\n}\r\n/* .timeLine-main-data-task:hover {\r\n    background-color:chocolate;\r\n    border:solid 2px darkorchid;\r\n    cursor: move;\r\n} */\r\n\r\n.timeLine-main-data-verticalLine {\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  width: 24px;\r\n  background-color: white;\r\n  border-left-width: 0.5px;\r\n  border-left-color: rgb(207, 207, 205);\r\n  border-left-style: dashed;\r\n}\r\n\r\n/* Side Area */\r\n\r\n.timeLine-side-main {\r\n  flex: 0 0 auto;\r\n  width: 108px;\r\n  min-width: 108px;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.timeLine-side {\r\n  flex: 1 0 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: solid 1px rgb(207, 207, 205);\r\n}\r\n\r\n.verticalResizer {\r\n  flex: 0 0 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: col-resize;\r\n  border-right: solid 1px rgb(207, 207, 205);\r\n  height: 100%;\r\n}\r\n.squareGrip {\r\n  flex: 0 0 auto;\r\n\r\n  border-radius: 50%;\r\n  height: 5px;\r\n  width: 5px;\r\n  margin: 3px 0;\r\n}\r\n\r\n.timeLine-side-title {\r\n  flex: 0 0 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.timeLine-side-task-viewPort {\r\n  position: relative;\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n\r\n.timeLine-side-task-container {\r\n  position: relative;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n}\r\n\r\n.timeLine-side-task-row {\r\n  background-color: rgb(112, 112, 112);\r\n  border-bottom-width: 0.5px;\r\n  border-bottom-color: rgb(207, 207, 205);\r\n  border-bottom-style: solid;\r\n  height: 30px;\r\n  color: grey;\r\n  text-align: center;\r\n  text-overflow: ellipsis;\r\n  outline: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\n`","import axios, { AxiosInstance } from 'axios';\r\n\r\nexport interface AuthClientOpts{\r\n    clientId: string;\r\n    clientSecret: string;\r\n    authorizationServer: string;\r\n    redirectUri: string;\r\n}\r\n\r\nexport class AuthClient {\r\n\r\n    private instance: AxiosInstance;\r\n\r\n    private clientId: string;\r\n    private clientSecret: string;\r\n\r\n    private authorizationServer: string;\r\n\r\n    private redirectUri: string;\r\n\r\n    constructor(opts: AuthClientOpts){\r\n        this.clientId = opts.clientId;\r\n        this.clientSecret = opts.clientSecret\r\n        this.authorizationServer = opts.authorizationServer\r\n        this.redirectUri = opts.redirectUri\r\n        \r\n        this.instance = axios.create({\r\n            baseURL: this.authorizationServer,\r\n            timeout: 1000,\r\n            headers: {},\r\n            maxRedirects: 0\r\n        });\r\n\r\n        console.log(\"Set up auth client\")\r\n    }\r\n\r\n    async getUserInfo(accessToken: string){\r\n        const result = await this.instance.get('/user', {headers: {'Authorization': 'Bearer ' + accessToken}})\r\n        return result.data\r\n    }   \r\n\r\n    async loadToken(accessCode?: string){\r\n        let token;\r\n      \r\n            if(accessCode){\r\n                try{\r\n                    let getTokenRes = await this.getToken(accessCode);\r\n                    console.log(getTokenRes)\r\n                    if(getTokenRes.accessToken){\r\n                        token = getTokenRes.accessToken\r\n                    }\r\n                }catch(e){\r\n                    let refreshTokenRes = await this.refreshToken()\r\n                    console.log(refreshTokenRes)\r\n                    if(refreshTokenRes.accessToken){\r\n                        token = refreshTokenRes.accessToken\r\n                    }\r\n                }\r\n            }else{\r\n                let refreshTokenRes = await this.refreshToken()\r\n                console.log(refreshTokenRes)\r\n                if(refreshTokenRes.accessToken){\r\n                    token = refreshTokenRes.accessToken\r\n                }\r\n            }\r\n            return token;\r\n    }\r\n\r\n    async getToken(accessToken: string){\r\n        let fd = new URLSearchParams();\r\n        fd.append('client_id', this.clientId);\r\n\r\n        fd.append('client_secret', this.clientSecret)\r\n        fd.append('grant_type',  'authorization_code')\r\n        fd.append('response_type', 'code')\r\n        fd.append('code', accessToken)\r\n\r\n        const result = await this.instance.post(`/oauth/token`, fd, {headers: {'Content-Type': 'application/x-www-form-urlencoded'}, withCredentials: true})\r\n        return result.data;\r\n    }\r\n\r\n    async refreshToken(){\r\n        const fd = new URLSearchParams();\r\n\r\n        fd.append('client_secret', this.clientSecret)\r\n        fd.append('client_id', this.clientId)\r\n        fd.append('grant_type', 'refresh_token');\r\n\r\n        const result = await this.instance.post(`/oauth/token`, fd, {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          }, //Need to change grantType to handle cookie refresHTOken\r\n          withCredentials: true,\r\n        })\r\n        \r\n        return result.data\r\n    }\r\n\r\n    async getAuthorizationCode(username: string, password: string){\r\n        let result;\r\n        try{\r\n            result = await this.instance.post(`/oauth/authorize`, {\r\n                client_id: this.clientId,\r\n                grant_type: 'authorization_code',\r\n                redirect_uri: this.redirectUri,\r\n                response_type: \"code\",\r\n                \r\n                    username,\r\n                    password\r\n                \r\n            }, {withCredentials: true})\r\n            result = result.data\r\n        }catch(e){\r\n            console.log(e)\r\n            result = e.response;\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n\r\n}","import React, { createContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthClient } from '@hexhive/cas-client'\r\nimport { useToken } from \"../hooks/useToken\";\r\n\r\nexport const AuthContext = createContext<{activeUser?: {id?: string, name?: string, email?: string}, token?: string, client?: AuthClient}>({})\r\n\r\nexport interface AuthProviderProps {\r\n    authorizationServer: string;\r\n    clientId: string;\r\n    clientSecret: string;\r\n    redirectUri: string;\r\n}\r\n\r\nexport const AuthProvider : React.FC<AuthProviderProps> = (props) => {\r\n    \r\n    const [ activeUser, setActiveUser ] = useState<{id?: string, name?: string, email?: string}>()\r\n\r\n    const [ token, setToken ] = useToken()\r\n\r\n    const clientRef = useRef<{client?: AuthClient}>({})\r\n\r\n    const [ client, _setClient ] = useState<AuthClient>()\r\n\r\n    const setClient = (client: AuthClient) => {\r\n        _setClient(client)\r\n        clientRef.current.client = client;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Setting up\", client)\r\n\r\n        if(!client){\r\n            const client = new AuthClient({ \r\n                authorizationServer: props.authorizationServer || 'http://localhost:8090',\r\n                clientId: props.clientId || 'command-hexhive.io',\r\n                clientSecret: props.clientSecret || 'tester',\r\n                redirectUri: props.redirectUri || 'http://localhost:3000/dashboard'\r\n            })\r\n\r\n            setClient(client)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if(client && !token){\r\n            const search = new URLSearchParams(window.location.search)\r\n            let code = search.get('code') \r\n\r\n            client?.loadToken(code || undefined).then((token) => {\r\n                setToken(token)\r\n                console.log(token)\r\n            }).catch(() => {\r\n                if(process.env.NODE_ENV == 'production') window.location.href = 'https://hexhive.io/login'\r\n            })\r\n        }\r\n\r\n    }, [client])\r\n\r\n    useEffect(() => {\r\n        console.log(\"user info\", token)\r\n\r\n        if(token){\r\n            client?.getUserInfo(token).then((info) => {\r\n                if(info.user){\r\n                    setActiveUser(info.user)\r\n                }\r\n                console.log(\"user info\", info)\r\n            })\r\n        }\r\n    }, [token])\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: token, \r\n                client: client,\r\n                activeUser: activeUser\r\n            }}>\r\n                {props.children instanceof Function ? props.children(token) : props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport const useToken = () : [string | undefined, (item: string) => void, () => void] => {\r\n    const [ token, setToken ] = useState<string | undefined>()\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('storage', (event) => {\r\n            let credentials;\r\n            try{\r\n              credentials = JSON.parse(window.sessionStorage.getItem('CREDENTIALS_TOKEN') || '')\r\n            }catch(e){\r\n\r\n            }\r\n            switch(event.key){\r\n                case 'REQUESTING_SHARED_CREDENTIALS':\r\n                    window.localStorage.setItem('CREDENTIALS_SHARING', JSON.stringify({ token: token }))\r\n                    window.localStorage.removeItem('CREDENTIALS_SHARING')\r\n                    break;\r\n                case 'CREDENTIALS_SHARING':\r\n                    if(event.newValue) window.sessionStorage.setItem('CREDENTIALS_TOKEN', event.newValue || '')\r\n                    if(credentials) setToken(credentials?.token || undefined)\r\n                    break;\r\n                case 'CREDENTIALS_FLUSH':\r\n                    window.sessionStorage.removeItem('CREDENTIALS_TOKEN')\r\n                    break;\r\n            }\r\n        })\r\n\r\n        window.localStorage.setItem('REQUESTING_SHARED_CREDENTIALS', Date.now().toString())\r\n        window.localStorage.removeItem('REQUESTING_SHARED_CREDENTIALS')\r\n\r\n    }, [])\r\n\r\n    const onLogout = () => {\r\n        window.localStorage.setItem('CREDENTIALS_FLUSH', Date.now().toString())\r\n        window.localStorage.removeItem('CREDENTIALS_FLUSH')\r\n    }\r\n\r\n    const onUpdate = (token: string) => {\r\n        console.log(\"Update token\")\r\n        setToken(token)\r\n        window.sessionStorage.setItem('CREDENTIALS_TOKEN', token || '')\r\n        window.localStorage.setItem('CREDENTIALS_SHARING', JSON.stringify({ token: token }))\r\n        window.localStorage.removeItem('CREDENTIALS_SHARING')\r\n    }\r\n\r\n    return [token, onUpdate, onLogout]\r\n}","import * as React from \"react\";\r\n\r\nfunction SvgCalendar(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 45.98 50.65\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#383232\">\r\n        <path d=\"M33.48 4.67h-1v-3a1.68 1.68 0 00-3.36 0v3H16.84v-3a1.68 1.68 0 10-3.36 0v3h-1A12.52 12.52 0 00-.04 17.17v21a12.52 12.52 0 0012.51 12.51h21a12.52 12.52 0 0012.49-12.54v-21A12.52 12.52 0 0033.48 4.67zm9.14 33.47a9.15 9.15 0 01-9.14 9.15h-21a9.16 9.16 0 01-9.15-9.15v-21A9.16 9.16 0 0112.48 8h1v1.49a1.68 1.68 0 003.36 0V8.03h12.31v1.49a1.68 1.68 0 003.36 0V8.03h1a9.15 9.15 0 019.14 9.14z\" />\r\n        <path d=\"M38.47 17.34H7.52a1.68 1.68 0 000 3.36h30.95a1.68 1.68 0 100-3.36zM27.86 23.68h-9.73a1.69 1.69 0 000 3.38h7.22a39 39 0 00-6.33 13.46 1.7 1.7 0 001.65 2.1h.77a1.68 1.68 0 001.65-1.36 40.28 40.28 0 016.16-14.1 1.7 1.7 0 00.3-.95v-.87a1.69 1.69 0 00-1.69-1.66z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgCalendar;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEquipment(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 45.98 45.98\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M33.48 0h-21A12.52 12.52 0 00-.03 12.5v21a12.52 12.52 0 0012.51 12.51h21A12.52 12.52 0 0045.99 33.5v-21A12.52 12.52 0 0033.48 0zM15.72 33l-4.44-7.85a1.08 1.08 0 010-1.06l5.35-9.27a1.08 1.08 0 01.18-.24v7.46a2.72 2.72 0 001.35 2.35l3.48 2a2.71 2.71 0 002.71 0l3.45-2a2.69 2.69 0 001.34-2.33v-7.39a1.67 1.67 0 01.12.16l5.42 9.31a1.08 1.08 0 010 1.07l-4.35 7.56a1.69 1.69 0 00-.23.84v9H15.93v-8.77a1.71 1.71 0 00-.21-.82zm26.9.45a9.15 9.15 0 01-9.12 9.15v-8.58l4.12-7.18a4.44 4.44 0 000-4.43l-5.43-9.31a4.45 4.45 0 00-3.82-2.2h-.88a1.69 1.69 0 00-1.68 1.69v9l-2.8 1.63-2.82-1.55v-9.06a1.69 1.69 0 00-1.68-1.69h-.94a4.44 4.44 0 00-3.84 2.22l-5.36 9.29a4.46 4.46 0 000 4.39l4.22 7.47v8.38h-.06a9.15 9.15 0 01-9.14-9.15v-21a9.15 9.15 0 019.14-9.14h21a9.15 9.15 0 019.1 9.12z\"\r\n        fill=\"#383232\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEquipment;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgEstimates(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 45.35 45.35\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#383232\">\r\n        <path d=\"M33.01 0H12.33A12.35 12.35 0 000 12.36v20.68a12.35 12.35 0 0012.33 12.32h20.68a12.35 12.35 0 0012.34-12.34V12.36A12.35 12.35 0 0033.01 0zm9 33a9 9 0 01-9 9H12.33a9 9 0 01-9-9V12.36a9 9 0 019-9h20.68a9 9 0 019 9z\" />\r\n        <path d=\"M35 21.57h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM35 27.04h-1a1.66 1.66 0 000 3.31h1a1.66 1.66 0 100-3.31zM35 32.5h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM27.02 21.57h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM27.02 27.04h-1a1.66 1.66 0 100 3.31h1a1.66 1.66 0 100-3.31zM27.02 32.5h-1a1.66 1.66 0 100 3.32h1a1.66 1.66 0 000-3.32zM19.19 21.57h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM19.19 27.04h-1a1.66 1.66 0 000 3.31h1a1.66 1.66 0 100-3.31zM19.19 32.5h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM11.37 21.57h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM11.37 27.04h-1a1.66 1.66 0 100 3.31h1a1.66 1.66 0 100-3.31zM11.37 32.5h-1a1.66 1.66 0 000 3.32h1a1.66 1.66 0 000-3.32zM36.8 8.49H8.55a1.66 1.66 0 00-1.66 1.66v6.47a1.65 1.65 0 001.66 1.65H36.8a1.65 1.65 0 001.65-1.65v-6.47a1.65 1.65 0 00-1.65-1.66zm-1.66 6.47H10.21v-3.15h24.93z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgEstimates;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgHiveflow(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 197.58 85\" {...props}>\r\n      <g fill=\"#a3b696\">\r\n        <path d=\"M117.59 24.85V5.76a2.73 2.73 0 012.73-2.73h2.09a2.72 2.72 0 012.73 2.73v45.58a2.71 2.71 0 01-2.73 2.72h-2.12a2.72 2.72 0 01-2.73-2.72v-19h-8.4v19a2.71 2.71 0 01-2.73 2.72h-2.12a2.72 2.72 0 01-2.7-2.72V5.76a2.73 2.73 0 012.73-2.73h2.12a2.72 2.72 0 012.73 2.73v19.09zM138.72 51.34a2.76 2.76 0 01-2.72 2.72h-2.12a2.71 2.71 0 01-2.73-2.72V5.76a2.72 2.72 0 012.73-2.73H136a2.76 2.76 0 012.72 2.73zM157.13 33.94l6.74-28.86a2.91 2.91 0 012.65-2.12h2.2a2.68 2.68 0 012.69 3.38l-10.76 45.6a2.89 2.89 0 01-2.65 2.12h-1.59a2.76 2.76 0 01-2.65-2.12l-10.8-45.6a2.62 2.62 0 012.66-3.33h2.12a3 3 0 012.67 2.07zM194.69 3.03a2.72 2.72 0 012.72 2.73v2a2.71 2.71 0 01-2.73 2.72h-11.57v14.24h9.54a2.71 2.71 0 012.72 2.73v2a2.71 2.71 0 01-2.72 2.73h-9.54v14.31h11.58a2.72 2.72 0 012.72 2.85v2a2.71 2.71 0 01-2.73 2.72h-16.35a2.71 2.71 0 01-2.72-2.72V5.76a2.72 2.72 0 012.72-2.73z\" />\r\n      </g>\r\n      <path\r\n        d=\"M84.81 31.45a5.29 5.29 0 100-5.89h-6.54l-4-6.86h10.5a5.28 5.28 0 100-5.9H70.91l-4.17-7.21a5.68 5.68 0 00-9.85 0l-4.16 7.2h-8.26l2.45-4.26A5.69 5.69 0 0041.99 0H18.84a5.73 5.73 0 00-4.93 2.84L.75 25.64a5.7 5.7 0 000 5.69l13.16 22.79a5.73 5.73 0 004.93 2.84h23.15a5.69 5.69 0 004.93-8.53l-2.44-4.24h8.26l4.15 7.18a5.69 5.69 0 009.85 0l4.14-7.18h13.93a5.28 5.28 0 100-5.9H74.29l4-6.86zM49.32 18.69l-4 6.85h-8.26l4-6.86zM18.96 51.07l-13-22.59 13-22.59h22.68l-11.4 19.75a5.72 5.72 0 000 5.69l11.4 19.74zm22.11-12.73l-4-6.86h8.34l4 6.86zm20.74 9.82L50.48 28.52 61.81 8.84l11.34 19.64z\"\r\n        fill=\"#a3b696\"\r\n      />\r\n      <g fill=\"#a3b696\">\r\n        <path d=\"M138.28 60.86h9.45v2.41h-6.8v8.07h5.48v2.42h-5.48v10.87h-2.65zM151.92 60.86h2.65v21.38h6.84v2.41h-9.45zM165.07 79.11V66.34c0-3.77 1.94-5.84 5.44-5.84s5.48 2.07 5.48 5.84v12.75c0 3.78-1.94 5.88-5.48 5.88s-5.44-2.08-5.44-5.86zm8.26.17V66.19c0-2.24-1-3.26-2.82-3.26s-2.78 1-2.78 3.26v13.09c0 2.28 1 3.3 2.78 3.3s2.82-1.02 2.82-3.3zM179.97 60.86h2.58l2.38 20.12 2.48-20.12h3l2.48 20.12 2.38-20.12h2.35l-2.93 23.79h-3.4l-2.38-18.56-2.41 18.56h-3.57z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgHiveflow;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgPeople(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 45.98 45.98\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#383232\">\r\n        <path d=\"M33.48 0h-21A12.52 12.52 0 00-.03 12.5v21a12.49 12.49 0 003 8.13 1.42 1.42 0 00.12.13 12.47 12.47 0 009.38 4.25h21a12.52 12.52 0 0012.5-12.51v-21A12.52 12.52 0 0033.48 0zM3.36 12.5a9.16 9.16 0 019.15-9.14h21a9.15 9.15 0 019.14 9.14v21a9.63 9.63 0 01-.21 2 20.46 20.46 0 00-7.33-10.15l-1.38-1-1 1.39a11.91 11.91 0 01-19.43 0l-1-1.39-1.38 1a19.55 19.55 0 00-7.43 9.62 9.38 9.38 0 01-.12-1.42zm30.12 30.17h-21a9.09 9.09 0 01-6.51-2.74c.16-4.31 2-7.82 5.64-10.91a15.27 15.27 0 0022.69 0 17 17 0 015.62 10.94 9.13 9.13 0 01-6.44 2.71z\" />\r\n        <path d=\"M22.99 28.55a9.81 9.81 0 10-9.8-9.81 9.82 9.82 0 009.8 9.81zm0-16.25a6.45 6.45 0 11-6.44 6.44 6.45 6.45 0 016.44-6.44z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgPeople;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgProjects(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48.7 45.78\" {...props}>\r\n      <g fill=\"#383232\">\r\n        <path d=\"M28.55 10.92H15.96a1.67 1.67 0 100 3.34h12.59a1.67 1.67 0 100-3.34zM24.7 18.02h-8.74a1.68 1.68 0 100 3.35h8.74a1.68 1.68 0 000-3.35z\" />\r\n        <path d=\"M42.93 1.96a12.52 12.52 0 00-6.68-2H15.38a12.48 12.48 0 00-12.11 9.6H1.68a1.67 1.67 0 100 3.34h1.24v1.73H1.68a1.67 1.67 0 100 3.34h1.24v1.73H1.68a1.67 1.67 0 100 3.34h1.24v1.76H1.68a1.67 1.67 0 100 3.34h1.24v1.66H1.68a1.67 1.67 0 100 3.34h1.24v.15a11.75 11.75 0 00.11 1.58H1.68a1.67 1.67 0 100 3.34h2.26a12.46 12.46 0 0011.44 7.59h21.89a13.12 13.12 0 003.35-.76 12.45 12.45 0 008.06-11.64V12.46a12.36 12.36 0 00-3.17-8.3zm-6.66 40.48H15.38a9.11 9.11 0 01-7.65-4.19h.47a1.67 1.67 0 100-3.34H6.42a9.19 9.19 0 01-.15-1.58v-.15H8.2a1.67 1.67 0 100-3.34H6.27v-1.73H8.2a1.67 1.67 0 100-3.34H6.27v-1.73H8.2a1.67 1.67 0 100-3.34H6.27v-1.73H8.2a1.67 1.67 0 100-3.34H6.27V12.9H8.2a1.67 1.67 0 100-3.34H6.75a9.13 9.13 0 018.63-6.21h20.89a9.07 9.07 0 014.08 1l-.07.09c-.19.23-.38.46-.56.7l-.09.12c-.19.27-.36.54-.53.81l-.11.18c-.16.28-.32.57-.46.87-.14.29-.27.6-.39.9 0 .07 0 .13-.07.2-.11.3-.21.6-.3.91a.94.94 0 010 .16c-.07.28-.14.57-.19.86a1.1 1.1 0 000 .16c-.06.32-.1.64-.14 1v31.12a9.24 9.24 0 01-1.17.01zm9.11-9.11a9.1 9.1 0 01-4.72 8V12.46v-1-.3c0-.1.07-.43.11-.64s.05-.22.08-.33.11-.39.17-.59.07-.21.11-.32a6.5 6.5 0 01.25-.61c0-.08.07-.17.11-.25a7.19 7.19 0 01.45-.81 1 1 0 01.09-.13 7.07 7.07 0 01.44-.63l.21-.25c.08-.1.17-.19.26-.29a9.08 9.08 0 012.35 6.1z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgProjects;\r\n","import * as React from \"react\";\r\n\r\nfunction SvgTimeline(props: React.SVGProps<SVGSVGElement>) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 46.14 54.82\"\r\n      {...props}\r\n    >\r\n      <g fill=\"#383232\">\r\n        <path d=\"M33.59 8.68h-1v-7a1.69 1.69 0 00-3.38 0v7H16.9v-7a1.69 1.69 0 00-3.38 0v7h-1A12.56 12.56 0 00.04 21.23v21a12.56 12.56 0 0012.55 12.55h21a12.56 12.56 0 0012.55-12.55v-21A12.56 12.56 0 0033.59 8.68zm-4.35 3.38v2.26a3 3 0 01-3 3h-6.25a3 3 0 01-3-3v-2.26zm13.53 30.21a9.19 9.19 0 01-9.18 9.18h-21a9.18 9.18 0 01-9.17-9.18v-21a9.18 9.18 0 019.17-9.17h1v2.26a6.43 6.43 0 006.43 6.42h6.25a6.43 6.43 0 006.42-6.42v-2.3h1a9.18 9.18 0 019.18 9.17z\" />\r\n        <path d=\"M30.69 27.51a1.68 1.68 0 00-1.65-1.7h-18.3a1.69 1.69 0 100 3.37h18.3a1.69 1.69 0 001.65-1.67zM26.81 34.65a1.69 1.69 0 00-1.69-1.68h-12.7a1.69 1.69 0 100 3.37h12.7a1.69 1.69 0 001.69-1.69zM35.22 39.9h-18.3a1.69 1.69 0 000 3.38h18.3a1.69 1.69 0 000-3.38z\" />\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default SvgTimeline;\r\n","import { AxiosInstance } from \"axios\"\r\n\r\nexport default (axios: AxiosInstance) => {\r\n\r\n    const getScheduleItems = async (horizon: {start: Date, end: Date}, token: string) => {\r\n        const result = await axios.post(`/graphql`, {\r\n            query: `\r\n                query getScheduleItemsInHorizon($start: Date, $end: Date){\r\n                    ScheduleMany(startDate: $start, endDate: $end){\r\n                        id\r\n                        project {\r\n                            id\r\n                            name\r\n                        }\r\n                        people\r\n                        date\r\n                        equipment\r\n                        notes\r\n                        managers\r\n                        owner {\r\n                            id\r\n                            name\r\n                        }\r\n                    }\r\n                }\r\n            `,\r\n            variables: {   \r\n                start: horizon.start,\r\n                end: horizon.end\r\n            }  \r\n        }, {headers: {'Authorization': 'Bearer ' + token}})\r\n        return result.data?.data?.ScheduleMany\r\n    }\r\n\r\n    return {\r\n        getScheduleItems\r\n    }\r\n}","import React from 'react';\r\nimport { Box, TextInput, Select } from 'grommet'\r\nimport { Maybe } from '../../../gqless';\r\n\r\nexport interface JobHeaderProps {\r\n    jobs?: Maybe<{\r\n        status?: Maybe<string>;\r\n    }>[]\r\n\r\n    filter?: {search?: string, status?: string};\r\n    onFilterChange?: (filter: {search?: string, status?: string}) => void;\r\n}\r\n\r\nexport const JobHeader : React.FC<JobHeaderProps> = (props) => {\r\n    return (\r\n        <Box\r\n            pad={{horizontal: 'xsmall'}}\r\n        align=\"center\"\r\n        margin={{bottom: 'xsmall'}}\r\n        round=\"xsmall\"\r\n        height=\"50px\"\r\n        direction=\"row\"\r\n        background=\"accent-1\"\r\n        gap=\"xsmall\"\r\n        >\r\n        <Box \r\n            overflow=\"hidden\"\r\n            flex\r\n            background={'#ffffff42'}\r\n            round=\"xsmall\">\r\n        <TextInput\r\n            value={props.filter?.search}\r\n            onChange={(e) => props.onFilterChange?.({search: e.target.value, status: props.filter?.status})}\r\n          focusIndicator={false}\r\n          plain\r\n          placeholder=\"Search Jobs\" />\r\n        </Box>\r\n        <Box \r\n            overflow=\"hidden\"\r\n            background={\"#ffffff42\"}\r\n            round=\"xsmall\">\r\n        <Select  \r\n            value={props.filter?.status}\r\n            onChange={({option}) => props.onFilterChange?.({search: props.filter?.search, status: option })}\r\n          plain\r\n          placeholder=\"Status\"\r\n          options={[\"All\"].concat(Array.from(new Set(props.jobs?.map((x: any) => x.status || ''))))} \r\n          />\r\n        </Box>\r\n      </Box>\r\n    )\r\n}","import { useQuery } from '../../../gqless';\r\nimport { DataTable, Box, TextInput, Select } from 'grommet';\r\nimport React, {\r\n  Component, useEffect, useState\r\n} from 'react';\r\n\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\n// import { useQuery } from '../../../gqless';\r\nimport { JobHeader } from './header';\r\nimport './index.css';\r\n\r\nexport interface JobListProps extends RouteComponentProps {\r\n}\r\n\r\nexport const JobList : React.FC<JobListProps> = (props) => {\r\n  \r\n  const [ filter, setFiler ] = useState<any>({})\r\n\r\n  const [ direction, setDirection ] = useState<\"asc\" | \"desc\" | undefined>()\r\n  const [ property, setProperty ] = useState<string>()\r\n\r\n  const [ listKeys, setListKeys ] = useState<any[]>([\r\n    {key: 'ID', label: 'Job ID', type: 'int', width: 30},\r\n    {key: 'name', label: 'Job Name', type: 'string', width: 50},\r\n    {key: 'status', label: 'Status', type: 'string', width: 20}\r\n  ])\r\n\r\n\r\n  const query = useQuery({\r\n    suspense: false,\r\n    staleWhileRevalidate: true\r\n  })\r\n\r\n  const projects = query.ProjectMany();\r\n\r\n\r\n  const selectJob = (job : {JobID: string}) => {\r\n    props.history.push(`${props.match.url}/${job.JobID}`)\r\n  }\r\n\r\n  const getJobs = () => {\r\n    let items = projects?.map((x) => ({id: x?.id, name: x?.name, status: x?.status}))\r\n\r\n    if(property && direction){\r\n      items = items?.sort((first, last) => {\r\n        let a : any = first;\r\n        let b: any = last;\r\n        return direction == 'asc' ? \r\n          (a[property] == b[property] ? 0 : (a[property] > b[property] ? 1 : -1))\r\n          : (a[property] == b[property] ? 0 : (a[property] < b[property] ? 1 : -1))\r\n      })\r\n    }\r\n\r\n    if(filter.status && filter.status != \"All\"){\r\n      items = items?.filter((a) => a.status == filter.status)\r\n    }\r\n\r\n    if(filter.search){\r\n      items = items?.filter((a) => {\r\n        let name = a.name?.toLowerCase() || ''\r\n        let id = a.id?.toLowerCase() || ''\r\n\r\n        let search = filter.search.toLowerCase() || ''\r\n        \r\n\r\n        return name?.indexOf(search) > -1 || id?.indexOf(search) > -1 || `${id} ${name}`.indexOf(search) > -1\r\n      }) \r\n    }\r\n\r\n \r\n    return items\r\n  }\r\n\r\n\r\n    return (false) ? null : (\r\n      <Box\r\n        flex\r\n        direction=\"column\">\r\n     \r\n      <JobHeader \r\n        filter={filter}\r\n        onFilterChange={(filter) => setFiler(filter)}\r\n        jobs={projects || []} />\r\n      <Box \r\n        overflow={{vertical: 'auto'}}\r\n        round=\"xsmall\"\r\n        background=\"neutral-1\"\r\n        className=\"jobs-page\">\r\n        <DataTable\r\n          background={{\r\n            header: { color: 'accent-1', opacity: 'strong' },\r\n          }}\r\n          pin\r\n          onSort={({property, direction}) => {\r\n            setProperty(property)\r\n            setDirection(direction)\r\n          }}\r\n          columns={[\r\n            {\r\n              property: 'id',\r\n              header: 'ID',\r\n              size: 'xsmall',\r\n              sortable: true\r\n            },\r\n            {\r\n              property: 'name',\r\n              header: 'Project name',\r\n              size: 'large',\r\n              sortable: true\r\n            },\r\n            {\r\n              property: 'status',\r\n              header: 'Status',\r\n              sortable: true,\r\n              size: 'small',\r\n              align: 'center'\r\n            }\r\n          ]}\r\n          onClickRow={({datum}) => datum.id && selectJob({JobID: datum?.id})}\r\n          data={getJobs()} />\r\n       {/* <SortedList \r\n          orderBy={\"JobID\"}\r\n          keys={listKeys}\r\n          data={}\r\n       onClick={selectJob.bind(this)}/>*/}\r\n      </Box>\r\n      </Box>\r\n\r\n    );\r\n  \r\n}\r\n","import axios from \"axios\";\r\nimport {fileActions} from './files'\r\nimport scheduleActions from './schedule';\r\nconst token = window.sessionStorage.getItem('CREDENTIALS_TOKEN');\r\n\r\nconst inst = axios.create({\r\n    baseURL: process.env.REACT_APP_API || 'http://localhost:8081',\r\n    headers: {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n})\r\n\r\nconst files = fileActions(inst)\r\nconst schedule = scheduleActions(inst)\r\n\r\nexport {\r\n    files,\r\n    schedule\r\n}\r\n","import { AxiosInstance } from \"axios\";\r\n\r\nexport const fileActions = (axios: AxiosInstance) => {\r\n\r\n    const addFilesToJob = async (job_id: string, files: File[]) => {\r\n        const token = window.sessionStorage.getItem('CREDENTIALS_TOKEN')\r\n\r\n        let fd = new FormData();\r\n        files.forEach((file) => {\r\n            fd.append('files', file)\r\n        })\r\n\r\n        const result = await axios.post(`/api/file?job=${job_id}`, fd, {headers: {'Authorization': 'Bearer '+ token}})\r\n        return result.data\r\n    }\r\n\r\n    const uploadFile = async (files: File[]) => {\r\n        console.log(\"Upload file\")\r\n        const token = window.sessionStorage.getItem('CREDENTIALS_TOKEN')\r\n\r\n        let fd = new FormData();\r\n        files.forEach((file) => {\r\n            fd.append('files', file)\r\n        })\r\n\r\n        const result = await axios.post(`/api/file/`, fd, {headers: {'Authorization': 'Bearer ' + token}})\r\n        return result.data\r\n    }\r\n\r\n    return {\r\n        uploadFile,\r\n        addFilesToJob\r\n    }\r\n\r\n}","import React, {\r\n\tComponent, useEffect, useState\r\n} from 'react';\r\n\r\nimport { Tabs, Text, Tab, Box, Heading, Spinner, Button } from 'grommet';\r\n\r\n\r\n// import SharedFiles from '@hexhive/auth-ui';\r\n\r\nimport { files as fileActions } from '../../../actions'\r\n\r\nimport moment from 'moment';\r\n\r\n// import utils from '../../../utils';\r\n\r\nimport './style.css';\r\nimport { Kanban, FileDialog, SharedFiles } from '@hexhive/ui';\r\n\r\nimport { useMutation, useQuery, File, useRefetch } from '../../../gqless';\r\n\r\nexport interface FocusedJobProps{\r\n  match?: any;\r\n}\r\n\r\nconst STATUS = [ \"Issued\", \"Workshop\", \"Finished\" ];\r\n\r\n\r\nexport const SingleJob : React.FC<FocusedJobProps> = (props) => {\r\n\r\n  const [ selectedTab, setSelectedTab ] = useState<number>(0)\r\n\r\n  const [ loadingFiles, setLoadingFiles ] = useState<any[]>([])\r\n  const [ uploadingFiles, setUploadingFiles ] = useState<any[]>([])\r\n\r\n  const [ dialogOpen, openDialog ] = useState<boolean>(false)\r\n\r\n  const [ showFiles, setShowFiles ] = useState<any[]>([]);\r\n\r\n  const [ assignedEmployees, setAssignedEmployees ] = useState<any[]>([])\r\n\r\n  const [ comment, setComment ] = useState<string>('')\r\n  const [ uploadFile, setUploadFile ] = useState<string>('')\r\n  const [ files, setFiles ] = useState<any[]>([])\r\n\r\n  const [ description, setDescription ] = useState<string>('')\r\n\r\n  const job_id = props.match.params.id;\r\n\r\n\r\n  const query = useQuery({\r\n    suspense: false,\r\n    staleWhileRevalidate: true\r\n  })\r\n\r\n  const refetch = useRefetch();\r\n\r\n  const [ removeFile, {isLoading}] = useMutation((mutation, args: {id: string, project: string}) => {\r\n    const result = mutation.removeFileFromProject({id: args.id, project: args.project})\r\n\r\n    return {\r\n      item: result,\r\n      error: null\r\n    }\r\n  }, {\r\n    onCompleted(data) {},\r\n    onError(error) {},\r\n    refetchQueries: [query.ProjectById({id: job_id})],\r\n    suspense: false,\r\n    awaitRefetchQueries: true\r\n  } )\r\n\r\n  const [ updateFile, info] = useMutation((mutation, args: {id: string, name?: string, status?: string}) => {\r\n    const result = mutation.updateFile({id: args.id, name: args.name, status: args.status})\r\n    return {\r\n      item: {\r\n        ...result\r\n      },\r\n      error: null\r\n    }\r\n  },  {\r\n    onCompleted(data) {},\r\n    onError(error) {},\r\n    refetchQueries: [query.ProjectById({id: job_id})],\r\n    suspense: false,\r\n    awaitRefetchQueries: true\r\n  })\r\n\r\n  const [ updateFiles, filesUpdate] = useMutation((mutation, args: {ids: string[], status?: string}) => {\r\n    const result = mutation.updateFiles({ids: args.ids, status: args.status})\r\n    return {\r\n      item: result?.slice(),\r\n      error: null\r\n    }\r\n  },  {\r\n    onCompleted(data) {},\r\n    onError(error) {},\r\n    refetchQueries: [query.ProjectById({id: job_id})],\r\n    suspense: false,\r\n    awaitRefetchQueries: true\r\n  })\r\n\r\n  const job = query.ProjectById({id: job_id})\r\n\r\n  useEffect(() => {\r\n    console.log(\"JOB Changed\")\r\n    if(job && job.files){\r\n      console.log(job.files)\r\n      setFiles(job.files || [])\r\n    }\r\n  }, [JSON.stringify(job)])\r\n\r\n  const _tabs = [\r\n    {\r\n      title: \"Files\",\r\n      component: (\r\n      <SharedFiles\r\n        loading={loadingFiles}\r\n        uploading={uploadingFiles}\r\n\r\n        onClick={(item) => {\r\n          setShowFiles([item])\r\n          openDialog(true)\r\n        }}\r\n        files={files || []}\r\n        onDelete={async (_files) => {\r\n          console.log(_files)\r\n          await Promise.all(_files.map(async (file) => {\r\n            if(job?.id) await removeFile({args: {project: job?.id, id: file._id}})\r\n          }))\r\n\r\n        }}\r\n        onUpload={(files) => {\r\n          fileActions.addFilesToJob(job_id, files).then(async (result) => {\r\n            console.log(\"Upload result\", result)\r\n            await refetch(query.ProjectById({id: job_id}))\r\n          })\r\n        }}\r\n        onEdit={(files) => {\r\n          openDialog(true)\r\n          setShowFiles(files)\r\n        }}\r\n        onView={(files) => {\r\n          openDialog(true)\r\n          setShowFiles(files)\r\n        }}\r\n        onChange={(files) => setFiles(files)}\r\n        jobId={job_id} />)\r\n    },\r\n    {\r\n      title: \"Project board\",\r\n      component: <Kanban \r\n      onDrag={(result) => {\r\n        console.log(result.destination?.droppableId)\r\n        if(result.destination?.droppableId != undefined){\r\n          let f = files.slice()\r\n          let f_ix = f.map((x) => x.id).indexOf(result.draggableId)\r\n          f[f_ix].status = STATUS[parseInt(result.destination?.droppableId || '')]\r\n          setFiles(f)\r\n\r\n          const loaded = UseLoading(result.draggableId)\r\n\r\n          updateFile({args: {id: result.draggableId, status: STATUS[parseInt(result.destination?.droppableId)]}}).then(() => {\r\n           \r\n            loaded()\r\n            setLoadingFiles(f)\r\n          })\r\n        \r\n        /*  utils.job.updateFile(job_id, result.draggableId, {status: STATUS[parseInt(result.destination?.droppableId)]}).then(() => {\r\n            //TODO reset if error  \r\n          })*/\r\n\r\n        }\r\n      }}\r\n      renderCard={(item) => {\r\n        return (\r\n        <Box \r\n          onClick={() => {\r\n            setShowFiles([item])\r\n            openDialog(true)\r\n          }}\r\n          direction=\"column\"\r\n          background=\"light-2\"\r\n          round=\"xsmall\"\r\n          pad=\"small\">\r\n          <Text>{item.name}</Text>\r\n        </Box>\r\n      )}}\r\n      columns={STATUS.map((x) => ({\r\n        id: x,\r\n        title: x,\r\n        rows: files.filter((a: any) => a.status == x).map((x)=> ({...x}))\r\n      }))} />\r\n    }\r\n  ]\r\n\r\n  const UseLoading = (id: string) => {\r\n    setLoadingFiles(Array.from(new Set([...loadingFiles, id])))\r\n\r\n    return () => {\r\n      let f = loadingFiles.slice() || [];\r\n      let ix = f.indexOf(id)\r\n\r\n      f.splice(ix, 1)\r\n      setLoadingFiles(f)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.match.params.job){\r\n    /* utils.job.getDetails(props.match.params.job).then((job) => {\r\n        console.log(\"JOB\", job)\r\n        setJob(job[0])\r\n      })\r\n*/\r\n\r\n      // utils.job.getFiles(props.match.params.job)\r\n    }\r\n  }, [props.match.params.job]) \r\n\r\n\r\n\r\n\r\n\r\n  const renderJobDuration = () => {\r\n    if(job?.startDate){\r\n      let startDate = moment(job?.startDate, 'DD/MM/YYYY');\r\n      let endDate = moment(job?.endDate, 'DD/MM/YYYY') //.add(job.Duration, job.DurationType);\r\n      return (\r\n        <Text style={{fontSize: 14}}>{startDate.format('DD/MM/YYYY')} - {endDate.format('DD/MM/YYYY')}</Text> \r\n      );\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n   const renderJobDescription = () => {\r\n      return (\r\n        <Box style={{flex: 0.5}}> \r\n          <Box className=\"job-description\">\r\n            <Text style={{textAlign: 'left'}}>{job?.name}</Text>\r\n            {renderJobDuration()}\r\n          </Box>\r\n        </Box>\r\n      );\r\n   }\r\n\r\n\tconst renderBody = () => {\r\n\t\treturn(\r\n\t\t\t<div className=\"job-body\" style = {{flex: 0.7, display: 'flex', flexDirection: 'column'}}> \r\n\t\t\t   {renderJobDescription()}\t\r\n\t\t\t</div>\r\n\t\t);\t\r\n\t}\r\n\r\n  return (\r\n\t\t\t<Box\r\n        gap=\"xsmall\"\r\n        direction=\"column\"\r\n        round=\"xsmall\"\r\n        className=\"job-one-container\" style={{flex: 1, display: 'flex'}}>\r\n          <Box \r\n            round=\"xsmall\"\r\n            background=\"accent-1\"\r\n            pad={{left: 'small'}}\r\n            direction=\"row\"\r\n            justify=\"between\">\r\n            <Heading level='4' margin=\"small\">{job?.id} - {job?.name || \"Job Title\"}</Heading>\r\n            \r\n            <Box gap=\"xsmall\" direction=\"row\">\r\n              <Button\r\n                onClick={() => setSelectedTab(0)}\r\n                style={{borderBottom: selectedTab == 0 ? '3px solid #E75D3D' : undefined, padding: 8}}\r\n                plain\r\n                 hoverIndicator\r\n                 label=\"Files\"/>\r\n              <Button \r\n                onClick={() => setSelectedTab(1)}\r\n                style={{borderBottom: selectedTab == 1 ? '3px solid #E75D3D' : undefined, padding: 8}}\r\n                plain\r\n                hoverIndicator \r\n                label=\"Project board\" />\r\n            </Box>\r\n          </Box>\r\n          <FileDialog\r\n              open={dialogOpen}\r\n              onSubmit={async (_files: any[]) => {\r\n                console.log(_files)\r\n                if(_files.length == 1){\r\n                  let file = _files[0]\r\n\r\n                  if(file.id){\r\n                    const loaded = UseLoading(file.id);\r\n\r\n                    updateFile({args: {id: file.id, name: file.name || '', status: file.status || ''}}).then(({item}) => {\r\n                      console.log(item)\r\n\r\n                      let f = files?.slice()\r\n                      let ix = f.map((x: any) => x.id).indexOf(file.id)\r\n\r\n                      item.id = file.id;\r\n\r\n                      if(ix > -1){\r\n                        f[ix] = {\r\n                          ...item\r\n                        }\r\n                      }\r\n\r\n                      loaded()\r\n                    })\r\n                  }\r\n                  /*\r\n                  utils.job.updateFile(job?.id, file.id, file).then((resp) => {\r\n                    console.log(\"Updated\", resp)\r\n                    let f = files?.slice()\r\n                    let ix = f.map((x: any) => x.id).indexOf(file.id)\r\n\r\n                    console.log(f, ix, file )\r\n                    if(ix > -1){\r\n                      f[ix] = {\r\n                        ...file\r\n                      }\r\n                    }\r\n\r\n                    setFiles(f)\r\n                  })*/\r\n                }else if(_files.length > 1){\r\n                  let ids = _files.map((x) => x.id)\r\n                  const results = await updateFiles({args: {ids: ids, status: _files[0].status}})\r\n\r\n                  console.log(results)\r\n                  // const results = await Promise.all(_files.map(async (file :any) => {\r\n                  //   await updateFile({args: {id: file.id, status: file.status}})\r\n                  // }))\r\n\r\n               \r\n                }\r\n\r\n              }}\r\n              onClose={() => {\r\n                console.log(\"CLose\")\r\n                openDialog(false)\r\n                setShowFiles([])\r\n              }}\r\n              files={showFiles} \r\n              job={job?.id} />\r\n\r\n\r\n          <Box round=\"xsmall\" flex background=\"neutral-1\">\r\n            <Box\r\n              height=\"100%\"\r\n              flex>\r\n            {_tabs[selectedTab].component}\r\n            </Box>\r\n        \r\n          </Box>\r\n         \r\n  \r\n\t\t\t</Box>\r\n\t\t);\r\n\t\r\n}\r\n\r\n// export default connect((state: StoreState) => ({\r\n//   token: state.auth.token\r\n// }))(FocusedJob);\r\n","import React from 'react';\r\nimport { Box, TextInput, Select } from 'grommet'\r\n\r\nexport interface StaffSearchHeaderProps {\r\n\r\n    filter?: string;\r\n    onFilterChange?: (filter: string) => void;\r\n}\r\n\r\nexport const StaffSearchHeader : React.FC<StaffSearchHeaderProps> = (props) => {\r\n    return (\r\n        <Box\r\n        align=\"center\"\r\n        pad={{horizontal: 'xsmall'}}\r\n        margin={{bottom: 'xsmall'}}\r\n        round=\"xsmall\"\r\n        height=\"50px\"\r\n        direction=\"row\"\r\n        background=\"accent-1\"\r\n        >\r\n        <Box \r\n            background=\"#ffffff42\"\r\n            flex round=\"xsmall\">\r\n\r\n        <TextInput \r\n            value={props.filter}\r\n            onChange={(e: any) => props.onFilterChange?.(e.target.value)}\r\n          focusIndicator={false}\r\n          plain\r\n          placeholder=\"Search People...\" />\r\n        \r\n      </Box>        \r\n      \r\n      </Box>\r\n\r\n    )\r\n}","import React, { Component, useState } from 'react';\r\n\r\nimport { Box, DataTable, Text, TextInput } from 'grommet'\r\n\r\nimport {\r\n   Search as IoSearch\r\n} from 'grommet-icons'\r\n\r\nimport './index.css';\r\nimport { StaffSearchHeader } from './header';\r\nimport { useQuery } from 'apps/hive-flow/src/gqless';\r\nimport { idText } from 'typescript';\r\n\r\n\r\nexport const StaffList: React.FC<any> = (props) => {\r\n   // const [employees, setEmployees] = useState<any[]>([])\r\n   const [search, setSearch] = useState<string>('')\r\n\r\n   const query = useQuery({\r\n      suspense: false,\r\n      staleWhileRevalidate: true\r\n   })\r\n\r\n   const [direction, setDirection] = useState<\"asc\" | \"desc\" | undefined>()\r\n   const [property, setProperty] = useState<string>()\r\n\r\n\r\n   const people = query.PeopleMany() || []\r\n   // componentWillMount(){\r\n   //    utils.staff.getAll().then((res) => {\r\n   //       this.setState({ employees : res});\r\n   //    });\r\n   // }\r\n\r\n   const filterPeople = (item: any) => {\r\n      if (search.length > 0) {\r\n         return item.name.toLowerCase().includes(search.toLowerCase())\r\n      }\r\n      return true;\r\n   }\r\n\r\n   const sortPeople = (left: any, right: any) => {\r\n      if (property && direction) {\r\n         return (direction == 'asc' ?\r\n            (left[property] == right[property] ? 0 : (left[property] > right[property] ? 1 : -1))\r\n            : (left[property] == right[property] ? 0 : (left[property] < right[property] ? 1 : -1)))\r\n      } else {\r\n         return 0;\r\n      }\r\n   }\r\n\r\n   return (\r\n\r\n      <Box\r\n         style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n\r\n         <StaffSearchHeader\r\n            filter={search}\r\n            onFilterChange={(filter) => setSearch(filter)} />\r\n\r\n         <Box\r\n            flex\r\n            round=\"xsmall\"\r\n            overflow=\"scroll\"\r\n            background=\"neutral-1\">\r\n\r\n            <DataTable\r\n               pin\r\n               onSort={({ property, direction }) => {\r\n                  setProperty(property)\r\n                  setDirection(direction)\r\n               }}\r\n               columns={[\r\n                  {\r\n                     size: 'small',\r\n                     property: 'id',\r\n                     header: \"ID\",\r\n                     sortable: true\r\n                  },\r\n                  {\r\n                     property: 'name',\r\n                     header: \"Name\",\r\n                     sortable: true\r\n                  }\r\n               ]}\r\n               data={people.filter(filterPeople).sort(sortPeople)} />\r\n         </Box>\r\n      </Box>\r\n\r\n   );\r\n\r\n}\r\n\r\n// export default connect((state) => ({\r\n//   token: state.auth.token\r\n// }))(EmployeeList)\r\n","import React, {\r\n  Component, useState\r\n} from 'react';\r\nimport { Box } from 'grommet'\r\nimport { ScheduleView } from '@hexhive/ui';\r\nimport './index.css';\r\nimport { mutation, useRefetch, useMutation, useQuery, resolved } from '../../gqless';\r\nimport moment from 'moment';\r\nimport { schedule as scheduleActions } from '../../actions'\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '@hexhive/auth-ui';\r\nimport { useEffect } from 'react';\r\n\r\nexport const Schedule : React.FC<any> = (props) =>  {\r\n\r\n  const { token, activeUser } = useContext(AuthContext)\r\n\r\n  const [ horizon, setHorizon ] = useState<{start: Date, end: Date}>({\r\n    start: new Date( moment(new Date()).startOf('isoWeek').valueOf() ),\r\n    end: new Date( moment(new Date()).add('1', 'week').valueOf() )\r\n  })\r\n\r\n  const refetch = useRefetch();\r\n\r\n  const query = useQuery({\r\n    suspense: false,\r\n    staleWhileRevalidate: false,\r\n  \r\n  })\r\n\r\n  const [schedule, setSchedule] = useState<any[]>([]) //query.ScheduleMany() //{startDate: horizon.start, endDate: horizon.end}) //?.map((x) => ({...x, project: x?.project})) || [];\r\n\r\n  const projects = query.ProjectMany()?.map((x) => ({...x})) || [];\r\n  const people = query.PeopleMany()?.map((x) => ({...x})) || [];\r\n  const equipment = query.EquipmentMany()?.map((x) => ({...x})) || []\r\n\r\n  const users = query.UserMany?.map((x) => ({...x})) || []\r\n\r\n  const [createItem, info] = useMutation((mutation, args: {item: any}) => {\r\n    const result = mutation.createScheduleItem({item: args.item})\r\n    return {\r\n      item: {\r\n        ...result\r\n      },\r\n      error: null\r\n    }\r\n  }, {\r\n    onCompleted(data) {},\r\n    onError(error) {},\r\n    refetchQueries: [],\r\n    awaitRefetchQueries: true,\r\n    suspense: false,  \r\n  })\r\n\r\n  const [updateItem, infoItem] = useMutation((mutation, args: {id: string, item: any}) => {\r\n    const result = mutation.updateScheduleItem({id: args.id, item: args.item})\r\n    return {\r\n      item: {\r\n        ...result\r\n      },\r\n      error: null\r\n    }\r\n  }, {\r\n    onCompleted(data) {},\r\n    onError(error) {},\r\n    refetchQueries: [query.ScheduleMany({startDate: horizon.start, endDate: horizon.end})],\r\n    awaitRefetchQueries: true,\r\n    suspense: false,  \r\n  })\r\n\r\n  useEffect(() => {\r\n    scheduleActions.getScheduleItems({start: horizon.start, end: horizon.end}, token || '').then((schedule) => {\r\n      setSchedule(schedule)\r\n      console.log(\"Schedule\", schedule);\r\n    });\r\n  }, [])\r\n\r\n  console.log(\"Schedule view\", schedule);\r\n\r\n    return (\r\n      <Box flex className=\"schedule-container\">\r\n        <ScheduleView \r\n          date={horizon.start}\r\n          onHorizonChanged={async (start, end) => {\r\n            console.log(\"Horizon\", start, end)\r\n            setHorizon({start, end})\r\n\r\n            scheduleActions.getScheduleItems({start, end}, token || '').then((schedule) => {\r\n              setSchedule(schedule)\r\n              console.log(\"Schedule\", schedule);\r\n            });\r\n\r\n            // const info = await refetch(query.ScheduleMany({startDate: start, endDate: end}))\r\n            \r\n            //   console.log(\"REFETCH\", info)\r\n          \r\n          }}\r\n          events={(schedule || []).map((x) => ({\r\n            id: x?.id || '',\r\n            people: x?.people || [],\r\n            equipment: x?.equipment || [],\r\n            project: {name: x?.project?.name?.toString() || '', id: x?.project?.id?.toString() || ''},\r\n            notes: x?.notes || [],\r\n            managers: x?.managers || [],\r\n            date: x?.date,\r\n            owner: {id: x?.owner?.id?.toString() || '', name: x?.owner?.name?.toString() || ''}\r\n          }))}\r\n          onCreateItem={(item, ts) => {\r\n            createItem({args: {\r\n              item: {\r\n              ...item,\r\n              date: new Date(ts.valueOf())\r\n            }}}).then(async (data) => {\r\n              //await refetch(() => query.ScheduleMany)\r\n              scheduleActions.getScheduleItems({start: horizon.start, end: horizon.end}, token || '').then((schedule) => {\r\n                setSchedule(schedule)\r\n                console.log(\"Schedule\", schedule);\r\n              });\r\n            })\r\n          }}\r\n\r\n          onSaveItem={(item, ts) => {\r\n            updateItem({args: {\r\n              id: item.id,\r\n              item: {project: item.project,\r\n              people: item.people,\r\n              equipment: item.equipment,\r\n              notes: item.equipment}\r\n            }}).then((data) => {\r\n\r\n            })\r\n          }}\r\n          onCloneItem={(item, dates, newDates) => {\r\n          }}\r\n          user={activeUser}\r\n          users={users}\r\n          projects={projects || []}\r\n          people={people}\r\n          equipment={equipment}\r\n          isLoading={false}/>\r\n      </Box>\r\n    );\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n//import Schedule from '../../schedule';\r\nimport { Box } from 'grommet'\r\n\r\n\r\n// import StaffContactCard from '../../../components/primatives/staff-contact-card';\r\n// import UploadableImage from '../../../components/primatives/uploadable-image';\r\n// import EmployeeSchedule from '../../../components/employee-schedule';\r\n// import utils from '../../../utils';\r\nimport './index.css';\r\nimport { useState } from 'react';\r\nimport { stringToColor } from '@hexhive/utils';\r\n\r\n\r\nexport default (props: any) => {\r\n  const [ employees, setEmployees ] = useState<any[]>([])\r\n  const [ contactDetails, setContactDetails ] = useState<{number: string, email: string}>({number: '', email: ''})\r\n  const [ contactChanged, setContactChanged ] = useState<boolean>(false);\r\n  \r\n  // componentDidMount(){\r\n  // }\r\n\r\n  // componentWillMount(){\r\n  //   utils.staff.getAll().then((res) => {\r\n  //     this.setState({ employees : res});\r\n  //   });\r\n  // }\r\n\r\n\r\n  // componentWillReceiveProps(newProps){\r\n  //   if(this.props !== newProps){\r\n  //     this.props = newProps;\r\n  //     this.setState({\r\n  //       ...newProps\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // updateDetails(key, value){\r\n  //   let { contactDetails } = this.state;\r\n  //   contactDetails[key] = value;\r\n  //   this.setState({contactDetails: contactDetails, contactChanged: true})\r\n  // }\r\n\r\n  // pushDetails(){\r\n  //   let id = this.props.match.params.employeeId;\r\n  //   utils.staff.updateContact(id, this.state.contactDetails).then((r) => {\r\n  //     console.log(\"Details update\", r)\r\n  //   })\r\n  // }\r\n\r\n  // render() {\r\n  //   var id = this.props.match.params.employeeId;\r\n  //   var employee = {} \r\n  //   for(var i = 0; i < this.state.employees.length; i++){\r\n  //     if(this.state.employees[i].ID == id){\r\n  //       employee = this.state.employees[i];\r\n  //       break;\r\n  //     }\r\n  //   } \r\n    return (\r\n      <div className=\"employee-view\">\r\n        <div className=\"employee-top\">\r\n         \r\n\r\n          \r\n        </div>\r\n        <Box className=\"employee-schedule\">\r\n          <div className=\"employee-schedule-view\">\r\n\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    );\r\n}\r\n\r\n/*\r\n <StaffContactCard\r\n            name={employee.Name}\r\n            id={this.props.match.params.employeeId} />\r\n*/\r\n\r\n//            <EmployeeSchedule employee={this.props.match.params.employeeId} />\r\n","import React from 'react';\r\nimport { Box, TextInput, Select } from 'grommet'\r\n\r\nexport interface PlantHeaderProps {\r\n\r\n    filter?: string;\r\n    onFilterChange?: (filter: string) => void;\r\n}\r\n\r\nexport const PlantHeader : React.FC<PlantHeaderProps> = (props) => {\r\n    return (\r\n        <Box\r\n        focusIndicator={false}\r\n        align=\"center\"\r\n        pad={{horizontal: 'xsmall'}}\r\n        margin={{bottom: 'xsmall'}}\r\n        round=\"xsmall\"\r\n        height=\"50px\"\r\n        direction=\"row\"\r\n        background=\"accent-1\"\r\n        >\r\n        <Box\r\n            flex\r\n            round=\"xsmall\"\r\n            background={'#ffffff42'}>\r\n        <TextInput\r\n        \r\n            plain\r\n            value={props.filter}\r\n            onChange={(e: any) => props.onFilterChange?.(e.target.value)}\r\n          focusIndicator={false}\r\n          \r\n          placeholder=\"Search Equipment...\" />\r\n        </Box>\r\n      </Box>\r\n    )\r\n}","import React, {\r\n  Component, useState\r\n} from 'react';\r\n\r\n\r\n// import utils from '../../../utils';\r\nimport moment from 'moment';\r\n\r\nimport './index.css';\r\nimport { Box, DataTable } from 'grommet';\r\nimport { PlantHeader } from './header';\r\nimport { useQuery } from '../../../gqless';\r\n\r\n\r\nexport const PlantList: React.FC<any> = (props) => {\r\n\r\n  const [search, setSearch] = useState<string>('');\r\n\r\n  const listKeys = [\r\n    { property: 'id', header: 'ID', size: 'small', sortable: true },\r\n    { property: 'name', header: 'Name', sortable: true },\r\n    { property: 'registration', header: 'Registration', sortable: true },\r\n    { property: 'status', header: 'Status', sortable: true },\r\n  ]\r\n\r\n  const query = useQuery({\r\n    suspense: false,\r\n    staleWhileRevalidate: true\r\n  });\r\n\r\n\r\n  const [ direction, setDirection ] = useState<\"asc\" | \"desc\" | undefined>()\r\n  const [ property, setProperty ] = useState<string>()\r\n\r\n\r\n  const sortEquipment = (left: any, right: any) => {\r\n    if(property && direction){\r\n      return (direction == 'asc' ?\r\n          (left[property] == right[property] ? 0 : (left[property] > right[property] ? 1 : -1))\r\n          : (left[property] == right[property] ? 0 : (left[property] < right[property] ? 1 : -1)))\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const filterEquipment = (item: any) => {\r\n\r\n    if (search.length > 0) {\r\n        let name = item?.name?.toLowerCase() || ''\r\n        let registration = item?.registration?.toLowerCase() || ''\r\n        let id = `${item?.id}`.toLowerCase() || ''\r\n\r\n        let _search = search.toLowerCase() || ''\r\n\r\n\r\n        return registration.indexOf(_search) > -1 || name?.indexOf(_search) > -1 || id?.indexOf(_search) > -1 || `${id} ${name}`.indexOf(_search) > -1\r\n    }\r\n\r\n    return true;\r\n\r\n   // return items.map((x) => ({...x, price: formatter.format(x.price)}))\r\n  }\r\n\r\n  const listData = query?.EquipmentMany() || [];\r\n\r\n  // constructor(props: any){\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     alerts: [],\r\n  //     emergencyAlerts: [],\r\n  //     listKeys: ,\r\n  //     listData: []\r\n  //   }\r\n  // }\r\n\r\n  const statusColor = (details: any) => {\r\n    if (details) {\r\n      // let status = utils.plant.getStatus(details);\r\n\r\n      // switch(status){\r\n      //   case 'VALID':\r\n      //     return null;\r\n      //   case 'EXPIRING':\r\n      //     return 'rgba(255, 121, 0, 1)';\r\n      //   case 'EXPIRED':\r\n      //     return 'rgba(255, 0, 0, 1)';\r\n      //   default:\r\n      //     return null;\r\n      // }\r\n    }\r\n  }\r\n\r\n  // componentDidMount(){\r\n  // utils.plant.getAll().then((plants) => {\r\n  //   this.setState({\r\n  //     emergencyAlerts: plants.filter((a) => utils.plant.getStatus(a.details) == \"EXPIRED\"),\r\n  //     alerts: plants.filter((a) => utils.plant.getStatus(a.details) == \"EXPIRING\"),\r\n  //     listData: plants.map((x) => ({\r\n  //       ...x,\r\n  //       VehicleType: x.details ? x.details.vehicleType : '',\r\n  //       colour: this.statusColor(x.details),\r\n  //       status: utils.plant.getStatus(x.details)\r\n  //   }))})\r\n  // })\r\n  // }\r\n\r\n  // _selectPlant(p: any){\r\n  // if(p.Registration){\r\n  //   this.props.history.push(`/dashboard/plant/${p.Registration}`)\r\n  // }\r\n  // }\r\n\r\n  const selectPlant = (item: any) => {\r\n\r\n  }\r\n  return (\r\n    <Box\r\n      flex\r\n      className=\"plants-page\">\r\n      <PlantHeader filter={search} onFilterChange={(search) => setSearch(search)} />\r\n      <Box\r\n        round=\"xsmall\"\r\n        overflow=\"scroll\"\r\n        flex\r\n        background=\"neutral-1\"\r\n      >\r\n        <DataTable\r\n          pin\r\n          onSort={({property, direction}) => {\r\n            setProperty(property)\r\n            setDirection(direction)\r\n          }}\r\n          onClickRow={selectPlant}\r\n          columns={listKeys}\r\n          data={listData.filter(filterEquipment).sort(sortEquipment)} />\r\n      </Box>\r\n\r\n      {/* <SortedList \r\n          orderBy={\"ID\"}\r\n          alerts={this.state.alerts}\r\n          emergencyAlerts={this.state.emergencyAlerts}\r\n          keys={this.state.listKeys}\r\n          data={this.state.listData}\r\n          onClick={this._selectPlant.bind(this)}\r\n          />  */}\r\n    </Box>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport { Box, TextInput, Select } from 'grommet'\r\nimport { Maybe } from '../../gqless';\r\n\r\nexport interface QuoteHeaderProps {\r\n    quotes?: any[]\r\n    filter?: {search?: string, status?: string};\r\n    onFilterChange?: (filter: {search?: string, status?: string}) => void;\r\n}\r\n\r\nexport const QuoteHeader : React.FC<QuoteHeaderProps> = (props) => {\r\n    return (\r\n        <Box\r\n        pad={{horizontal: 'xsmall'}}\r\n        align=\"center\"\r\n        margin={{bottom: 'xsmall'}}\r\n        round=\"xsmall\"\r\n        height=\"50px\"\r\n        direction=\"row\"\r\n        gap=\"xsmall\"\r\n        background=\"accent-1\"\r\n        >\r\n        <Box\r\n            flex\r\n            round=\"xsmall\"\r\n            background=\"#ffffff42\">\r\n  <TextInput \r\n            value={props.filter?.search}\r\n            onChange={(e: any) => props.onFilterChange?.({search: e.target.value})}\r\n          focusIndicator={false}\r\n          plain\r\n          placeholder=\"Search Quotes\" />\r\n        </Box>\r\n      <Box \r\n        round=\"xsmall\"\r\n        background=\"#ffffff42\"\r\n        >\r\n\r\n        <Select  \r\n            value={props.filter?.status}\r\n            onChange={({option}) => props.onFilterChange?.({search: props.filter?.search, status: option })}\r\n          plain\r\n          placeholder=\"Status\"\r\n          options={[\"All\"].concat(Array.from(new Set(props.quotes?.filter((a) => a != undefined).map((x: any) => x.status || ''))))} \r\n          />\r\n        </Box>\r\n       \r\n      </Box>\r\n    )\r\n}","import { Box, ColumnConfig, DataTable } from 'grommet';\r\nimport React, {\r\n  useEffect, useState\r\n} from 'react';\r\nimport { useQuery } from '../../gqless';\r\n\r\n// import utils from '../../utils';\r\nimport { QuoteHeader } from './header';\r\n\r\nimport './index.css';\r\n\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n  style: 'currency',\r\n  currency: 'USD'\r\n});\r\n\r\n\r\nconst Quotes: React.FC<any> = (props) => {\r\n  const [filter, setFiler] = useState<any>({})\r\n\r\n  const [direction, setDirection] = useState<\"asc\" | \"desc\">()\r\n  const [property, setProperty] = useState<string>()\r\n\r\n  // const [listData, setListData] = useState<any[]>([])\r\n\r\n  const listKeys : ColumnConfig<{id: string; name: any; price: any;}>[] = [\r\n    { property: 'id', header: 'Quote ID', sortable: true, size: 'small', primary: true },\r\n    { property: 'name', header: 'Quote Name', sortable: true, size: 'large' },\r\n    { property: 'status', header: 'Status', sortable: true, size: 'small'},\r\n    { property: 'price', header: 'Total Value',  render: (row) => formatter.format(row.price), sortable: true, size: 'small', align: 'start' }\r\n  ]\r\n\r\n  const query = useQuery({\r\n    suspense: false,\r\n    staleWhileRevalidate: true\r\n  })\r\n\r\n  const listData = query.QuoteMany()?.map((x) => ({\r\n    ...x,\r\n    id: parseInt(x?.id || '0')\r\n  }))\r\n\r\n  useEffect(() => {\r\n    // utils.quote.getAll().then((quotes) => {\r\n    //   setListData(quotes.map((x: any) => ({ id: `${x?.QuoteID}`,  status: x?.Status, name: x?.Name, price: parseInt(x?.TotalLinePrice?.toFixed(0)) || 0 })))\r\n    // })\r\n  }, [])\r\n\r\n  const sortQuotes = (left: any, right: any) => {\r\n    if(property && direction){\r\n      return (direction == 'asc' ?\r\n          (left[property] == right[property] ? 0 : (left[property] > right[property] ? 1 : -1))\r\n          : (left[property] == right[property] ? 0 : (left[property] < right[property] ? 1 : -1)))\r\n    }else{\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const filterQuotes = (item: any) => {\r\n \r\n    if (property && direction) {\r\n      // if(direction == \"asc\"){\r\n      //   items = sort(items.slice()).asc((u: any) => parseInt(u[property])) //[{[direction]: u => u[property]}])\r\n      // }else if(direction == \"desc\"){\r\n      //   items = sort(items.slice()).desc((u: any) => u[property])\r\n      // }\r\n\r\n\r\n      // items = items?.sort((first, last) => {\r\n      //   let a: any = first;\r\n      //   let b: any = last;\r\n\r\n      //   var left = a[property]; //a != null ? a : ALMOST_ZERO;\r\n      //   var right = b[property]; // != null ? b : ALMOST_ZERO;\r\n\r\n      //   console.log( (parseInt(left) > parseInt(right)) )\r\n\r\n      //   return (direction == 'asc' ?\r\n      //     (a[property] == b[property] ? 0 : (a[property] > b[property] ? 1 : -1))\r\n      //     : (a[property] == b[property] ? 0 : (a[property] < b[property] ? 1 : -1)))\r\n      // })\r\n    }\r\n\r\n     if(filter.status && filter.status != \"All\"){\r\n       return item.status === filter.status;\r\n      //  items = items?.filter((a) => a.status == filter.status)\r\n     }\r\n\r\n    if (filter.search) {\r\n        let name = item?.name?.toLowerCase() || ''\r\n        let id = `${item?.id}`.toLowerCase() || ''\r\n\r\n        let search = filter.search.toLowerCase() || ''\r\n\r\n\r\n        return name?.indexOf(search) > -1 || id?.indexOf(search) > -1 || `${id} ${name}`.indexOf(search) > -1\r\n    }\r\n\r\n    return true;\r\n\r\n   // return items.map((x) => ({...x, price: formatter.format(x.price)}))\r\n  }\r\n\r\n  const formatQuote = (item: any) => {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    });\r\n\r\n    return {\r\n      ...item,\r\n      price: item.price //\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      direction=\"column\"\r\n      flex>\r\n      <QuoteHeader\r\n        quotes={listData || []}\r\n        filter={filter}\r\n        onFilterChange={(filter) => setFiler(filter)}\r\n      />\r\n      <Box\r\n        flex\r\n        overflow={{ vertical: 'auto' }}\r\n        round=\"xsmall\"\r\n        background=\"neutral-1\">\r\n\r\n        <DataTable\r\n          pin\r\n          onSort={({ property, direction }) => {\r\n            setProperty(property)\r\n            setDirection(direction)\r\n          }}\r\n          sort={(property && direction) ? {property, external: true, direction} : undefined}\r\n          columns={listKeys}\r\n          data={listData?.filter(filterQuotes).sort(sortQuotes).map(formatQuote)} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n}\r\n\r\nexport default Quotes;","import React, { Component, useState} from 'react';\r\n\r\nimport { Switch, Link, Route , generatePath} from 'react-router-dom';\r\n\r\nimport logo from '../../logo.svg';\r\n\r\n//views, logo\r\nimport { Sidebar} from '@hexhive/ui';\r\n\r\n// import RoutedView from '../../components/primatives/routed-view';\r\n\r\nimport {\r\n  Calendar as Schedule,\r\n  People,\r\n  Timeline as TimelineIcon,\r\n  Estimates,\r\n  Projects,\r\n  Equipment,\r\n  Hiveflow\r\n} from '../../assets'\r\n\r\nimport { Box, Spinner, Text } from 'grommet';\r\nimport './index.css';\r\nimport { JobList } from '../jobs/job-list';\r\nimport { SingleJob } from '../jobs/job-one';\r\nimport { StaffList } from '../staff/employee-list';\r\nimport {Schedule as ScheduleView } from '../schedule';\r\nimport employeeOne from '../staff/employee-one';\r\nimport { PlantList } from '../plant/plant-list';\r\nimport Quotes from '../quotes';\r\n\r\nconst Timeline = React.lazy(() => import('../timeline/Timeline'))\r\n\r\n// const Schedule = React.lazy(() => import('../schedule'))\r\n// const Quotes = React.lazy(() => import('../quotes'))\r\n// const Jobs = React.lazy(() => import('../jobs'))\r\n// const Employees = React.lazy(() => import('../staff'))\r\n// // const MonthView = React.lazy(() => import('../../components/workhub/planning-calendar'))\r\n// const Plant = React.lazy(() => import('../plant'))\r\n\r\n\r\nexport const Dashboard : React.FC<any> = (props: any) => { \r\n\r\n  //  const [ view, setView ] = React.useState('schedule')\r\n  // const [ alerts, setAlerts ] = useState<string[]>([])\r\n\r\n  const alerts = []\r\n  const active = window.location.pathname.replace(props.match.url, '')\r\n\r\n  const views = () => {\r\n    let login_type =  'email' //props.user.login_type;\r\n    let views = []\r\n    if(login_type == 'email'){\r\n      views = [{\r\n                  icon: <Schedule />,\r\n                  label: \"Schedule\",\r\n                  component: <> </>,\r\n                },\r\n                {\r\n                  icon: <TimelineIcon />,\r\n                  label: \"Timeline\",\r\n                  component: <></>\r\n                },\r\n                {\r\n                  icon: <Estimates />,\r\n                  label: \"Quotes\",\r\n                  component: <></>,\r\n                },\r\n                {\r\n                  icon: <Projects />,\r\n                  label: \"Projects\",\r\n                  component: <></>\r\n                },\r\n                {\r\n                  icon: <People />,\r\n                  label: \"People\",\r\n                  component: <></>\r\n                }, \r\n                { \r\n                  icon: <Equipment />,\r\n                  label: \"Equipment\",\r\n                  alerts: alerts.length,\r\n                  component: <></>\r\n                }\r\n      ]\r\n    }else{\r\n      views = [\r\n          {\r\n            icon: \"schedule\",\r\n            label: \"Schedule\",\r\n            component: <></>,\r\n          },\r\n          {\r\n            icon: 'check_circle_outline',\r\n            label: \"Projects\",\r\n            component: <></>\r\n          },\r\n          {\r\n            icon: 'people',\r\n            label: \"People\",\r\n            component: <></>\r\n          }, \r\n          { \r\n            icon: 'directions_car',\r\n            label: \"Equipment\",\r\n            alerts: alerts.length,\r\n            component: <></>\r\n          }\r\n\r\n      ]\r\n    }\r\n    return views;\r\n  }\r\n\r\n  console.log(props.match)\r\n\r\n  // componentDidMount(){\r\n\r\n  //   utils.plant.getAll().then((plants) => {\r\n  //     console.log(plants)\r\n  //     if(!plants.error){\r\n  //       this.setState({\r\n  //         alerts: (plants || []).filter((a) => utils.plant.getStatus(a.details) != \"VALID\"),\r\n  //       })\r\n  //     }\r\n  //   })\r\n  //     //Using testauth instead of actual route, change when\r\n  //     //there is dashboard information for organizations\r\n  //  }\r\n      \r\n\r\n      return (\r\n         <div className=\"dashboard\">\r\n              <Sidebar\r\n                onLogoClick={() => {\r\n                    window.location.href = \"/dashboard\";\r\n                }}\r\n                logo={<Hiveflow style={{filter: 'invert(1)'}}/>}\r\n                active={active}\r\n                menu={views()} \r\n                onSelect={(x: any) => {\r\n                  let path = generatePath(`${props.match.url}:path`, {path: x.toLowerCase()})\r\n                  props.history.push(path)\r\n                }}/>\r\n\r\n            <Box \r\n              background=\"neutral-4\"\r\n              flex \r\n              pad=\"xsmall\">\r\n            <React.Suspense fallback={(\r\n              <Box \r\n                align=\"center\"\r\n                justify=\"center\"\r\n                flex>\r\n                <Spinner size=\"medium\" />\r\n                <Text>Loading ...</Text>\r\n              </Box>\r\n            )}>\r\n            <Switch>\r\n                <Route path={`/schedule`} component={ScheduleView} />\r\n                <Route path={`/projects`} exact component={JobList} />\r\n                <Route path={`/projects/:id`} component={SingleJob} />\r\n                <Route path={`/quotes`} exact component={Quotes} />\r\n                <Route path={`/people`} exact component={StaffList} />\r\n                <Route path={`/people/:id`} component={employeeOne} />\r\n                <Route path={`/equipment`} exact component={PlantList} />\r\n                <Route path={`/timeline`} component={Timeline} />\r\n            </Switch>\r\n              \r\n            </React.Suspense>\r\n            </Box>\r\n                {/*<div style={{display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'flex-end', paddingRight: '10px'}}>\r\n               <UserIcon style={{fontSize: '30px', cursor: 'pointer'}} onClick={() => {this.props.history.push('/admin')}}/>\r\n                </div>*/}\r\n\r\n \r\n         </div>\r\n      );\r\n  \r\n}\r\n\r\n/*\r\n<RoutedView \r\n                views={views()} />\r\n*/\r\n\r\n// export default connect((state) => {\r\n//   let token = state.auth.token;\r\n//   if(token){\r\n//     return {user: jwtDecode(token)}\r\n//   }else{\r\n//     return {user: {}}\r\n//   }\r\n// }, (dispatch) => ({\r\n\r\n// }))(App);\r\n","export const BaseStyle = {\r\n    global: {\r\n      colors: {\r\n        \"brand\": '#55556B',//003f49 //054c54\r\n        \"light-1\": \"#EAD9CE\",\r\n        \"dark-1\": \"#003f49\",\r\n        \"neutral-1\": \"#F3E6DC\",\r\n        \"neutral-2\": \"#D6B8A7\",\r\n        \"neutral-3\": \"#605755\",\r\n        \"neutral-4\": \"#383232\",\r\n        \"accent-1\": \"#A3B696\",\r\n        \"accent-2\": \"#65695C\",\r\n        \"accent-3\": \"\",\r\n        placeholder: \"#383232\"\r\n      }\r\n    },\r\n    tabs: {\r\n        panel: {\r\n            extend:  `display: flex; flex-direction: column;`\r\n        }\r\n    },\r\n\r\n    dataTable: {\r\n        header: {\r\n            background: 'accent-2'\r\n        },\r\n        pinned: {\r\n            header: {\r\n                background: 'accent-2'\r\n            }\r\n        }\r\n    },\r\n    select: {\r\n        options: {\r\n            container: {\r\n                background: '#ffffff69'\r\n            }\r\n        }\r\n    },\r\n    layer: {\r\n        background: \"neutral-2\"\r\n    }\r\n    \r\n  }","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport {Grommet} from 'grommet'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport { AuthProvider } from '@hexhive/auth-ui';\r\nimport {Dashboard} from './views/dashboard';\r\nimport { BaseStyle } from '@hexhive/styles'\r\n\r\nfunction App() {\r\n  console.log(process.env.PUBLIC_URL)\r\n  return (\r\n    <AuthProvider\r\n      authorizationServer={process.env.NODE_ENV == 'production' ? \"https://api.hexhive.io\" : \"http://localhost:8090\"}\r\n      clientId=\"hexhive.io\"\r\n      clientSecret=\"tester\"\r\n      redirectUri={process.env.NODE_ENV == 'production' ? \"https://hexhive.io/dashboard/flow\" : \"http://localhost:3001/dashboard\"}>\r\n        <Grommet \r\n          themeMode=\"dark\"\r\n          plain \r\n          theme={BaseStyle}>  \r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <div className=\"App\">\r\n                  \r\n                  <Route path={`/`} component={Dashboard} />\r\n                </div>\r\n              </Router>\r\n        </Grommet>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}