name: Build Dashboard

on:
  push:
    branches:
      - staging
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

jobs:

  build_collectors:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            thetechcompany/hive-flow-data-collector
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: ./packages/images/data-producer
          file: ./packages/images/data-producer/Dockerfile
          push:  ${{ github.event_name != 'pull_request' }}
          tags:  ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_ENV=github
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build_images:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: ./packages/images/alpine-consumer
          file: ./packages/images/alpine-consumer/Dockerfile
          push: true
          tags: thetechcompany/hexhive-consumer:latest
          build-args: |
            BUILD_ENV=github
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  
  build_frontend-server:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: .
          file: ./packages/backends/hive-frontend/Dockerfile
          push: true
          tags: thetechcompany/hexhive-frontend-server:latest-next
          build-args: |
            BUILD_ENV=github
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  
  build_gateway:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push 
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          context: .
          file: ./HiveGateway.Dockerfile
          push: true
          tags: thetechcompany/hexhive-gateway:latest-next
          build-args: |
            BUILD_ENV=github
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build_coreapps:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        apps: [dashboard, header, settings]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - run: yarn

      - run: lerna bootstrap --scope @hexhive-core/${{ matrix.apps }} --include-dependencies

      - run: export REACT_APP_API="https://staging-api.hexhive.io"
      - run: export REACT_APP_URL="https://next.hexhive.io"
      - run: export PUBLIC_PATH="https://staging-apps.hexhive.io/${{matrix.apps}}/"
      
      - name: Build web
        run: (export REACT_APP_URL="https://next.hexhive.io" PUBLIC_PATH="https://staging-apps.hexhive.io/${{matrix.apps}}/" REACT_APP_API="https://staging-api.hexhive.io" NODE_ENV=production CI=false; lerna run build --scope @hexhive-core/${{ matrix.apps }} --include-dependencies)
      
      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      - name: Make Bucket URL
        run: echo "BUCKET_URL=S3_STAGING_${{matrix.apps}}_BUCKET" | tr a-z A-Z >> $GITHUB_ENV

      - name: Upload new web-build
        run: |
          aws s3 sync packages/core-apps/hive-${{ matrix.apps }}/dist/ s3://${{ secrets.STAGING_APP_BUCKET }}/${{matrix.apps}} --delete
